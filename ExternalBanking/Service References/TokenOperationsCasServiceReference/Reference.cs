//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExternalBanking.TokenOperationsCasServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenOperationsInfo", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary.TokenOpera" +
        "tions")]
    [System.SerializableAttribute()]
    public partial class TokenOperationsInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTP2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TokenIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatorID {
            get {
                return this.CreatorIDField;
            }
            set {
                if ((this.CreatorIDField.Equals(value) != true)) {
                    this.CreatorIDField = value;
                    this.RaisePropertyChanged("CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GID {
            get {
                return this.GIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GIDField, value) != true)) {
                    this.GIDField = value;
                    this.RaisePropertyChanged("GID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTP {
            get {
                return this.OTPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTPField, value) != true)) {
                    this.OTPField = value;
                    this.RaisePropertyChanged("OTP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTP2 {
            get {
                return this.OTP2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTP2Field, value) != true)) {
                    this.OTP2Field = value;
                    this.RaisePropertyChanged("OTP2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TokenId {
            get {
                return this.TokenIdField;
            }
            set {
                if ((this.TokenIdField.Equals(value) != true)) {
                    this.TokenIdField = value;
                    this.RaisePropertyChanged("TokenId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDescription {
            get {
                return this.UserDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDescriptionField, value) != true)) {
                    this.UserDescriptionField = value;
                    this.RaisePropertyChanged("UserDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenOperationsResult", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary.TokenOpera" +
        "tions")]
    [System.SerializableAttribute()]
    public partial class TokenOperationsResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultDescription {
            get {
                return this.ResultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultDescriptionField, value) != true)) {
                    this.ResultDescriptionField = value;
                    this.RaisePropertyChanged("ResultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultValue {
            get {
                return this.ResultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultValueField, value) != true)) {
                    this.ResultValueField = value;
                    this.RaisePropertyChanged("ResultValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenOperationsSpecificUserResponce", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary.TokenOpera" +
        "tions")]
    [System.SerializableAttribute()]
    public partial class TokenOperationsSpecificUserResponce : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSessionClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSessionClosed {
            get {
                return this.IsSessionClosedField;
            }
            set {
                if ((this.IsSessionClosedField.Equals(value) != true)) {
                    this.IsSessionClosedField = value;
                    this.RaisePropertyChanged("IsSessionClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary")]
    public enum SourceType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bank = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaOnline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaOnlineXML = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmSoft = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileBanking = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBanking = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInTerminal = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCashTerminal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinesTab = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSTerminal = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TokenOperationsCasServiceReference.ITokenOperationsCas")]
    public interface ITokenOperationsCas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateTokenResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, ulong customerNumber, string regEmail, int customerQuality, bool isRegistered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateTokenResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, ulong customerNumber, string regEmail, int customerQuality, bool isRegistered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateDevice", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateDeviceResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateDevice(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateDevice", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateDeviceResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateDeviceAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateSeed", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateSeedResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateSeed(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateSeed", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateSeedResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateSeedAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/BlockToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/BlockTokenResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult BlockToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/BlockToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/BlockTokenResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> BlockTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/GetSpecificUserInfo", ReplyAction="http://tempuri.org/ITokenOperationsCas/GetSpecificUserInfoResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsSpecificUserResponce GetSpecificUserInfo(string UserName, string IpAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/GetSpecificUserInfo", ReplyAction="http://tempuri.org/ITokenOperationsCas/GetSpecificUserInfoResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsSpecificUserResponce> GetSpecificUserInfoAsync(string UserName, string IpAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/BlockUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/BlockUserResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult BlockUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/BlockUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/BlockUserResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> BlockUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/DeactivateUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/DeactivateUserResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult DeactivateUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/DeactivateUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/DeactivateUserResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> DeactivateUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/UnBlockUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/UnBlockUserResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult UnBlockUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/UnBlockUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/UnBlockUserResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> UnBlockUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/UnlockUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/UnlockUserResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult UnlockUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string phoneNumber, ulong customerNumber, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, byte lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/UnlockUser", ReplyAction="http://tempuri.org/ITokenOperationsCas/UnlockUserResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> UnlockUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string phoneNumber, ulong customerNumber, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, byte lang);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/UnlockToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/UnlockTokenResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult UnlockToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/UnlockToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/UnlockTokenResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> UnlockTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateMobileToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateMobileTokenResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateMobileToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string password, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, bool isRegistered, string phoneNumber, ulong customerNumber, string regEmail, int customerQuality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ActivateMobileToken", ReplyAction="http://tempuri.org/ITokenOperationsCas/ActivateMobileTokenResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateMobileTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string password, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, bool isRegistered, string phoneNumber, ulong customerNumber, string regEmail, int customerQuality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/GetPinCode", ReplyAction="http://tempuri.org/ITokenOperationsCas/GetPinCodeResponse")]
        string GetPinCode(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/GetPinCode", ReplyAction="http://tempuri.org/ITokenOperationsCas/GetPinCodeResponse")]
        System.Threading.Tasks.Task<string> GetPinCodeAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ResetUserPasswordManualy", ReplyAction="http://tempuri.org/ITokenOperationsCas/ResetUserPasswordManualyResponse")]
        ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ResetUserPasswordManualy(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITokenOperationsCas/ResetUserPasswordManualy", ReplyAction="http://tempuri.org/ITokenOperationsCas/ResetUserPasswordManualyResponse")]
        System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ResetUserPasswordManualyAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITokenOperationsCasChannel : ExternalBanking.TokenOperationsCasServiceReference.ITokenOperationsCas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TokenOperationsCasClient : System.ServiceModel.ClientBase<ExternalBanking.TokenOperationsCasServiceReference.ITokenOperationsCas>, ExternalBanking.TokenOperationsCasServiceReference.ITokenOperationsCas {
        
        public TokenOperationsCasClient() {
        }
        
        public TokenOperationsCasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TokenOperationsCasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenOperationsCasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TokenOperationsCasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, ulong customerNumber, string regEmail, int customerQuality, bool isRegistered) {
            return base.Channel.ActivateToken(tInfo, customerNumber, regEmail, customerQuality, isRegistered);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, ulong customerNumber, string regEmail, int customerQuality, bool isRegistered) {
            return base.Channel.ActivateTokenAsync(tInfo, customerNumber, regEmail, customerQuality, isRegistered);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateDevice(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.ActivateDevice(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateDeviceAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.ActivateDeviceAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateSeed(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.ActivateSeed(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateSeedAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.ActivateSeedAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult BlockToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.BlockToken(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> BlockTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.BlockTokenAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsSpecificUserResponce GetSpecificUserInfo(string UserName, string IpAddress) {
            return base.Channel.GetSpecificUserInfo(UserName, IpAddress);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsSpecificUserResponce> GetSpecificUserInfoAsync(string UserName, string IpAddress) {
            return base.Channel.GetSpecificUserInfoAsync(UserName, IpAddress);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult BlockUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.BlockUser(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> BlockUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.BlockUserAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult DeactivateUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.DeactivateUser(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> DeactivateUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.DeactivateUserAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult UnBlockUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.UnBlockUser(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> UnBlockUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.UnBlockUserAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult UnlockUser(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string phoneNumber, ulong customerNumber, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, byte lang) {
            return base.Channel.UnlockUser(tInfo, phoneNumber, customerNumber, sourceType, lang);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> UnlockUserAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string phoneNumber, ulong customerNumber, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, byte lang) {
            return base.Channel.UnlockUserAsync(tInfo, phoneNumber, customerNumber, sourceType, lang);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult UnlockToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.UnlockToken(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> UnlockTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.UnlockTokenAsync(tInfo);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ActivateMobileToken(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string password, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, bool isRegistered, string phoneNumber, ulong customerNumber, string regEmail, int customerQuality) {
            return base.Channel.ActivateMobileToken(tInfo, password, sourceType, isRegistered, phoneNumber, customerNumber, regEmail, customerQuality);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ActivateMobileTokenAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo, string password, ExternalBanking.TokenOperationsCasServiceReference.SourceType sourceType, bool isRegistered, string phoneNumber, ulong customerNumber, string regEmail, int customerQuality) {
            return base.Channel.ActivateMobileTokenAsync(tInfo, password, sourceType, isRegistered, phoneNumber, customerNumber, regEmail, customerQuality);
        }
        
        public string GetPinCode(string cardNumber) {
            return base.Channel.GetPinCode(cardNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetPinCodeAsync(string cardNumber) {
            return base.Channel.GetPinCodeAsync(cardNumber);
        }
        
        public ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult ResetUserPasswordManualy(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.ResetUserPasswordManualy(tInfo);
        }
        
        public System.Threading.Tasks.Task<ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsResult> ResetUserPasswordManualyAsync(ExternalBanking.TokenOperationsCasServiceReference.TokenOperationsInfo tInfo) {
            return base.Channel.ResetUserPasswordManualyAsync(tInfo);
        }
    }
}
