//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.DepositOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.UtilityPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReestrUtilityPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.BudgetPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.InternationalPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CurrencyExchangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransitCurrencyExchangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReestrTransferOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.FastTransferPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReceivedFastTransferPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReferenceOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ChequeBookOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CashOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.StatmentByEmailOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.SwiftCopyOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CustomerDataOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CreditLineTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountReOpenOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicUtilityPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicSwiftStatementOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicBudgetPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountClosingOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransitPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CashPosPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ServicePaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ChequeBookReceiveOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardReReleaseOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardRegistrationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.DepositCasePenaltyMatureOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardReNewRePlace))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardReNewOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardRePlaceOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CashBookOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CTOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CTPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CTLoanMatureOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CredentialActivationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransferCallContractTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.DepositCaseOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransferToShopOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.InsuranceOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardDataChangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountDataChangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountAdditionalDataRemovableOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardStatusChangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.FactoringTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.LoanProductTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.DepositDataChangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.LoanProductOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.LoanProductActivationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountFreezeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountUnfreezeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.FeeForServiceProvidedOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardUnpaidPercentPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.RemovalOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CredentialOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CredentialTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.DepositTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ServicePaymentNoteOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PensionApplicationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PensionApplicationTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransferCallContractOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.MatureOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardClosingOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicTerminationOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransferApproveOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransferByCallChangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder))]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails> AdditionalParametrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.OrderAttachment> AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DailyTransactionsLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DebitAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.OrderFee> FeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForThirdPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitOfDayToAnothersAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LimitOfDayToOwnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.OPPerson OPPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OperationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.OrderQuality QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.SourceType SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.OrderType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.User userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails> AdditionalParametrs {
            get {
                return this.AdditionalParametrsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalParametrsField, value) != true)) {
                    this.AdditionalParametrsField = value;
                    this.RaisePropertyChanged("AdditionalParametrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.OrderAttachment> Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DailyTransactionsLimit {
            get {
                return this.DailyTransactionsLimitField;
            }
            set {
                if ((this.DailyTransactionsLimitField.Equals(value) != true)) {
                    this.DailyTransactionsLimitField = value;
                    this.RaisePropertyChanged("DailyTransactionsLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DebitAccount {
            get {
                return this.DebitAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DebitAccountField, value) != true)) {
                    this.DebitAccountField = value;
                    this.RaisePropertyChanged("DebitAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.OrderFee> Fees {
            get {
                return this.FeesField;
            }
            set {
                if ((object.ReferenceEquals(this.FeesField, value) != true)) {
                    this.FeesField = value;
                    this.RaisePropertyChanged("Fees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForThirdPerson {
            get {
                return this.ForThirdPersonField;
            }
            set {
                if ((this.ForThirdPersonField.Equals(value) != true)) {
                    this.ForThirdPersonField = value;
                    this.RaisePropertyChanged("ForThirdPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LimitOfDayToAnothersAccount {
            get {
                return this.LimitOfDayToAnothersAccountField;
            }
            set {
                if ((this.LimitOfDayToAnothersAccountField.Equals(value) != true)) {
                    this.LimitOfDayToAnothersAccountField = value;
                    this.RaisePropertyChanged("LimitOfDayToAnothersAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LimitOfDayToOwnAccount {
            get {
                return this.LimitOfDayToOwnAccountField;
            }
            set {
                if ((this.LimitOfDayToOwnAccountField.Equals(value) != true)) {
                    this.LimitOfDayToOwnAccountField = value;
                    this.RaisePropertyChanged("LimitOfDayToOwnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.OPPerson OPPerson {
            get {
                return this.OPPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.OPPersonField, value) != true)) {
                    this.OPPersonField = value;
                    this.RaisePropertyChanged("OPPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OperationDate {
            get {
                return this.OperationDateField;
            }
            set {
                if ((this.OperationDateField.Equals(value) != true)) {
                    this.OperationDateField = value;
                    this.RaisePropertyChanged("OperationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberField, value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.OrderQuality Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.SourceType Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((this.SubTypeField.Equals(value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubTypeDescription {
            get {
                return this.SubTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeDescriptionField, value) != true)) {
                    this.SubTypeDescriptionField = value;
                    this.RaisePropertyChanged("SubTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.OrderType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.User user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountPermissionGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AvailableBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FreezeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort JointTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JointTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OpenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UnUsedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UnUsedAmountDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountDescription {
            get {
                return this.AccountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDescriptionField, value) != true)) {
                    this.AccountDescriptionField = value;
                    this.RaisePropertyChanged("AccountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountPermissionGroup {
            get {
                return this.AccountPermissionGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountPermissionGroupField, value) != true)) {
                    this.AccountPermissionGroupField = value;
                    this.RaisePropertyChanged("AccountPermissionGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountTypeDescription {
            get {
                return this.AccountTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeDescriptionField, value) != true)) {
                    this.AccountTypeDescriptionField = value;
                    this.RaisePropertyChanged("AccountTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AvailableBalance {
            get {
                return this.AvailableBalanceField;
            }
            set {
                if ((this.AvailableBalanceField.Equals(value) != true)) {
                    this.AvailableBalanceField = value;
                    this.RaisePropertyChanged("AvailableBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FreezeDate {
            get {
                return this.FreezeDateField;
            }
            set {
                if ((this.FreezeDateField.Equals(value) != true)) {
                    this.FreezeDateField = value;
                    this.RaisePropertyChanged("FreezeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort JointType {
            get {
                return this.JointTypeField;
            }
            set {
                if ((this.JointTypeField.Equals(value) != true)) {
                    this.JointTypeField = value;
                    this.RaisePropertyChanged("JointType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JointTypeDescription {
            get {
                return this.JointTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JointTypeDescriptionField, value) != true)) {
                    this.JointTypeDescriptionField = value;
                    this.RaisePropertyChanged("JointTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OpenDate {
            get {
                return this.OpenDateField;
            }
            set {
                if ((this.OpenDateField.Equals(value) != true)) {
                    this.OpenDateField = value;
                    this.RaisePropertyChanged("OpenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber {
            get {
                return this.ProductNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true)) {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UnUsedAmount {
            get {
                return this.UnUsedAmountField;
            }
            set {
                if ((this.UnUsedAmountField.Equals(value) != true)) {
                    this.UnUsedAmountField = value;
                    this.RaisePropertyChanged("UnUsedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UnUsedAmountDate {
            get {
                return this.UnUsedAmountDateField;
            }
            set {
                if ((this.UnUsedAmountDateField.Equals(value) != true)) {
                    this.UnUsedAmountDateField = value;
                    this.RaisePropertyChanged("UnUsedAmountDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OPPerson", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class OPPerson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AssignIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PersonBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNoSocialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PersonResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonSocialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AssignId {
            get {
                return this.AssignIdField;
            }
            set {
                if ((this.AssignIdField.Equals(value) != true)) {
                    this.AssignIdField = value;
                    this.RaisePropertyChanged("AssignId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((this.DocumentTypeField.Equals(value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonAddress {
            get {
                return this.PersonAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonAddressField, value) != true)) {
                    this.PersonAddressField = value;
                    this.RaisePropertyChanged("PersonAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PersonBirth {
            get {
                return this.PersonBirthField;
            }
            set {
                if ((this.PersonBirthField.Equals(value) != true)) {
                    this.PersonBirthField = value;
                    this.RaisePropertyChanged("PersonBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonDocument {
            get {
                return this.PersonDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonDocumentField, value) != true)) {
                    this.PersonDocumentField = value;
                    this.RaisePropertyChanged("PersonDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonEmail {
            get {
                return this.PersonEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonEmailField, value) != true)) {
                    this.PersonEmailField = value;
                    this.RaisePropertyChanged("PersonEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonLastName {
            get {
                return this.PersonLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonLastNameField, value) != true)) {
                    this.PersonLastNameField = value;
                    this.RaisePropertyChanged("PersonLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonNoSocialNumber {
            get {
                return this.PersonNoSocialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNoSocialNumberField, value) != true)) {
                    this.PersonNoSocialNumberField = value;
                    this.RaisePropertyChanged("PersonNoSocialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonPhone {
            get {
                return this.PersonPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonPhoneField, value) != true)) {
                    this.PersonPhoneField = value;
                    this.RaisePropertyChanged("PersonPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PersonResidence {
            get {
                return this.PersonResidenceField;
            }
            set {
                if ((this.PersonResidenceField.Equals(value) != true)) {
                    this.PersonResidenceField = value;
                    this.RaisePropertyChanged("PersonResidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonSocialNumber {
            get {
                return this.PersonSocialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonSocialNumberField, value) != true)) {
                    this.PersonSocialNumberField = value;
                    this.RaisePropertyChanged("PersonSocialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> AdvancedOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChiefAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PositionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong number_of_itemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong userCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userPermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountGroup {
            get {
                return this.AccountGroupField;
            }
            set {
                if ((this.AccountGroupField.Equals(value) != true)) {
                    this.AccountGroupField = value;
                    this.RaisePropertyChanged("AccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> AdvancedOptions {
            get {
                return this.AdvancedOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvancedOptionsField, value) != true)) {
                    this.AdvancedOptionsField = value;
                    this.RaisePropertyChanged("AdvancedOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutorized {
            get {
                return this.IsAutorizedField;
            }
            set {
                if ((this.IsAutorizedField.Equals(value) != true)) {
                    this.IsAutorizedField = value;
                    this.RaisePropertyChanged("IsAutorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChiefAcc {
            get {
                return this.IsChiefAccField;
            }
            set {
                if ((this.IsChiefAccField.Equals(value) != true)) {
                    this.IsChiefAccField = value;
                    this.RaisePropertyChanged("IsChiefAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PositionID {
            get {
                return this.PositionIDField;
            }
            set {
                if ((this.PositionIDField.Equals(value) != true)) {
                    this.PositionIDField = value;
                    this.RaisePropertyChanged("PositionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionName {
            get {
                return this.PositionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionNameField, value) != true)) {
                    this.PositionNameField = value;
                    this.RaisePropertyChanged("PositionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionLimit {
            get {
                return this.TransactionLimitField;
            }
            set {
                if ((this.TransactionLimitField.Equals(value) != true)) {
                    this.TransactionLimitField = value;
                    this.RaisePropertyChanged("TransactionLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong number_of_item {
            get {
                return this.number_of_itemField;
            }
            set {
                if ((this.number_of_itemField.Equals(value) != true)) {
                    this.number_of_itemField = value;
                    this.RaisePropertyChanged("number_of_item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transRight {
            get {
                return this.transRightField;
            }
            set {
                if ((this.transRightField.Equals(value) != true)) {
                    this.transRightField = value;
                    this.RaisePropertyChanged("transRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong userCustomerNumber {
            get {
                return this.userCustomerNumberField;
            }
            set {
                if ((this.userCustomerNumberField.Equals(value) != true)) {
                    this.userCustomerNumberField = value;
                    this.RaisePropertyChanged("userCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userPermissionId {
            get {
                return this.userPermissionIdField;
            }
            set {
                if ((this.userPermissionIdField.Equals(value) != true)) {
                    this.userPermissionIdField = value;
                    this.RaisePropertyChanged("userPermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Deposit DepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DepositAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.DepositAction DepositActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.DepositType DepositTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InterestRateChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActionDepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account PercentAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.YesNo RecontractPossibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongstring> ThirdPersonCustomerNumbersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Deposit Deposit {
            get {
                return this.DepositField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositField, value) != true)) {
                    this.DepositField = value;
                    this.RaisePropertyChanged("Deposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DepositAccount {
            get {
                return this.DepositAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositAccountField, value) != true)) {
                    this.DepositAccountField = value;
                    this.RaisePropertyChanged("DepositAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.DepositAction DepositAction {
            get {
                return this.DepositActionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositActionField, value) != true)) {
                    this.DepositActionField = value;
                    this.RaisePropertyChanged("DepositAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.DepositType DepositType {
            get {
                return this.DepositTypeField;
            }
            set {
                if ((this.DepositTypeField.Equals(value) != true)) {
                    this.DepositTypeField = value;
                    this.RaisePropertyChanged("DepositType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InterestRateChanged {
            get {
                return this.InterestRateChangedField;
            }
            set {
                if ((this.InterestRateChangedField.Equals(value) != true)) {
                    this.InterestRateChangedField = value;
                    this.RaisePropertyChanged("InterestRateChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActionDeposit {
            get {
                return this.IsActionDepositField;
            }
            set {
                if ((this.IsActionDepositField.Equals(value) != true)) {
                    this.IsActionDepositField = value;
                    this.RaisePropertyChanged("IsActionDeposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account PercentAccount {
            get {
                return this.PercentAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentAccountField, value) != true)) {
                    this.PercentAccountField = value;
                    this.RaisePropertyChanged("PercentAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.YesNo RecontractPossibility {
            get {
                return this.RecontractPossibilityField;
            }
            set {
                if ((this.RecontractPossibilityField.Equals(value) != true)) {
                    this.RecontractPossibilityField = value;
                    this.RaisePropertyChanged("RecontractPossibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongstring> ThirdPersonCustomerNumbers {
            get {
                return this.ThirdPersonCustomerNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdPersonCustomerNumbersField, value) != true)) {
                    this.ThirdPersonCustomerNumbersField = value;
                    this.RaisePropertyChanged("ThirdPersonCustomerNumbers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UtilityPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReestrUtilityPaymentOrder))]
    public partial class UtilityPaymentOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AbonentFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AbonentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CommunalTypes CommunalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrepaidSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort AbonentFilialCode {
            get {
                return this.AbonentFilialCodeField;
            }
            set {
                if ((this.AbonentFilialCodeField.Equals(value) != true)) {
                    this.AbonentFilialCodeField = value;
                    this.RaisePropertyChanged("AbonentFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AbonentType {
            get {
                return this.AbonentTypeField;
            }
            set {
                if ((this.AbonentTypeField.Equals(value) != true)) {
                    this.AbonentTypeField = value;
                    this.RaisePropertyChanged("AbonentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CommunalTypes CommunalType {
            get {
                return this.CommunalTypeField;
            }
            set {
                if ((this.CommunalTypeField.Equals(value) != true)) {
                    this.CommunalTypeField = value;
                    this.RaisePropertyChanged("CommunalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentTime {
            get {
                return this.PaymentTimeField;
            }
            set {
                if ((this.PaymentTimeField.Equals(value) != true)) {
                    this.PaymentTimeField = value;
                    this.RaisePropertyChanged("PaymentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrepaidSign {
            get {
                return this.PrepaidSignField;
            }
            set {
                if ((this.PrepaidSignField.Equals(value) != true)) {
                    this.PrepaidSignField = value;
                    this.RaisePropertyChanged("PrepaidSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceAmount {
            get {
                return this.ServiceAmountField;
            }
            set {
                if ((this.ServiceAmountField.Equals(value) != true)) {
                    this.ServiceAmountField = value;
                    this.RaisePropertyChanged("ServiceAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReestrUtilityPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ReestrUtilityPaymentOrder : Test.ServiceReference1.UtilityPaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.COWaterReestrDetails> COWaterReestrDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.COWaterReestrDetails> COWaterReestrDetails {
            get {
                return this.COWaterReestrDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.COWaterReestrDetailsField, value) != true)) {
                    this.COWaterReestrDetailsField = value;
                    this.RaisePropertyChanged("COWaterReestrDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.BudgetPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.InternationalPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CurrencyExchangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransitCurrencyExchangeOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReestrTransferOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.FastTransferPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.ReceivedFastTransferPaymentOrder))]
    public partial class PaymentOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorrowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CardFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardFeeCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConvertationCrossRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConvertationRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConvertationRate1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CreditorCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorDeathDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CreditorDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreditorStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditorStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatureTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatureTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PublicContributorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceiverBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TransferFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TransferIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UrgentSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseCreditLineField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Borrower {
            get {
                return this.BorrowerField;
            }
            set {
                if ((object.ReferenceEquals(this.BorrowerField, value) != true)) {
                    this.BorrowerField = value;
                    this.RaisePropertyChanged("Borrower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CardFee {
            get {
                return this.CardFeeField;
            }
            set {
                if ((this.CardFeeField.Equals(value) != true)) {
                    this.CardFeeField = value;
                    this.RaisePropertyChanged("CardFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardFeeCurrency {
            get {
                return this.CardFeeCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CardFeeCurrencyField, value) != true)) {
                    this.CardFeeCurrencyField = value;
                    this.RaisePropertyChanged("CardFeeCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConvertationCrossRate {
            get {
                return this.ConvertationCrossRateField;
            }
            set {
                if ((this.ConvertationCrossRateField.Equals(value) != true)) {
                    this.ConvertationCrossRateField = value;
                    this.RaisePropertyChanged("ConvertationCrossRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConvertationRate {
            get {
                return this.ConvertationRateField;
            }
            set {
                if ((this.ConvertationRateField.Equals(value) != true)) {
                    this.ConvertationRateField = value;
                    this.RaisePropertyChanged("ConvertationRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConvertationRate1 {
            get {
                return this.ConvertationRate1Field;
            }
            set {
                if ((this.ConvertationRate1Field.Equals(value) != true)) {
                    this.ConvertationRate1Field = value;
                    this.RaisePropertyChanged("ConvertationRate1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCode {
            get {
                return this.CreditCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCodeField, value) != true)) {
                    this.CreditCodeField = value;
                    this.RaisePropertyChanged("CreditCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CreditorCustomerNumber {
            get {
                return this.CreditorCustomerNumberField;
            }
            set {
                if ((this.CreditorCustomerNumberField.Equals(value) != true)) {
                    this.CreditorCustomerNumberField = value;
                    this.RaisePropertyChanged("CreditorCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorDeathDocument {
            get {
                return this.CreditorDeathDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorDeathDocumentField, value) != true)) {
                    this.CreditorDeathDocumentField = value;
                    this.RaisePropertyChanged("CreditorDeathDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorDescription {
            get {
                return this.CreditorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorDescriptionField, value) != true)) {
                    this.CreditorDescriptionField = value;
                    this.RaisePropertyChanged("CreditorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorDocumentNumber {
            get {
                return this.CreditorDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorDocumentNumberField, value) != true)) {
                    this.CreditorDocumentNumberField = value;
                    this.RaisePropertyChanged("CreditorDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CreditorDocumentType {
            get {
                return this.CreditorDocumentTypeField;
            }
            set {
                if ((this.CreditorDocumentTypeField.Equals(value) != true)) {
                    this.CreditorDocumentTypeField = value;
                    this.RaisePropertyChanged("CreditorDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditorStatus {
            get {
                return this.CreditorStatusField;
            }
            set {
                if ((this.CreditorStatusField.Equals(value) != true)) {
                    this.CreditorStatusField = value;
                    this.RaisePropertyChanged("CreditorStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditorStatusDescription {
            get {
                return this.CreditorStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditorStatusDescriptionField, value) != true)) {
                    this.CreditorStatusDescriptionField = value;
                    this.RaisePropertyChanged("CreditorStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatureType {
            get {
                return this.MatureTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatureTypeField, value) != true)) {
                    this.MatureTypeField = value;
                    this.RaisePropertyChanged("MatureType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatureTypeDescription {
            get {
                return this.MatureTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MatureTypeDescriptionField, value) != true)) {
                    this.MatureTypeDescriptionField = value;
                    this.RaisePropertyChanged("MatureTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PublicContributor {
            get {
                return this.PublicContributorField;
            }
            set {
                if ((this.PublicContributorField.Equals(value) != true)) {
                    this.PublicContributorField = value;
                    this.RaisePropertyChanged("PublicContributor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceiverBankCode {
            get {
                return this.ReceiverBankCodeField;
            }
            set {
                if ((this.ReceiverBankCodeField.Equals(value) != true)) {
                    this.ReceiverBankCodeField = value;
                    this.RaisePropertyChanged("ReceiverBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TransferFee {
            get {
                return this.TransferFeeField;
            }
            set {
                if ((this.TransferFeeField.Equals(value) != true)) {
                    this.TransferFeeField = value;
                    this.RaisePropertyChanged("TransferFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransferID {
            get {
                return this.TransferIDField;
            }
            set {
                if ((this.TransferIDField.Equals(value) != true)) {
                    this.TransferIDField = value;
                    this.RaisePropertyChanged("TransferID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UrgentSign {
            get {
                return this.UrgentSignField;
            }
            set {
                if ((this.UrgentSignField.Equals(value) != true)) {
                    this.UrgentSignField = value;
                    this.RaisePropertyChanged("UrgentSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseCreditLine {
            get {
                return this.UseCreditLineField;
            }
            set {
                if ((this.UseCreditLineField.Equals(value) != true)) {
                    this.UseCreditLineField = value;
                    this.RaisePropertyChanged("UseCreditLine");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BudgetPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class BudgetPaymentOrder : Test.ServiceReference1.PaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LTACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PayerDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoliceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PoliceResponseDetailsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ViolationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exaction {
            get {
                return this.ExactionField;
            }
            set {
                if ((this.ExactionField.Equals(value) != true)) {
                    this.ExactionField = value;
                    this.RaisePropertyChanged("Exaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LTACode {
            get {
                return this.LTACodeField;
            }
            set {
                if ((this.LTACodeField.Equals(value) != true)) {
                    this.LTACodeField = value;
                    this.RaisePropertyChanged("LTACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayerDocumentNumber {
            get {
                return this.PayerDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerDocumentNumberField, value) != true)) {
                    this.PayerDocumentNumberField = value;
                    this.RaisePropertyChanged("PayerDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PayerDocumentType {
            get {
                return this.PayerDocumentTypeField;
            }
            set {
                if ((this.PayerDocumentTypeField.Equals(value) != true)) {
                    this.PayerDocumentTypeField = value;
                    this.RaisePropertyChanged("PayerDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoliceCode {
            get {
                return this.PoliceCodeField;
            }
            set {
                if ((this.PoliceCodeField.Equals(value) != true)) {
                    this.PoliceCodeField = value;
                    this.RaisePropertyChanged("PoliceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PoliceResponseDetailsId {
            get {
                return this.PoliceResponseDetailsIdField;
            }
            set {
                if ((this.PoliceResponseDetailsIdField.Equals(value) != true)) {
                    this.PoliceResponseDetailsIdField = value;
                    this.RaisePropertyChanged("PoliceResponseDetailsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ViolationDate {
            get {
                return this.ViolationDateField;
            }
            set {
                if ((this.ViolationDateField.Equals(value) != true)) {
                    this.ViolationDateField = value;
                    this.RaisePropertyChanged("ViolationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationID {
            get {
                return this.ViolationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationIDField, value) != true)) {
                    this.ViolationIDField = value;
                    this.RaisePropertyChanged("ViolationID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InternationalPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class InternationalPaymentOrder : Test.ServiceReference1.PaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BIKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsOfChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FedwireRoutingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KPPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ReceiverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderCodeOfTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderCountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SenderDateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderOtherBankAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong UniqueNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIK {
            get {
                return this.BIKField;
            }
            set {
                if ((object.ReferenceEquals(this.BIKField, value) != true)) {
                    this.BIKField = value;
                    this.RaisePropertyChanged("BIK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrAccount {
            get {
                return this.CorrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrAccountField, value) != true)) {
                    this.CorrAccountField = value;
                    this.RaisePropertyChanged("CorrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPayment {
            get {
                return this.DescriptionForPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentField, value) != true)) {
                    this.DescriptionForPaymentField = value;
                    this.RaisePropertyChanged("DescriptionForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR1 {
            get {
                return this.DescriptionForPaymentRUR1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR1Field, value) != true)) {
                    this.DescriptionForPaymentRUR1Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR2 {
            get {
                return this.DescriptionForPaymentRUR2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR2Field, value) != true)) {
                    this.DescriptionForPaymentRUR2Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR3 {
            get {
                return this.DescriptionForPaymentRUR3Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR3Field, value) != true)) {
                    this.DescriptionForPaymentRUR3Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR4 {
            get {
                return this.DescriptionForPaymentRUR4Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR4Field, value) != true)) {
                    this.DescriptionForPaymentRUR4Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR5 {
            get {
                return this.DescriptionForPaymentRUR5Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR5Field, value) != true)) {
                    this.DescriptionForPaymentRUR5Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR6 {
            get {
                return this.DescriptionForPaymentRUR6Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR6Field, value) != true)) {
                    this.DescriptionForPaymentRUR6Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailsOfCharges {
            get {
                return this.DetailsOfChargesField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsOfChargesField, value) != true)) {
                    this.DetailsOfChargesField = value;
                    this.RaisePropertyChanged("DetailsOfCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FedwireRoutingCode {
            get {
                return this.FedwireRoutingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FedwireRoutingCodeField, value) != true)) {
                    this.FedwireRoutingCodeField = value;
                    this.RaisePropertyChanged("FedwireRoutingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryBank {
            get {
                return this.IntermediaryBankField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryBankField, value) != true)) {
                    this.IntermediaryBankField = value;
                    this.RaisePropertyChanged("IntermediaryBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryBankSwift {
            get {
                return this.IntermediaryBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryBankSwiftField, value) != true)) {
                    this.IntermediaryBankSwiftField = value;
                    this.RaisePropertyChanged("IntermediaryBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPP {
            get {
                return this.KPPField;
            }
            set {
                if ((object.ReferenceEquals(this.KPPField, value) != true)) {
                    this.KPPField = value;
                    this.RaisePropertyChanged("KPP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAddInf {
            get {
                return this.ReceiverAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAddInfField, value) != true)) {
                    this.ReceiverAddInfField = value;
                    this.RaisePropertyChanged("ReceiverAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBank {
            get {
                return this.ReceiverBankField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankField, value) != true)) {
                    this.ReceiverBankField = value;
                    this.RaisePropertyChanged("ReceiverBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankAddInf {
            get {
                return this.ReceiverBankAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankAddInfField, value) != true)) {
                    this.ReceiverBankAddInfField = value;
                    this.RaisePropertyChanged("ReceiverBankAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankSwift {
            get {
                return this.ReceiverBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankSwiftField, value) != true)) {
                    this.ReceiverBankSwiftField = value;
                    this.RaisePropertyChanged("ReceiverBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ReceiverType {
            get {
                return this.ReceiverTypeField;
            }
            set {
                if ((this.ReceiverTypeField.Equals(value) != true)) {
                    this.ReceiverTypeField = value;
                    this.RaisePropertyChanged("ReceiverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAddress {
            get {
                return this.SenderAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAddressField, value) != true)) {
                    this.SenderAddressField = value;
                    this.RaisePropertyChanged("SenderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderCodeOfTax {
            get {
                return this.SenderCodeOfTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderCodeOfTaxField, value) != true)) {
                    this.SenderCodeOfTaxField = value;
                    this.RaisePropertyChanged("SenderCodeOfTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderCountry {
            get {
                return this.SenderCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderCountryField, value) != true)) {
                    this.SenderCountryField = value;
                    this.RaisePropertyChanged("SenderCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderCountryName {
            get {
                return this.SenderCountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderCountryNameField, value) != true)) {
                    this.SenderCountryNameField = value;
                    this.RaisePropertyChanged("SenderCountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SenderDateOfBirth {
            get {
                return this.SenderDateOfBirthField;
            }
            set {
                if ((this.SenderDateOfBirthField.Equals(value) != true)) {
                    this.SenderDateOfBirthField = value;
                    this.RaisePropertyChanged("SenderDateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderEmail {
            get {
                return this.SenderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderEmailField, value) != true)) {
                    this.SenderEmailField = value;
                    this.RaisePropertyChanged("SenderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderOtherBankAccount {
            get {
                return this.SenderOtherBankAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderOtherBankAccountField, value) != true)) {
                    this.SenderOtherBankAccountField = value;
                    this.RaisePropertyChanged("SenderOtherBankAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPassport {
            get {
                return this.SenderPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPassportField, value) != true)) {
                    this.SenderPassportField = value;
                    this.RaisePropertyChanged("SenderPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPhone {
            get {
                return this.SenderPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPhoneField, value) != true)) {
                    this.SenderPhoneField = value;
                    this.RaisePropertyChanged("SenderPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderTown {
            get {
                return this.SenderTownField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTownField, value) != true)) {
                    this.SenderTownField = value;
                    this.RaisePropertyChanged("SenderTown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((this.SenderTypeField.Equals(value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong UniqueNumber {
            get {
                return this.UniqueNumberField;
            }
            set {
                if ((this.UniqueNumberField.Equals(value) != true)) {
                    this.UniqueNumberField = value;
                    this.RaisePropertyChanged("UniqueNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyExchangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.TransitCurrencyExchangeOrder))]
    public partial class CurrencyExchangeOrder : Test.ServiceReference1.PaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountInAmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountInCrossCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ExchangeRateVariationType IsVariationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberForCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberForDebetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberForShortChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ExchangeRoundingDirectionType RoundingDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ShortChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong UniqueNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountInAmd {
            get {
                return this.AmountInAmdField;
            }
            set {
                if ((this.AmountInAmdField.Equals(value) != true)) {
                    this.AmountInAmdField = value;
                    this.RaisePropertyChanged("AmountInAmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountInCrossCurrency {
            get {
                return this.AmountInCrossCurrencyField;
            }
            set {
                if ((this.AmountInCrossCurrencyField.Equals(value) != true)) {
                    this.AmountInCrossCurrencyField = value;
                    this.RaisePropertyChanged("AmountInCrossCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPassport {
            get {
                return this.HasPassportField;
            }
            set {
                if ((this.HasPassportField.Equals(value) != true)) {
                    this.HasPassportField = value;
                    this.RaisePropertyChanged("HasPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ExchangeRateVariationType IsVariation {
            get {
                return this.IsVariationField;
            }
            set {
                if ((this.IsVariationField.Equals(value) != true)) {
                    this.IsVariationField = value;
                    this.RaisePropertyChanged("IsVariation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumberForCredit {
            get {
                return this.OrderNumberForCreditField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberForCreditField, value) != true)) {
                    this.OrderNumberForCreditField = value;
                    this.RaisePropertyChanged("OrderNumberForCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumberForDebet {
            get {
                return this.OrderNumberForDebetField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberForDebetField, value) != true)) {
                    this.OrderNumberForDebetField = value;
                    this.RaisePropertyChanged("OrderNumberForDebet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumberForShortChange {
            get {
                return this.OrderNumberForShortChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberForShortChangeField, value) != true)) {
                    this.OrderNumberForShortChangeField = value;
                    this.RaisePropertyChanged("OrderNumberForShortChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ExchangeRoundingDirectionType RoundingDirection {
            get {
                return this.RoundingDirectionField;
            }
            set {
                if ((this.RoundingDirectionField.Equals(value) != true)) {
                    this.RoundingDirectionField = value;
                    this.RaisePropertyChanged("RoundingDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ShortChange {
            get {
                return this.ShortChangeField;
            }
            set {
                if ((this.ShortChangeField.Equals(value) != true)) {
                    this.ShortChangeField = value;
                    this.RaisePropertyChanged("ShortChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong UniqueNumber {
            get {
                return this.UniqueNumberField;
            }
            set {
                if ((this.UniqueNumberField.Equals(value) != true)) {
                    this.UniqueNumberField = value;
                    this.RaisePropertyChanged("UniqueNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitCurrencyExchangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransitCurrencyExchangeOrder : Test.ServiceReference1.CurrencyExchangeOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails> AdditioanalParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails> AdditioanalParameters {
            get {
                return this.AdditioanalParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditioanalParametersField, value) != true)) {
                    this.AdditioanalParametersField = value;
                    this.RaisePropertyChanged("AdditioanalParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCurrency {
            get {
                return this.ProductCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCurrencyField, value) != true)) {
                    this.ProductCurrencyField = value;
                    this.RaisePropertyChanged("ProductCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReestrTransferOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ReestrTransferOrder : Test.ServiceReference1.PaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.ReestrTransferAdditionalDetails> ReestrTransferAdditionalDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.ReestrTransferAdditionalDetails> ReestrTransferAdditionalDetails {
            get {
                return this.ReestrTransferAdditionalDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReestrTransferAdditionalDetailsField, value) != true)) {
                    this.ReestrTransferAdditionalDetailsField = value;
                    this.RaisePropertyChanged("ReestrTransferAdditionalDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FastTransferPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class FastTransferPaymentOrder : Test.ServiceReference1.PaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAcbaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SenderDateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.TransferAdditionalData TransferAdditionalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferSystemDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPayment {
            get {
                return this.DescriptionForPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentField, value) != true)) {
                    this.DescriptionForPaymentField = value;
                    this.RaisePropertyChanged("DescriptionForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAcba {
            get {
                return this.FeeAcbaField;
            }
            set {
                if ((this.FeeAcbaField.Equals(value) != true)) {
                    this.FeeAcbaField = value;
                    this.RaisePropertyChanged("FeeAcba");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAddInf {
            get {
                return this.ReceiverAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAddInfField, value) != true)) {
                    this.ReceiverAddInfField = value;
                    this.RaisePropertyChanged("ReceiverAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverPassport {
            get {
                return this.ReceiverPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPassportField, value) != true)) {
                    this.ReceiverPassportField = value;
                    this.RaisePropertyChanged("ReceiverPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAddress {
            get {
                return this.SenderAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAddressField, value) != true)) {
                    this.SenderAddressField = value;
                    this.RaisePropertyChanged("SenderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SenderDateOfBirth {
            get {
                return this.SenderDateOfBirthField;
            }
            set {
                if ((this.SenderDateOfBirthField.Equals(value) != true)) {
                    this.SenderDateOfBirthField = value;
                    this.RaisePropertyChanged("SenderDateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderEmail {
            get {
                return this.SenderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderEmailField, value) != true)) {
                    this.SenderEmailField = value;
                    this.RaisePropertyChanged("SenderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPassport {
            get {
                return this.SenderPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPassportField, value) != true)) {
                    this.SenderPassportField = value;
                    this.RaisePropertyChanged("SenderPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPhone {
            get {
                return this.SenderPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPhoneField, value) != true)) {
                    this.SenderPhoneField = value;
                    this.RaisePropertyChanged("SenderPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((this.SenderTypeField.Equals(value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.TransferAdditionalData TransferAdditionalData {
            get {
                return this.TransferAdditionalDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferAdditionalDataField, value) != true)) {
                    this.TransferAdditionalDataField = value;
                    this.RaisePropertyChanged("TransferAdditionalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferSystemDescription {
            get {
                return this.TransferSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferSystemDescriptionField, value) != true)) {
                    this.TransferSystemDescriptionField = value;
                    this.RaisePropertyChanged("TransferSystemDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceivedFastTransferPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ReceivedFastTransferPaymentOrder : Test.ServiceReference1.PaymentOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContractIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAcbaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.TransferAdditionalData TransferAdditionalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferByCallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferSystemDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAcba {
            get {
                return this.FeeAcbaField;
            }
            set {
                if ((this.FeeAcbaField.Equals(value) != true)) {
                    this.FeeAcbaField = value;
                    this.RaisePropertyChanged("FeeAcba");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverPassport {
            get {
                return this.ReceiverPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPassportField, value) != true)) {
                    this.ReceiverPassportField = value;
                    this.RaisePropertyChanged("ReceiverPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverPhone {
            get {
                return this.ReceiverPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPhoneField, value) != true)) {
                    this.ReceiverPhoneField = value;
                    this.RaisePropertyChanged("ReceiverPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.TransferAdditionalData TransferAdditionalData {
            get {
                return this.TransferAdditionalDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferAdditionalDataField, value) != true)) {
                    this.TransferAdditionalDataField = value;
                    this.RaisePropertyChanged("TransferAdditionalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferByCallID {
            get {
                return this.TransferByCallIDField;
            }
            set {
                if ((this.TransferByCallIDField.Equals(value) != true)) {
                    this.TransferByCallIDField = value;
                    this.RaisePropertyChanged("TransferByCallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferSystemDescription {
            get {
                return this.TransferSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferSystemDescriptionField, value) != true)) {
                    this.TransferSystemDescriptionField = value;
                    this.RaisePropertyChanged("TransferSystemDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReferenceOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ReferenceOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Account> AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeCreditLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherRequisitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReferenceEmbasyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferenceFilialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReferenceLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReferenceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ushort> ReferenceTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort UrgentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((this.FeeAmountField.Equals(value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeCreditLine {
            get {
                return this.IncludeCreditLineField;
            }
            set {
                if ((this.IncludeCreditLineField.Equals(value) != true)) {
                    this.IncludeCreditLineField = value;
                    this.RaisePropertyChanged("IncludeCreditLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherRequisites {
            get {
                return this.OtherRequisitesField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherRequisitesField, value) != true)) {
                    this.OtherRequisitesField = value;
                    this.RaisePropertyChanged("OtherRequisites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherTypeDescription {
            get {
                return this.OtherTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherTypeDescriptionField, value) != true)) {
                    this.OtherTypeDescriptionField = value;
                    this.RaisePropertyChanged("OtherTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiveDate {
            get {
                return this.ReceiveDateField;
            }
            set {
                if ((this.ReceiveDateField.Equals(value) != true)) {
                    this.ReceiveDateField = value;
                    this.RaisePropertyChanged("ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ReferenceEmbasy {
            get {
                return this.ReferenceEmbasyField;
            }
            set {
                if ((this.ReferenceEmbasyField.Equals(value) != true)) {
                    this.ReferenceEmbasyField = value;
                    this.RaisePropertyChanged("ReferenceEmbasy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferenceFilial {
            get {
                return this.ReferenceFilialField;
            }
            set {
                if ((this.ReferenceFilialField.Equals(value) != true)) {
                    this.ReferenceFilialField = value;
                    this.RaisePropertyChanged("ReferenceFilial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceFor {
            get {
                return this.ReferenceForField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceForField, value) != true)) {
                    this.ReferenceForField = value;
                    this.RaisePropertyChanged("ReferenceFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ReferenceLanguage {
            get {
                return this.ReferenceLanguageField;
            }
            set {
                if ((this.ReferenceLanguageField.Equals(value) != true)) {
                    this.ReferenceLanguageField = value;
                    this.RaisePropertyChanged("ReferenceLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ReferenceType {
            get {
                return this.ReferenceTypeField;
            }
            set {
                if ((this.ReferenceTypeField.Equals(value) != true)) {
                    this.ReferenceTypeField = value;
                    this.RaisePropertyChanged("ReferenceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ushort> ReferenceTypes {
            get {
                return this.ReferenceTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceTypesField, value) != true)) {
                    this.ReferenceTypesField = value;
                    this.RaisePropertyChanged("ReferenceTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Urgent {
            get {
                return this.UrgentField;
            }
            set {
                if ((this.UrgentField.Equals(value) != true)) {
                    this.UrgentField = value;
                    this.RaisePropertyChanged("Urgent");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChequeBookOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ChequeBookOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ChequeBookAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFullNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ChequeBookAccount {
            get {
                return this.ChequeBookAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeBookAccountField, value) != true)) {
                    this.ChequeBookAccountField = value;
                    this.RaisePropertyChanged("ChequeBookAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAmountField, value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonFullName {
            get {
                return this.PersonFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFullNameField, value) != true)) {
                    this.PersonFullNameField = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CashOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CashDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CashFillialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CashDate {
            get {
                return this.CashDateField;
            }
            set {
                if ((this.CashDateField.Equals(value) != true)) {
                    this.CashDateField = value;
                    this.RaisePropertyChanged("CashDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashFillial {
            get {
                return this.CashFillialField;
            }
            set {
                if ((this.CashFillialField.Equals(value) != true)) {
                    this.CashFillialField = value;
                    this.RaisePropertyChanged("CashFillial");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatmentByEmailOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class StatmentByEmailOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Account> AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryEmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Account> Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsField, value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainEmail {
            get {
                return this.MainEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.MainEmailField, value) != true)) {
                    this.MainEmailField = value;
                    this.RaisePropertyChanged("MainEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Periodicity {
            get {
                return this.PeriodicityField;
            }
            set {
                if ((this.PeriodicityField.Equals(value) != true)) {
                    this.PeriodicityField = value;
                    this.RaisePropertyChanged("Periodicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryEmail {
            get {
                return this.SecondaryEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryEmailField, value) != true)) {
                    this.SecondaryEmailField = value;
                    this.RaisePropertyChanged("SecondaryEmail");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwiftCopyOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SwiftCopyOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeAmountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAmountField, value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDataOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CustomerDataOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePhoneNumber {
            get {
                return this.HomePhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePhoneNumberField, value) != true)) {
                    this.HomePhoneNumberField = value;
                    this.RaisePropertyChanged("HomePhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhoneNumber {
            get {
                return this.MobilePhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneNumberField, value) != true)) {
                    this.MobilePhoneNumberField = value;
                    this.RaisePropertyChanged("MobilePhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditLineTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CreditLineTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditLineAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditLineAccount {
            get {
                return this.CreditLineAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditLineAccountField, value) != true)) {
                    this.CreditLineAccountField = value;
                    this.RaisePropertyChanged("CreditLineAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Currency")]
        public string Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Currency1Field, value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountReOpenOrder))]
    public partial class AccountOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AccountStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongstring> JointCustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatementDeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatementDeliveryTypeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AccountStatus {
            get {
                return this.AccountStatusField;
            }
            set {
                if ((this.AccountStatusField.Equals(value) != true)) {
                    this.AccountStatusField = value;
                    this.RaisePropertyChanged("AccountStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongstring> JointCustomers {
            get {
                return this.JointCustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.JointCustomersField, value) != true)) {
                    this.JointCustomersField = value;
                    this.RaisePropertyChanged("JointCustomers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatementDeliveryType {
            get {
                return this.StatementDeliveryTypeField;
            }
            set {
                if ((this.StatementDeliveryTypeField.Equals(value) != true)) {
                    this.StatementDeliveryTypeField = value;
                    this.RaisePropertyChanged("StatementDeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatementDeliveryTypeDescription {
            get {
                return this.StatementDeliveryTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementDeliveryTypeDescriptionField, value) != true)) {
                    this.StatementDeliveryTypeDescriptionField = value;
                    this.RaisePropertyChanged("StatementDeliveryTypeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountReOpenOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountReOpenOrder : Test.ServiceReference1.AccountOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FeeChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Account> ReOpeningAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReopenReasonDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FeeChargeType {
            get {
                return this.FeeChargeTypeField;
            }
            set {
                if ((this.FeeChargeTypeField.Equals(value) != true)) {
                    this.FeeChargeTypeField = value;
                    this.RaisePropertyChanged("FeeChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Account> ReOpeningAccounts {
            get {
                return this.ReOpeningAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReOpeningAccountsField, value) != true)) {
                    this.ReOpeningAccountsField = value;
                    this.RaisePropertyChanged("ReOpeningAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReopenReasonDescription {
            get {
                return this.ReopenReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReopenReasonDescriptionField, value) != true)) {
                    this.ReopenReasonDescriptionField = value;
                    this.RaisePropertyChanged("ReopenReasonDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicUtilityPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicSwiftStatementOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PeriodicBudgetPaymentOrder))]
    public partial class PeriodicOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CheckDaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DebitAccount1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstTransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastOperationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxAmountLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinAmountLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinDebetAccountRestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PartialPaymentSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort PayIfNoDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ServicePaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllDebt {
            get {
                return this.AllDebtField;
            }
            set {
                if ((this.AllDebtField.Equals(value) != true)) {
                    this.AllDebtField = value;
                    this.RaisePropertyChanged("AllDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeType {
            get {
                return this.ChargeTypeField;
            }
            set {
                if ((this.ChargeTypeField.Equals(value) != true)) {
                    this.ChargeTypeField = value;
                    this.RaisePropertyChanged("ChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CheckDaysCount {
            get {
                return this.CheckDaysCountField;
            }
            set {
                if ((this.CheckDaysCountField.Equals(value) != true)) {
                    this.CheckDaysCountField = value;
                    this.RaisePropertyChanged("CheckDaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="DebitAccount")]
        public Test.ServiceReference1.Account DebitAccount1 {
            get {
                return this.DebitAccount1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DebitAccount1Field, value) != true)) {
                    this.DebitAccount1Field = value;
                    this.RaisePropertyChanged("DebitAccount1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstTransferDate {
            get {
                return this.FirstTransferDateField;
            }
            set {
                if ((this.FirstTransferDateField.Equals(value) != true)) {
                    this.FirstTransferDateField = value;
                    this.RaisePropertyChanged("FirstTransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastOperationDate {
            get {
                return this.LastOperationDateField;
            }
            set {
                if ((this.LastOperationDateField.Equals(value) != true)) {
                    this.LastOperationDateField = value;
                    this.RaisePropertyChanged("LastOperationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxAmountLevel {
            get {
                return this.MaxAmountLevelField;
            }
            set {
                if ((this.MaxAmountLevelField.Equals(value) != true)) {
                    this.MaxAmountLevelField = value;
                    this.RaisePropertyChanged("MaxAmountLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinAmountLevel {
            get {
                return this.MinAmountLevelField;
            }
            set {
                if ((this.MinAmountLevelField.Equals(value) != true)) {
                    this.MinAmountLevelField = value;
                    this.RaisePropertyChanged("MinAmountLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinDebetAccountRest {
            get {
                return this.MinDebetAccountRestField;
            }
            set {
                if ((this.MinDebetAccountRestField.Equals(value) != true)) {
                    this.MinDebetAccountRestField = value;
                    this.RaisePropertyChanged("MinDebetAccountRest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PartialPaymentSign {
            get {
                return this.PartialPaymentSignField;
            }
            set {
                if ((this.PartialPaymentSignField.Equals(value) != true)) {
                    this.PartialPaymentSignField = value;
                    this.RaisePropertyChanged("PartialPaymentSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort PayIfNoDebt {
            get {
                return this.PayIfNoDebtField;
            }
            set {
                if ((this.PayIfNoDebtField.Equals(value) != true)) {
                    this.PayIfNoDebtField = value;
                    this.RaisePropertyChanged("PayIfNoDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodicDescription {
            get {
                return this.PeriodicDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicDescriptionField, value) != true)) {
                    this.PeriodicDescriptionField = value;
                    this.RaisePropertyChanged("PeriodicDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodicType {
            get {
                return this.PeriodicTypeField;
            }
            set {
                if ((this.PeriodicTypeField.Equals(value) != true)) {
                    this.PeriodicTypeField = value;
                    this.RaisePropertyChanged("PeriodicType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Periodicity {
            get {
                return this.PeriodicityField;
            }
            set {
                if ((this.PeriodicityField.Equals(value) != true)) {
                    this.PeriodicityField = value;
                    this.RaisePropertyChanged("Periodicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ServicePaymentType {
            get {
                return this.ServicePaymentTypeField;
            }
            set {
                if ((this.ServicePaymentTypeField.Equals(value) != true)) {
                    this.ServicePaymentTypeField = value;
                    this.RaisePropertyChanged("ServicePaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicUtilityPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicUtilityPaymentOrder : Test.ServiceReference1.PeriodicOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.UtilityPaymentOrder UtilityPaymentOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.UtilityPaymentOrder UtilityPaymentOrder {
            get {
                return this.UtilityPaymentOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilityPaymentOrderField, value) != true)) {
                    this.UtilityPaymentOrderField = value;
                    this.RaisePropertyChanged("UtilityPaymentOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicPaymentOrder : Test.ServiceReference1.PeriodicOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PaymentOrder PaymentOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PaymentOrder PaymentOrder {
            get {
                return this.PaymentOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentOrderField, value) != true)) {
                    this.PaymentOrderField = value;
                    this.RaisePropertyChanged("PaymentOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicSwiftStatementOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicSwiftStatementOrder : Test.ServiceReference1.PeriodicOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankSwiftCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account StatementAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankSwiftCode {
            get {
                return this.ReceiverBankSwiftCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankSwiftCodeField, value) != true)) {
                    this.ReceiverBankSwiftCodeField = value;
                    this.RaisePropertyChanged("ReceiverBankSwiftCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account StatementAccount {
            get {
                return this.StatementAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementAccountField, value) != true)) {
                    this.StatementAccountField = value;
                    this.RaisePropertyChanged("StatementAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicBudgetPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicBudgetPaymentOrder : Test.ServiceReference1.PeriodicOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.BudgetPaymentOrder BudgetPaymentOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.BudgetPaymentOrder BudgetPaymentOrder {
            get {
                return this.BudgetPaymentOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.BudgetPaymentOrderField, value) != true)) {
                    this.BudgetPaymentOrderField = value;
                    this.RaisePropertyChanged("BudgetPaymentOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountClosingOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountClosingOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Account> ClosingAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ClosingReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonTypeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Account> ClosingAccounts {
            get {
                return this.ClosingAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingAccountsField, value) != true)) {
                    this.ClosingAccountsField = value;
                    this.RaisePropertyChanged("ClosingAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonDescription {
            get {
                return this.ClosingReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonDescriptionField, value) != true)) {
                    this.ClosingReasonDescriptionField = value;
                    this.RaisePropertyChanged("ClosingReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ClosingReasonType {
            get {
                return this.ClosingReasonTypeField;
            }
            set {
                if ((this.ClosingReasonTypeField.Equals(value) != true)) {
                    this.ClosingReasonTypeField = value;
                    this.RaisePropertyChanged("ClosingReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonTypeDescription {
            get {
                return this.ClosingReasonTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonTypeDescriptionField, value) != true)) {
                    this.ClosingReasonTypeDescriptionField = value;
                    this.RaisePropertyChanged("ClosingReasonTypeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransitPaymentOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account TransitAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.TransitAccountTypes TransitAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransitAccountTypeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCurrency {
            get {
                return this.ProductCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCurrencyField, value) != true)) {
                    this.ProductCurrencyField = value;
                    this.RaisePropertyChanged("ProductCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account TransitAccount {
            get {
                return this.TransitAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitAccountField, value) != true)) {
                    this.TransitAccountField = value;
                    this.RaisePropertyChanged("TransitAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.TransitAccountTypes TransitAccountType {
            get {
                return this.TransitAccountTypeField;
            }
            set {
                if ((this.TransitAccountTypeField.Equals(value) != true)) {
                    this.TransitAccountTypeField = value;
                    this.RaisePropertyChanged("TransitAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransitAccountTypeDescription {
            get {
                return this.TransitAccountTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitAccountTypeDescriptionField, value) != true)) {
                    this.TransitAccountTypeDescriptionField = value;
                    this.RaisePropertyChanged("TransitAccountTypeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashPosPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CashPosPaymentOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account PosAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationCode {
            get {
                return this.AuthorizationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationCodeField, value) != true)) {
                    this.AuthorizationCodeField = value;
                    this.RaisePropertyChanged("AuthorizationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account PosAccount {
            get {
                return this.PosAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PosAccountField, value) != true)) {
                    this.PosAccountField = value;
                    this.RaisePropertyChanged("PosAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicePaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ServicePaymentOrder : Test.ServiceReference1.Order {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChequeBookReceiveOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ChequeBookReceiveOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ChequeBookAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageNumberEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageNumberStartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ChequeBookAccount {
            get {
                return this.ChequeBookAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeBookAccountField, value) != true)) {
                    this.ChequeBookAccountField = value;
                    this.RaisePropertyChanged("ChequeBookAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CostPrice {
            get {
                return this.CostPriceField;
            }
            set {
                if ((this.CostPriceField.Equals(value) != true)) {
                    this.CostPriceField = value;
                    this.RaisePropertyChanged("CostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((this.FeeAmountField.Equals(value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageNumberEnd {
            get {
                return this.PageNumberEndField;
            }
            set {
                if ((object.ReferenceEquals(this.PageNumberEndField, value) != true)) {
                    this.PageNumberEndField = value;
                    this.RaisePropertyChanged("PageNumberEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageNumberStart {
            get {
                return this.PageNumberStartField;
            }
            set {
                if ((object.ReferenceEquals(this.PageNumberStartField, value) != true)) {
                    this.PageNumberStartField = value;
                    this.RaisePropertyChanged("PageNumberStart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardReReleaseOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardReReleaseOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Card CardField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Card Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardRegistrationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardRegistrationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PlasticCard CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CardAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IsNewAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IsNewOverdraftAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account OverdraftAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddInf {
            get {
                return this.AddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AddInfField, value) != true)) {
                    this.AddInfField = value;
                    this.RaisePropertyChanged("AddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PlasticCard Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CardAccount {
            get {
                return this.CardAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CardAccountField, value) != true)) {
                    this.CardAccountField = value;
                    this.RaisePropertyChanged("CardAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort IsNewAccount {
            get {
                return this.IsNewAccountField;
            }
            set {
                if ((this.IsNewAccountField.Equals(value) != true)) {
                    this.IsNewAccountField = value;
                    this.RaisePropertyChanged("IsNewAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort IsNewOverdraftAccount {
            get {
                return this.IsNewOverdraftAccountField;
            }
            set {
                if ((this.IsNewOverdraftAccountField.Equals(value) != true)) {
                    this.IsNewOverdraftAccountField = value;
                    this.RaisePropertyChanged("IsNewOverdraftAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account OverdraftAccount {
            get {
                return this.OverdraftAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OverdraftAccountField, value) != true)) {
                    this.OverdraftAccountField = value;
                    this.RaisePropertyChanged("OverdraftAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositCasePenaltyMatureOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositCasePenaltyMatureOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardReNewRePlace", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardReNewOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CardRePlaceOrder))]
    public partial class CardReNewRePlace : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PlasticCard CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CardAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IsNewAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IsNewOverdraftAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account OverdraftAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddInf {
            get {
                return this.AddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AddInfField, value) != true)) {
                    this.AddInfField = value;
                    this.RaisePropertyChanged("AddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PlasticCard Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CardAccount {
            get {
                return this.CardAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CardAccountField, value) != true)) {
                    this.CardAccountField = value;
                    this.RaisePropertyChanged("CardAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort IsNewAccount {
            get {
                return this.IsNewAccountField;
            }
            set {
                if ((this.IsNewAccountField.Equals(value) != true)) {
                    this.IsNewAccountField = value;
                    this.RaisePropertyChanged("IsNewAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort IsNewOverdraftAccount {
            get {
                return this.IsNewOverdraftAccountField;
            }
            set {
                if ((this.IsNewOverdraftAccountField.Equals(value) != true)) {
                    this.IsNewOverdraftAccountField = value;
                    this.RaisePropertyChanged("IsNewOverdraftAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account OverdraftAccount {
            get {
                return this.OverdraftAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OverdraftAccountField, value) != true)) {
                    this.OverdraftAccountField = value;
                    this.RaisePropertyChanged("OverdraftAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardReNewOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardReNewOrder : Test.ServiceReference1.CardReNewRePlace {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardRePlaceOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardRePlaceOrder : Test.ServiceReference1.CardReNewRePlace {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashBookOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CashBookOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CashBook> CashBooksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CorrespondentAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CashBook> CashBooks {
            get {
                return this.CashBooksField;
            }
            set {
                if ((object.ReferenceEquals(this.CashBooksField, value) != true)) {
                    this.CashBooksField = value;
                    this.RaisePropertyChanged("CashBooks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CorrespondentAccountType {
            get {
                return this.CorrespondentAccountTypeField;
            }
            set {
                if ((this.CorrespondentAccountTypeField.Equals(value) != true)) {
                    this.CorrespondentAccountTypeField = value;
                    this.RaisePropertyChanged("CorrespondentAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CTOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CTPaymentOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CTLoanMatureOrder))]
    public partial class CTOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CTCustomerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IdentifierTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminalDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminalIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CTCustomerDescription {
            get {
                return this.CTCustomerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CTCustomerDescriptionField, value) != true)) {
                    this.CTCustomerDescriptionField = value;
                    this.RaisePropertyChanged("CTCustomerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IdentifierType {
            get {
                return this.IdentifierTypeField;
            }
            set {
                if ((this.IdentifierTypeField.Equals(value) != true)) {
                    this.IdentifierTypeField = value;
                    this.RaisePropertyChanged("IdentifierType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDateTime {
            get {
                return this.PaymentDateTimeField;
            }
            set {
                if ((this.PaymentDateTimeField.Equals(value) != true)) {
                    this.PaymentDateTimeField = value;
                    this.RaisePropertyChanged("PaymentDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminalAddress {
            get {
                return this.TerminalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminalAddressField, value) != true)) {
                    this.TerminalAddressField = value;
                    this.RaisePropertyChanged("TerminalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminalDescription {
            get {
                return this.TerminalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminalDescriptionField, value) != true)) {
                    this.TerminalDescriptionField = value;
                    this.RaisePropertyChanged("TerminalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminalID {
            get {
                return this.TerminalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminalIDField, value) != true)) {
                    this.TerminalIDField = value;
                    this.RaisePropertyChanged("TerminalID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CTPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CTPaymentOrder : Test.ServiceReference1.CTOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConvertationRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConvertationRate {
            get {
                return this.ConvertationRateField;
            }
            set {
                if ((this.ConvertationRateField.Equals(value) != true)) {
                    this.ConvertationRateField = value;
                    this.RaisePropertyChanged("ConvertationRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CTLoanMatureOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CTLoanMatureOrder : Test.ServiceReference1.CTOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ConnectAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConvertationRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WithCreditCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ConnectAccount {
            get {
                return this.ConnectAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectAccountField, value) != true)) {
                    this.ConnectAccountField = value;
                    this.RaisePropertyChanged("ConnectAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConvertationRate {
            get {
                return this.ConvertationRateField;
            }
            set {
                if ((this.ConvertationRateField.Equals(value) != true)) {
                    this.ConvertationRateField = value;
                    this.RaisePropertyChanged("ConvertationRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WithCreditCode {
            get {
                return this.WithCreditCodeField;
            }
            set {
                if ((this.WithCreditCodeField.Equals(value) != true)) {
                    this.WithCreditCodeField = value;
                    this.RaisePropertyChanged("WithCreditCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CredentialActivationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CredentialActivationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Credential CredentialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Credential Credential {
            get {
                return this.CredentialField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialField, value) != true)) {
                    this.CredentialField = value;
                    this.RaisePropertyChanged("Credential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferCallContractTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferCallContractTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.TransferCallContractDetails TransferCallContractDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.TransferCallContractDetails TransferCallContractDetails {
            get {
                return this.TransferCallContractDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferCallContractDetailsField, value) != true)) {
                    this.TransferCallContractDetailsField = value;
                    this.RaisePropertyChanged("TransferCallContractDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositCaseOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositCaseOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.DepositCase DepositCaseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.DepositCase DepositCase {
            get {
                return this.DepositCaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositCaseField, value) != true)) {
                    this.DepositCaseField = value;
                    this.RaisePropertyChanged("DepositCase");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferToShopOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferToShopOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class InsuranceOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Insurance InsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Insurance Insurance {
            get {
                return this.InsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceField, value) != true)) {
                    this.InsuranceField = value;
                    this.RaisePropertyChanged("Insurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardDataChangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardDataChangeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductAppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.AdditionalValueType ValueTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((this.FieldTypeField.Equals(value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldTypeDescription {
            get {
                return this.FieldTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeDescriptionField, value) != true)) {
                    this.FieldTypeDescriptionField = value;
                    this.RaisePropertyChanged("FieldTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueField, value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductAppId {
            get {
                return this.ProductAppIdField;
            }
            set {
                if ((this.ProductAppIdField.Equals(value) != true)) {
                    this.ProductAppIdField = value;
                    this.RaisePropertyChanged("ProductAppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.AdditionalValueType ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((this.ValueTypeField.Equals(value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardServiceFeeGrafikDataChangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardServiceFeeGrafikDataChangeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik> CardServiceFeeGrafikField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductAppIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik> CardServiceFeeGrafik {
            get {
                return this.CardServiceFeeGrafikField;
            }
            set {
                if ((object.ReferenceEquals(this.CardServiceFeeGrafikField, value) != true)) {
                    this.CardServiceFeeGrafikField = value;
                    this.RaisePropertyChanged("CardServiceFeeGrafik");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductAppId {
            get {
                return this.ProductAppIdField;
            }
            set {
                if ((this.ProductAppIdField.Equals(value) != true)) {
                    this.ProductAppIdField = value;
                    this.RaisePropertyChanged("ProductAppId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDataChangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.AccountAdditionalDataRemovableOrder))]
    public partial class AccountDataChangeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.AdditionalDetails AdditionalDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DataChangeAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.AdditionalDetails AdditionalDetails {
            get {
                return this.AdditionalDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDetailsField, value) != true)) {
                    this.AdditionalDetailsField = value;
                    this.RaisePropertyChanged("AdditionalDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DataChangeAccount {
            get {
                return this.DataChangeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DataChangeAccountField, value) != true)) {
                    this.DataChangeAccountField = value;
                    this.RaisePropertyChanged("DataChangeAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountAdditionalDataRemovableOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountAdditionalDataRemovableOrder : Test.ServiceReference1.AccountDataChangeOrder {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatusChangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardStatusChangeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CardStatus CardStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CardStatus CardStatus {
            get {
                return this.CardStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CardStatusField, value) != true)) {
                    this.CardStatusField = value;
                    this.RaisePropertyChanged("CardStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FactoringTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class FactoringTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProductTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanProductTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositDataChangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositDataChangeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Deposit DepositField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Deposit Deposit {
            get {
                return this.DepositField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositField, value) != true)) {
                    this.DepositField = value;
                    this.RaisePropertyChanged("Deposit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((this.FieldTypeField.Equals(value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldTypeDescription {
            get {
                return this.FieldTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeDescriptionField, value) != true)) {
                    this.FieldTypeDescriptionField = value;
                    this.RaisePropertyChanged("FieldTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldValue {
            get {
                return this.FieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldValueField, value) != true)) {
                    this.FieldValueField = value;
                    this.RaisePropertyChanged("FieldValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProductOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanProductOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountInAMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CommunicationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommunicationTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DisputeResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisputeResolutionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstRepaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoanUseCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoanUseLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoanUseRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ProductAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ProvisionAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProvisionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvisionCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountInAMD {
            get {
                return this.AmountInAMDField;
            }
            set {
                if ((this.AmountInAMDField.Equals(value) != true)) {
                    this.AmountInAMDField = value;
                    this.RaisePropertyChanged("AmountInAMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CommunicationType {
            get {
                return this.CommunicationTypeField;
            }
            set {
                if ((this.CommunicationTypeField.Equals(value) != true)) {
                    this.CommunicationTypeField = value;
                    this.RaisePropertyChanged("CommunicationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommunicationTypeDescription {
            get {
                return this.CommunicationTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CommunicationTypeDescriptionField, value) != true)) {
                    this.CommunicationTypeDescriptionField = value;
                    this.RaisePropertyChanged("CommunicationTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DisputeResolution {
            get {
                return this.DisputeResolutionField;
            }
            set {
                if ((this.DisputeResolutionField.Equals(value) != true)) {
                    this.DisputeResolutionField = value;
                    this.RaisePropertyChanged("DisputeResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisputeResolutionDescription {
            get {
                return this.DisputeResolutionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DisputeResolutionDescriptionField, value) != true)) {
                    this.DisputeResolutionDescriptionField = value;
                    this.RaisePropertyChanged("DisputeResolutionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((this.FeeAmountField.Equals(value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstRepaymentDate {
            get {
                return this.FirstRepaymentDateField;
            }
            set {
                if ((this.FirstRepaymentDateField.Equals(value) != true)) {
                    this.FirstRepaymentDateField = value;
                    this.RaisePropertyChanged("FirstRepaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanUseCountry {
            get {
                return this.LoanUseCountryField;
            }
            set {
                if ((this.LoanUseCountryField.Equals(value) != true)) {
                    this.LoanUseCountryField = value;
                    this.RaisePropertyChanged("LoanUseCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanUseLocality {
            get {
                return this.LoanUseLocalityField;
            }
            set {
                if ((this.LoanUseLocalityField.Equals(value) != true)) {
                    this.LoanUseLocalityField = value;
                    this.RaisePropertyChanged("LoanUseLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanUseRegion {
            get {
                return this.LoanUseRegionField;
            }
            set {
                if ((this.LoanUseRegionField.Equals(value) != true)) {
                    this.LoanUseRegionField = value;
                    this.RaisePropertyChanged("LoanUseRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ProductAccount {
            get {
                return this.ProductAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAccountField, value) != true)) {
                    this.ProductAccountField = value;
                    this.RaisePropertyChanged("ProductAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((this.ProductTypeField.Equals(value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTypeDescription {
            get {
                return this.ProductTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeDescriptionField, value) != true)) {
                    this.ProductTypeDescriptionField = value;
                    this.RaisePropertyChanged("ProductTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ProvisionAccount {
            get {
                return this.ProvisionAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvisionAccountField, value) != true)) {
                    this.ProvisionAccountField = value;
                    this.RaisePropertyChanged("ProvisionAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProvisionAmount {
            get {
                return this.ProvisionAmountField;
            }
            set {
                if ((this.ProvisionAmountField.Equals(value) != true)) {
                    this.ProvisionAmountField = value;
                    this.RaisePropertyChanged("ProvisionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvisionCurrency {
            get {
                return this.ProvisionCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvisionCurrencyField, value) != true)) {
                    this.ProvisionCurrencyField = value;
                    this.RaisePropertyChanged("ProvisionCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProductActivationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanProductActivationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountWithTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountWithTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FeeForTrasitAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccountWithTax {
            get {
                return this.FeeAccountWithTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountWithTaxField, value) != true)) {
                    this.FeeAccountWithTaxField = value;
                    this.RaisePropertyChanged("FeeAccountWithTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((this.FeeAmountField.Equals(value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmountWithTax {
            get {
                return this.FeeAmountWithTaxField;
            }
            set {
                if ((this.FeeAmountWithTaxField.Equals(value) != true)) {
                    this.FeeAmountWithTaxField = value;
                    this.RaisePropertyChanged("FeeAmountWithTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FeeForTrasitAccount {
            get {
                return this.FeeForTrasitAccountField;
            }
            set {
                if ((this.FeeForTrasitAccountField.Equals(value) != true)) {
                    this.FeeForTrasitAccountField = value;
                    this.RaisePropertyChanged("FeeForTrasitAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFreezeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountFreezeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AmountFreezeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FreezeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FreezeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FreezeReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreezeReasonAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreezeReasonDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AmountFreezeDate {
            get {
                return this.AmountFreezeDateField;
            }
            set {
                if ((this.AmountFreezeDateField.Equals(value) != true)) {
                    this.AmountFreezeDateField = value;
                    this.RaisePropertyChanged("AmountFreezeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FreezeAccount {
            get {
                return this.FreezeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezeAccountField, value) != true)) {
                    this.FreezeAccountField = value;
                    this.RaisePropertyChanged("FreezeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FreezeAmount {
            get {
                return this.FreezeAmountField;
            }
            set {
                if ((this.FreezeAmountField.Equals(value) != true)) {
                    this.FreezeAmountField = value;
                    this.RaisePropertyChanged("FreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FreezeDate {
            get {
                return this.FreezeDateField;
            }
            set {
                if ((this.FreezeDateField.Equals(value) != true)) {
                    this.FreezeDateField = value;
                    this.RaisePropertyChanged("FreezeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FreezeReason {
            get {
                return this.FreezeReasonField;
            }
            set {
                if ((this.FreezeReasonField.Equals(value) != true)) {
                    this.FreezeReasonField = value;
                    this.RaisePropertyChanged("FreezeReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreezeReasonAddInf {
            get {
                return this.FreezeReasonAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezeReasonAddInfField, value) != true)) {
                    this.FreezeReasonAddInfField = value;
                    this.RaisePropertyChanged("FreezeReasonAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreezeReasonDescription {
            get {
                return this.FreezeReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezeReasonDescriptionField, value) != true)) {
                    this.FreezeReasonDescriptionField = value;
                    this.RaisePropertyChanged("FreezeReasonDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountUnfreezeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountUnfreezeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FreezeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FreezedAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort UnfreezeReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnfreezeReasonAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnfreezeReasonDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FreezeId {
            get {
                return this.FreezeIdField;
            }
            set {
                if ((this.FreezeIdField.Equals(value) != true)) {
                    this.FreezeIdField = value;
                    this.RaisePropertyChanged("FreezeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FreezedAccount {
            get {
                return this.FreezedAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezedAccountField, value) != true)) {
                    this.FreezedAccountField = value;
                    this.RaisePropertyChanged("FreezedAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort UnfreezeReason {
            get {
                return this.UnfreezeReasonField;
            }
            set {
                if ((this.UnfreezeReasonField.Equals(value) != true)) {
                    this.UnfreezeReasonField = value;
                    this.RaisePropertyChanged("UnfreezeReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnfreezeReasonAddInf {
            get {
                return this.UnfreezeReasonAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.UnfreezeReasonAddInfField, value) != true)) {
                    this.UnfreezeReasonAddInfField = value;
                    this.RaisePropertyChanged("UnfreezeReasonAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnfreezeReasonDescription {
            get {
                return this.UnfreezeReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UnfreezeReasonDescriptionField, value) != true)) {
                    this.UnfreezeReasonDescriptionField = value;
                    this.RaisePropertyChanged("UnfreezeReasonDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeeForServiceProvidedOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class FeeForServiceProvidedOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CustomerResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ReceiverAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CustomerResidence {
            get {
                return this.CustomerResidenceField;
            }
            set {
                if ((this.CustomerResidenceField.Equals(value) != true)) {
                    this.CustomerResidenceField = value;
                    this.RaisePropertyChanged("CustomerResidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTypeDescription {
            get {
                return this.ServiceTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeDescriptionField, value) != true)) {
                    this.ServiceTypeDescriptionField = value;
                    this.RaisePropertyChanged("ServiceTypeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardUnpaidPercentPaymentOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardUnpaidPercentPaymentOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Card CardField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Card Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemovalOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class RemovalOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RemovingOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RemovingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemovingReasonAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemovingReasonDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RemovingOrderId {
            get {
                return this.RemovingOrderIdField;
            }
            set {
                if ((this.RemovingOrderIdField.Equals(value) != true)) {
                    this.RemovingOrderIdField = value;
                    this.RaisePropertyChanged("RemovingOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RemovingReason {
            get {
                return this.RemovingReasonField;
            }
            set {
                if ((this.RemovingReasonField.Equals(value) != true)) {
                    this.RemovingReasonField = value;
                    this.RaisePropertyChanged("RemovingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemovingReasonAdd {
            get {
                return this.RemovingReasonAddField;
            }
            set {
                if ((object.ReferenceEquals(this.RemovingReasonAddField, value) != true)) {
                    this.RemovingReasonAddField = value;
                    this.RaisePropertyChanged("RemovingReasonAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemovingReasonDescription {
            get {
                return this.RemovingReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RemovingReasonDescriptionField, value) != true)) {
                    this.RemovingReasonDescriptionField = value;
                    this.RaisePropertyChanged("RemovingReasonDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CredentialOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CredentialOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Credential CredentialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Credential Credential {
            get {
                return this.CredentialField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialField, value) != true)) {
                    this.CredentialField = value;
                    this.RaisePropertyChanged("Credential");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CredentialTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CredentialTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ClosingReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClosingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CredentialTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ClosingReasonType {
            get {
                return this.ClosingReasonTypeField;
            }
            set {
                if ((this.ClosingReasonTypeField.Equals(value) != true)) {
                    this.ClosingReasonTypeField = value;
                    this.RaisePropertyChanged("ClosingReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosingSetNumber {
            get {
                return this.ClosingSetNumberField;
            }
            set {
                if ((this.ClosingSetNumberField.Equals(value) != true)) {
                    this.ClosingSetNumberField = value;
                    this.RaisePropertyChanged("ClosingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CredentialType {
            get {
                return this.CredentialTypeField;
            }
            set {
                if ((this.CredentialTypeField.Equals(value) != true)) {
                    this.CredentialTypeField = value;
                    this.RaisePropertyChanged("CredentialType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ClosingReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Currency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DepositAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DepositNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.DepositType DepositTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ClosingReasonType {
            get {
                return this.ClosingReasonTypeField;
            }
            set {
                if ((this.ClosingReasonTypeField.Equals(value) != true)) {
                    this.ClosingReasonTypeField = value;
                    this.RaisePropertyChanged("ClosingReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonTypeDescription {
            get {
                return this.ClosingReasonTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonTypeDescriptionField, value) != true)) {
                    this.ClosingReasonTypeDescriptionField = value;
                    this.RaisePropertyChanged("ClosingReasonTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Currency")]
        public string Currency1 {
            get {
                return this.Currency1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Currency1Field, value) != true)) {
                    this.Currency1Field = value;
                    this.RaisePropertyChanged("Currency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DepositAccount {
            get {
                return this.DepositAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositAccountField, value) != true)) {
                    this.DepositAccountField = value;
                    this.RaisePropertyChanged("DepositAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DepositNumber {
            get {
                return this.DepositNumberField;
            }
            set {
                if ((this.DepositNumberField.Equals(value) != true)) {
                    this.DepositNumberField = value;
                    this.RaisePropertyChanged("DepositNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.DepositType DepositType {
            get {
                return this.DepositTypeField;
            }
            set {
                if ((this.DepositTypeField.Equals(value) != true)) {
                    this.DepositTypeField = value;
                    this.RaisePropertyChanged("DepositType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicePaymentNoteOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ServicePaymentNoteOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ServicePaymentNote NoteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ServicePaymentNote Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PensionApplicationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PensionApplicationTerminationOrder))]
    public partial class PensionApplicationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PensionApplication PensionApplicationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PensionApplication PensionApplication {
            get {
                return this.PensionApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.PensionApplicationField, value) != true)) {
                    this.PensionApplicationField = value;
                    this.RaisePropertyChanged("PensionApplication");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PensionApplicationTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PensionApplicationTerminationOrder : Test.ServiceReference1.PensionApplicationOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ClosingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeathCertificateNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeathDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ClosingType {
            get {
                return this.ClosingTypeField;
            }
            set {
                if ((this.ClosingTypeField.Equals(value) != true)) {
                    this.ClosingTypeField = value;
                    this.RaisePropertyChanged("ClosingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingTypeDescription {
            get {
                return this.ClosingTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingTypeDescriptionField, value) != true)) {
                    this.ClosingTypeDescriptionField = value;
                    this.RaisePropertyChanged("ClosingTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeathCertificateNumber {
            get {
                return this.DeathCertificateNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DeathCertificateNumberField, value) != true)) {
                    this.DeathCertificateNumberField = value;
                    this.RaisePropertyChanged("DeathCertificateNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeathDate {
            get {
                return this.DeathDateField;
            }
            set {
                if ((this.DeathDateField.Equals(value) != true)) {
                    this.DeathDateField = value;
                    this.RaisePropertyChanged("DeathDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferCallContractOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferCallContractOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.TransferCallContractDetails TransferCallContractDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.TransferCallContractDetails TransferCallContractDetails {
            get {
                return this.TransferCallContractDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferCallContractDetailsField, value) != true)) {
                    this.TransferCallContractDetailsField = value;
                    this.RaisePropertyChanged("TransferCallContractDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatureOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class MatureOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DayOfProductRateCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsProblematicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.MatureType MatureTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account PercentAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ProductAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ProductType ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort RepaymentSourceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepaymentSourceTypeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCode {
            get {
                return this.CreditCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCodeField, value) != true)) {
                    this.CreditCodeField = value;
                    this.RaisePropertyChanged("CreditCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DayOfProductRateCalculation {
            get {
                return this.DayOfProductRateCalculationField;
            }
            set {
                if ((this.DayOfProductRateCalculationField.Equals(value) != true)) {
                    this.DayOfProductRateCalculationField = value;
                    this.RaisePropertyChanged("DayOfProductRateCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProblematic {
            get {
                return this.IsProblematicField;
            }
            set {
                if ((this.IsProblematicField.Equals(value) != true)) {
                    this.IsProblematicField = value;
                    this.RaisePropertyChanged("IsProblematic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.MatureType MatureType {
            get {
                return this.MatureTypeField;
            }
            set {
                if ((this.MatureTypeField.Equals(value) != true)) {
                    this.MatureTypeField = value;
                    this.RaisePropertyChanged("MatureType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account PercentAccount {
            get {
                return this.PercentAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentAccountField, value) != true)) {
                    this.PercentAccountField = value;
                    this.RaisePropertyChanged("PercentAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PercentAmount {
            get {
                return this.PercentAmountField;
            }
            set {
                if ((this.PercentAmountField.Equals(value) != true)) {
                    this.PercentAmountField = value;
                    this.RaisePropertyChanged("PercentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ProductAccount {
            get {
                return this.ProductAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductAccountField, value) != true)) {
                    this.ProductAccountField = value;
                    this.RaisePropertyChanged("ProductAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCurrency {
            get {
                return this.ProductCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCurrencyField, value) != true)) {
                    this.ProductCurrencyField = value;
                    this.RaisePropertyChanged("ProductCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ProductType ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((this.ProductTypeField.Equals(value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort RepaymentSourceType {
            get {
                return this.RepaymentSourceTypeField;
            }
            set {
                if ((this.RepaymentSourceTypeField.Equals(value) != true)) {
                    this.RepaymentSourceTypeField = value;
                    this.RaisePropertyChanged("RepaymentSourceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepaymentSourceTypeDescription {
            get {
                return this.RepaymentSourceTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RepaymentSourceTypeDescriptionField, value) != true)) {
                    this.RepaymentSourceTypeDescriptionField = value;
                    this.RaisePropertyChanged("RepaymentSourceTypeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardClosingOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardClosingOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ClosingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ClosingReason {
            get {
                return this.ClosingReasonField;
            }
            set {
                if ((this.ClosingReasonField.Equals(value) != true)) {
                    this.ClosingReasonField = value;
                    this.RaisePropertyChanged("ClosingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonAdd {
            get {
                return this.ClosingReasonAddField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonAddField, value) != true)) {
                    this.ClosingReasonAddField = value;
                    this.RaisePropertyChanged("ClosingReasonAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonDescription {
            get {
                return this.ClosingReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonDescriptionField, value) != true)) {
                    this.ClosingReasonDescriptionField = value;
                    this.RaisePropertyChanged("ClosingReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicTerminationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicTerminationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferApproveOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferApproveOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Transfer TransferField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Transfer Transfer {
            get {
                return this.TransferField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferField, value) != true)) {
                    this.TransferField = value;
                    this.RaisePropertyChanged("Transfer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferByCallChangeOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferByCallChangeOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ReceivedFastTransferPaymentOrder ReceivedFastTransferField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ReceivedFastTransferPaymentOrder ReceivedFastTransfer {
            get {
                return this.ReceivedFastTransferField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedFastTransferField, value) != true)) {
                    this.ReceivedFastTransferField = value;
                    this.RaisePropertyChanged("ReceivedFastTransfer");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositCaseStoppingPenaltyCalculationOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositCaseStoppingPenaltyCalculationOrder : Test.ServiceReference1.Order {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfStoppingPenaltyCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangingReason {
            get {
                return this.ChangingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangingReasonField, value) != true)) {
                    this.ChangingReasonField = value;
                    this.RaisePropertyChanged("ChangingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfStoppingPenaltyCalculation {
            get {
                return this.DateOfStoppingPenaltyCalculationField;
            }
            set {
                if ((this.DateOfStoppingPenaltyCalculationField.Equals(value) != true)) {
                    this.DateOfStoppingPenaltyCalculationField = value;
                    this.RaisePropertyChanged("DateOfStoppingPenaltyCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AdditionalDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AdditionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.AdditionalValueType AdditionalValueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort AdditionType {
            get {
                return this.AdditionTypeField;
            }
            set {
                if ((this.AdditionTypeField.Equals(value) != true)) {
                    this.AdditionTypeField = value;
                    this.RaisePropertyChanged("AdditionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionTypeDescription {
            get {
                return this.AdditionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionTypeDescriptionField, value) != true)) {
                    this.AdditionTypeDescriptionField = value;
                    this.RaisePropertyChanged("AdditionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionValue {
            get {
                return this.AdditionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionValueField, value) != true)) {
                    this.AdditionValueField = value;
                    this.RaisePropertyChanged("AdditionValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.AdditionalValueType AdditionalValueType {
            get {
                return this.AdditionalValueTypeField;
            }
            set {
                if ((this.AdditionalValueTypeField.Equals(value) != true)) {
                    this.AdditionalValueTypeField = value;
                    this.RaisePropertyChanged("AdditionalValueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderAttachment", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class OrderAttachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Attachment {
            get {
                return this.AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentField, value) != true)) {
                    this.AttachmentField = value;
                    this.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderFee", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class OrderFee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberField, value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderQuality", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum OrderQuality : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotDefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sent3 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclinedByApprover = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removed = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemovedByOrder = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionLimitApprovement = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyExchangeWithVariation = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitFromNotGivenCard = 56,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum SourceType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bank = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaOnline = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcbaOnlineXML = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmSoft = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileBanking = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBanking = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInTerminal = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalCashTerminal = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum OrderType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotDefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RATransfer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Convertation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternationalTransfer = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositTermination = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanMature = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RosterTransfer = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccountOpen = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverdraftRepayment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicTransfer = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicTransferStop = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccountReOpen = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditSecureDeposit = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineSecureDeposit = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunalPayment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeDeposit = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThirdPersonDeposit = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelTransaction = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemoveTransaction = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReferenceOrder = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineMature = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChequeBookOrder = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashOrder = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatmentByEmailOrder = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SwiftCopyOrder = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerDataOrder = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JointCurrentAccountOpen = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccountClose = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardClosing = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountDataChange = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDebit = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashCredit = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashConvertation = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDebitConvertation = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashCreditConvertation = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashForRATransfer = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountServicePayment = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServicePayment = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashCommunalPayment = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountServicePaymentXnd = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServicePaymentXnd = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitPaymentOrder = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInternationalTransfer = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InBankConvertation = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountFreeze = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountUnfreeze = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashPosPayment = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBActivation = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardUnpayedPercentPayment = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeeForServiceProvided = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashFeeForServiceProvided = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanActivation = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLineActivation = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChequeBookReceiveOrder = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastTransferPaymentOrder = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialOrder = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardCreditLineRepayment = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedFastTransferPaymentOrder = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardReRelease = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashTransitCurrencyExchangeOrder = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitCashOutCurrencyExchangeOrder = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitNonCashOutCurrencyExchangeOrder = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeePayment = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitCashOut = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransitNonCashOut = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterBankTransferCash = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServicePaymentNote = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteServicePaymentNote = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationOrder = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InterBankTransferNonCash = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationActivationOrder = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationActivationRemovalOrder = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationTerminationOrder = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PensionApplicationOverwriteOrder = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrTransferOrder = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferCallContractOrder = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferCallContractTerminationOrder = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseOrder = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseActivationOrder = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseDeleteOrder = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseTermiationOrder = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastTransferFromCustomerAccount = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardRegistrationOrder = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCasePenaltyMatureOrder = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDepositCasePenaltyMatureOrder = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferToShopOrder = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsuranceOrder = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInsuranceOrder = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuaranteeActivation = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccreditiveActivation = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FactoringActivation = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardDataChangeOrder = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeeGrafikDataChangeOrder = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferConfirmOrder = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeeGrafikRemovableOrder = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationOrder = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrCommunalPayment = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrCashCommunalPayment = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationRestoreOrder = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationTerminationOrder = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardServiceFeePaymentFromProblematicLoanTransitAccount = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReestrPaymentOrder = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferDeleteOrder = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountAdditionalDataRemovableOrder = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardReNewOrder = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractOrder = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractEditOrder = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractClosingOrder = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBApplicationUpdateOrder = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestTokenUnBlockOrder = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestTokenActivationOrder = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestTokenDeactivationOrder = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashOutFromTransitAccountsOrder = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferApproveOrder = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardStatusChangeOrder = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardRePlaceOrder = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialTerminationOrder = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialDeleteOrder = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidGuaranteeActivation = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FactoringTermination = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GuaranteeTermination = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficit = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookInOut = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitApprove = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookInOutApprove = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookReject = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositDataChangeOrder = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitClosing = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookSurPlusDeficitClosingApprove = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestUserDeactivationOrder = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferByCallChangeOrder = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidFactoringActivation = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashInByOtherCashTerminal = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanMatureByOtherCashTerminal = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashConvertationByOtherCashTerminal = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccreditiveTerminationOrder = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBRegistrationCodeResendOrder = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBServletRequestShowPINCodeOrder = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FastOverdraftApplication = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanApplicationAnalysis = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanApplicationConfirmation = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelLoanApplication = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeleteLoanApplication = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HBActivationRejection = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositCaseStoppingPenaltyCalculationOrder = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneBankingContractActivation = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashBookDelete = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialActivationOrder = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CredentialActivationOrderCash = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssigneeIdentificationOrder = 170,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalValueType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum AdditionalValueType : ushort {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Double = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Deposit", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Deposit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAmountAdditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BonusInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CancelRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CancelRateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ClosingReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClosingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ConnectAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ConnectAccountForPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentRateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DayOfRateCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DepositAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DepositNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.DepositOption> DepositOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DepositQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepositQualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DepositTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepositTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EffectiveInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvolvingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort JointTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JointTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeeperOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainDepositNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProfitOnMonthFirstDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecontractSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatementDeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatementDeliveryTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalRateValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAmountAddition {
            get {
                return this.AllowAmountAdditionField;
            }
            set {
                if ((this.AllowAmountAdditionField.Equals(value) != true)) {
                    this.AllowAmountAdditionField = value;
                    this.RaisePropertyChanged("AllowAmountAddition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BonusInterestRate {
            get {
                return this.BonusInterestRateField;
            }
            set {
                if ((this.BonusInterestRateField.Equals(value) != true)) {
                    this.BonusInterestRateField = value;
                    this.RaisePropertyChanged("BonusInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CancelRate {
            get {
                return this.CancelRateField;
            }
            set {
                if ((this.CancelRateField.Equals(value) != true)) {
                    this.CancelRateField = value;
                    this.RaisePropertyChanged("CancelRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CancelRateValue {
            get {
                return this.CancelRateValueField;
            }
            set {
                if ((this.CancelRateValueField.Equals(value) != true)) {
                    this.CancelRateValueField = value;
                    this.RaisePropertyChanged("CancelRateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ClosingReasonType {
            get {
                return this.ClosingReasonTypeField;
            }
            set {
                if ((this.ClosingReasonTypeField.Equals(value) != true)) {
                    this.ClosingReasonTypeField = value;
                    this.RaisePropertyChanged("ClosingReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonTypeDescription {
            get {
                return this.ClosingReasonTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonTypeDescriptionField, value) != true)) {
                    this.ClosingReasonTypeDescriptionField = value;
                    this.RaisePropertyChanged("ClosingReasonTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosingSetNumber {
            get {
                return this.ClosingSetNumberField;
            }
            set {
                if ((this.ClosingSetNumberField.Equals(value) != true)) {
                    this.ClosingSetNumberField = value;
                    this.RaisePropertyChanged("ClosingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ConnectAccount {
            get {
                return this.ConnectAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectAccountField, value) != true)) {
                    this.ConnectAccountField = value;
                    this.RaisePropertyChanged("ConnectAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ConnectAccountForPercent {
            get {
                return this.ConnectAccountForPercentField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectAccountForPercentField, value) != true)) {
                    this.ConnectAccountForPercentField = value;
                    this.RaisePropertyChanged("ConnectAccountForPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentRateValue {
            get {
                return this.CurrentRateValueField;
            }
            set {
                if ((this.CurrentRateValueField.Equals(value) != true)) {
                    this.CurrentRateValueField = value;
                    this.RaisePropertyChanged("CurrentRateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DayOfRateCalculation {
            get {
                return this.DayOfRateCalculationField;
            }
            set {
                if ((this.DayOfRateCalculationField.Equals(value) != true)) {
                    this.DayOfRateCalculationField = value;
                    this.RaisePropertyChanged("DayOfRateCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DepositAccount {
            get {
                return this.DepositAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositAccountField, value) != true)) {
                    this.DepositAccountField = value;
                    this.RaisePropertyChanged("DepositAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DepositNumber {
            get {
                return this.DepositNumberField;
            }
            set {
                if ((this.DepositNumberField.Equals(value) != true)) {
                    this.DepositNumberField = value;
                    this.RaisePropertyChanged("DepositNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.DepositOption> DepositOption {
            get {
                return this.DepositOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositOptionField, value) != true)) {
                    this.DepositOptionField = value;
                    this.RaisePropertyChanged("DepositOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DepositQuality {
            get {
                return this.DepositQualityField;
            }
            set {
                if ((this.DepositQualityField.Equals(value) != true)) {
                    this.DepositQualityField = value;
                    this.RaisePropertyChanged("DepositQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepositQualityDescription {
            get {
                return this.DepositQualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositQualityDescriptionField, value) != true)) {
                    this.DepositQualityDescriptionField = value;
                    this.RaisePropertyChanged("DepositQualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DepositType {
            get {
                return this.DepositTypeField;
            }
            set {
                if ((this.DepositTypeField.Equals(value) != true)) {
                    this.DepositTypeField = value;
                    this.RaisePropertyChanged("DepositType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepositTypeDescription {
            get {
                return this.DepositTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepositTypeDescriptionField, value) != true)) {
                    this.DepositTypeDescriptionField = value;
                    this.RaisePropertyChanged("DepositTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EffectiveInterestRate {
            get {
                return this.EffectiveInterestRateField;
            }
            set {
                if ((this.EffectiveInterestRateField.Equals(value) != true)) {
                    this.EffectiveInterestRateField = value;
                    this.RaisePropertyChanged("EffectiveInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvolvingSetNumber {
            get {
                return this.InvolvingSetNumberField;
            }
            set {
                if ((this.InvolvingSetNumberField.Equals(value) != true)) {
                    this.InvolvingSetNumberField = value;
                    this.RaisePropertyChanged("InvolvingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort JointType {
            get {
                return this.JointTypeField;
            }
            set {
                if ((this.JointTypeField.Equals(value) != true)) {
                    this.JointTypeField = value;
                    this.RaisePropertyChanged("JointType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JointTypeDescription {
            get {
                return this.JointTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JointTypeDescriptionField, value) != true)) {
                    this.JointTypeDescriptionField = value;
                    this.RaisePropertyChanged("JointTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KeeperOpen {
            get {
                return this.KeeperOpenField;
            }
            set {
                if ((this.KeeperOpenField.Equals(value) != true)) {
                    this.KeeperOpenField = value;
                    this.RaisePropertyChanged("KeeperOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainDepositNumber {
            get {
                return this.MainDepositNumberField;
            }
            set {
                if ((this.MainDepositNumberField.Equals(value) != true)) {
                    this.MainDepositNumberField = value;
                    this.RaisePropertyChanged("MainDepositNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ProfitOnMonthFirstDay {
            get {
                return this.ProfitOnMonthFirstDayField;
            }
            set {
                if ((this.ProfitOnMonthFirstDayField.Equals(value) != true)) {
                    this.ProfitOnMonthFirstDayField = value;
                    this.RaisePropertyChanged("ProfitOnMonthFirstDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecontractSign {
            get {
                return this.RecontractSignField;
            }
            set {
                if ((this.RecontractSignField.Equals(value) != true)) {
                    this.RecontractSignField = value;
                    this.RaisePropertyChanged("RecontractSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatementDeliveryType {
            get {
                return this.StatementDeliveryTypeField;
            }
            set {
                if ((this.StatementDeliveryTypeField.Equals(value) != true)) {
                    this.StatementDeliveryTypeField = value;
                    this.RaisePropertyChanged("StatementDeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatementDeliveryTypeDescription {
            get {
                return this.StatementDeliveryTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementDeliveryTypeDescriptionField, value) != true)) {
                    this.StatementDeliveryTypeDescriptionField = value;
                    this.RaisePropertyChanged("StatementDeliveryTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalRateValue {
            get {
                return this.TotalRateValueField;
            }
            set {
                if ((this.TotalRateValueField.Equals(value) != true)) {
                    this.TotalRateValueField = value;
                    this.RaisePropertyChanged("TotalRateValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositAction", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ActionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.DepositType DepositTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionId {
            get {
                return this.ActionIdField;
            }
            set {
                if ((this.ActionIdField.Equals(value) != true)) {
                    this.ActionIdField = value;
                    this.RaisePropertyChanged("ActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ActionNumber {
            get {
                return this.ActionNumberField;
            }
            set {
                if ((this.ActionNumberField.Equals(value) != true)) {
                    this.ActionNumberField = value;
                    this.RaisePropertyChanged("ActionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionTypeDescription {
            get {
                return this.ActionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTypeDescriptionField, value) != true)) {
                    this.ActionTypeDescriptionField = value;
                    this.RaisePropertyChanged("ActionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.DepositType DepositType {
            get {
                return this.DepositTypeField;
            }
            set {
                if ((this.DepositTypeField.Equals(value) != true)) {
                    this.DepositTypeField = value;
                    this.RaisePropertyChanged("DepositType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum DepositType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositClassic = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildrensDeposit = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositAccumulative = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositGeneral = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepositFamily = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvertibleDeposit = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinesDeposit = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YesNo", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum YesNo : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfunsignedLongstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfunsignedLongstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ulong keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ulong key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositOption", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort OptionGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort OptionGroup {
            get {
                return this.OptionGroupField;
            }
            set {
                if ((this.OptionGroupField.Equals(value) != true)) {
                    this.OptionGroupField = value;
                    this.RaisePropertyChanged("OptionGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunalTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum CommunalTypes : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENA = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gas = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmWater = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YerWater = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArmenTel = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VivaCell = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UCom = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Orange = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trash = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COWater = 14,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="COWaterReestrDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class COWaterReestrDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MembershipFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WaterPaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentNumber {
            get {
                return this.AbonentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentNumberField, value) != true)) {
                    this.AbonentNumberField = value;
                    this.RaisePropertyChanged("AbonentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MembershipFee {
            get {
                return this.MembershipFeeField;
            }
            set {
                if ((this.MembershipFeeField.Equals(value) != true)) {
                    this.MembershipFeeField = value;
                    this.RaisePropertyChanged("MembershipFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalCharge {
            get {
                return this.TotalChargeField;
            }
            set {
                if ((this.TotalChargeField.Equals(value) != true)) {
                    this.TotalChargeField = value;
                    this.RaisePropertyChanged("TotalCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WaterPayment {
            get {
                return this.WaterPaymentField;
            }
            set {
                if ((this.WaterPaymentField.Equals(value) != true)) {
                    this.WaterPaymentField = value;
                    this.RaisePropertyChanged("WaterPayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeRateVariationType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ExchangeRateVariationType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DillingVariation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BranchVariation = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeRoundingDirectionType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ExchangeRoundingDirectionType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToCurrency = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToAMD = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReestrTransferAdditionalDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ReestrTransferAdditionalDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferAdditionalData", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferAdditionalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReceiverLivingPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverLivingPlaceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderLivingPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderLivingPlaceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferAmountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferAmountTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfintdouble> TransferPurposesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfstringdouble> TransferPurposesDescriptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReceiverLivingPlace {
            get {
                return this.ReceiverLivingPlaceField;
            }
            set {
                if ((this.ReceiverLivingPlaceField.Equals(value) != true)) {
                    this.ReceiverLivingPlaceField = value;
                    this.RaisePropertyChanged("ReceiverLivingPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverLivingPlaceDescription {
            get {
                return this.ReceiverLivingPlaceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverLivingPlaceDescriptionField, value) != true)) {
                    this.ReceiverLivingPlaceDescriptionField = value;
                    this.RaisePropertyChanged("ReceiverLivingPlaceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SenderLivingPlace {
            get {
                return this.SenderLivingPlaceField;
            }
            set {
                if ((this.SenderLivingPlaceField.Equals(value) != true)) {
                    this.SenderLivingPlaceField = value;
                    this.RaisePropertyChanged("SenderLivingPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderLivingPlaceDescription {
            get {
                return this.SenderLivingPlaceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderLivingPlaceDescriptionField, value) != true)) {
                    this.SenderLivingPlaceDescriptionField = value;
                    this.RaisePropertyChanged("SenderLivingPlaceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferAmountType {
            get {
                return this.TransferAmountTypeField;
            }
            set {
                if ((this.TransferAmountTypeField.Equals(value) != true)) {
                    this.TransferAmountTypeField = value;
                    this.RaisePropertyChanged("TransferAmountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferAmountTypeDescription {
            get {
                return this.TransferAmountTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferAmountTypeDescriptionField, value) != true)) {
                    this.TransferAmountTypeDescriptionField = value;
                    this.RaisePropertyChanged("TransferAmountTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfintdouble> TransferPurposes {
            get {
                return this.TransferPurposesField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPurposesField, value) != true)) {
                    this.TransferPurposesField = value;
                    this.RaisePropertyChanged("TransferPurposes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfstringdouble> TransferPurposesDescriptions {
            get {
                return this.TransferPurposesDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPurposesDescriptionsField, value) != true)) {
                    this.TransferPurposesDescriptionsField = value;
                    this.RaisePropertyChanged("TransferPurposesDescriptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfintdouble", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfintdouble : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int keyField;
        
        private double valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfstringdouble", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfstringdouble : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string keyField;
        
        private double valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitAccountTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum TransitAccountTypes : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForArmTransfer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForProblemLoans = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForLeasingLoans = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForReestrManagement = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForMatureByCreditCode = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CardAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ClosingReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClosingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CreditLine CreditLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeForCashTransactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float InterestRateEffectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDayOfPositiveRateCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDayOfPositiveRateRepairField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainCardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CreditLine OverdraftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account OverdraftAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PositiveInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PositiveRateStoppingDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedOfficeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort RelatedOfficeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SMSApplicationPresentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalPositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddInf {
            get {
                return this.AddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AddInfField, value) != true)) {
                    this.AddInfField = value;
                    this.RaisePropertyChanged("AddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CardAccount {
            get {
                return this.CardAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CardAccountField, value) != true)) {
                    this.CardAccountField = value;
                    this.RaisePropertyChanged("CardAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardSystem {
            get {
                return this.CardSystemField;
            }
            set {
                if ((this.CardSystemField.Equals(value) != true)) {
                    this.CardSystemField = value;
                    this.RaisePropertyChanged("CardSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ClosingReasonType {
            get {
                return this.ClosingReasonTypeField;
            }
            set {
                if ((this.ClosingReasonTypeField.Equals(value) != true)) {
                    this.ClosingReasonTypeField = value;
                    this.RaisePropertyChanged("ClosingReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReasonTypeDescription {
            get {
                return this.ClosingReasonTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonTypeDescriptionField, value) != true)) {
                    this.ClosingReasonTypeDescriptionField = value;
                    this.RaisePropertyChanged("ClosingReasonTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosingSetNumber {
            get {
                return this.ClosingSetNumberField;
            }
            set {
                if ((this.ClosingSetNumberField.Equals(value) != true)) {
                    this.ClosingSetNumberField = value;
                    this.RaisePropertyChanged("ClosingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCode {
            get {
                return this.CreditCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCodeField, value) != true)) {
                    this.CreditCodeField = value;
                    this.RaisePropertyChanged("CreditCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CreditLine CreditLine {
            get {
                return this.CreditLineField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditLineField, value) != true)) {
                    this.CreditLineField = value;
                    this.RaisePropertyChanged("CreditLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeForCashTransaction {
            get {
                return this.FeeForCashTransactionField;
            }
            set {
                if ((this.FeeForCashTransactionField.Equals(value) != true)) {
                    this.FeeForCashTransactionField = value;
                    this.RaisePropertyChanged("FeeForCashTransaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float InterestRateEffective {
            get {
                return this.InterestRateEffectiveField;
            }
            set {
                if ((this.InterestRateEffectiveField.Equals(value) != true)) {
                    this.InterestRateEffectiveField = value;
                    this.RaisePropertyChanged("InterestRateEffective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDayOfPositiveRateCalculation {
            get {
                return this.LastDayOfPositiveRateCalculationField;
            }
            set {
                if ((this.LastDayOfPositiveRateCalculationField.Equals(value) != true)) {
                    this.LastDayOfPositiveRateCalculationField = value;
                    this.RaisePropertyChanged("LastDayOfPositiveRateCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDayOfPositiveRateRepair {
            get {
                return this.LastDayOfPositiveRateRepairField;
            }
            set {
                if ((this.LastDayOfPositiveRateRepairField.Equals(value) != true)) {
                    this.LastDayOfPositiveRateRepairField = value;
                    this.RaisePropertyChanged("LastDayOfPositiveRateRepair");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainCardNumber {
            get {
                return this.MainCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MainCardNumberField, value) != true)) {
                    this.MainCardNumberField = value;
                    this.RaisePropertyChanged("MainCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenDate {
            get {
                return this.OpenDateField;
            }
            set {
                if ((this.OpenDateField.Equals(value) != true)) {
                    this.OpenDateField = value;
                    this.RaisePropertyChanged("OpenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CreditLine Overdraft {
            get {
                return this.OverdraftField;
            }
            set {
                if ((object.ReferenceEquals(this.OverdraftField, value) != true)) {
                    this.OverdraftField = value;
                    this.RaisePropertyChanged("Overdraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account OverdraftAccount {
            get {
                return this.OverdraftAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OverdraftAccountField, value) != true)) {
                    this.OverdraftAccountField = value;
                    this.RaisePropertyChanged("OverdraftAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PositiveInterestRate {
            get {
                return this.PositiveInterestRateField;
            }
            set {
                if ((this.PositiveInterestRateField.Equals(value) != true)) {
                    this.PositiveInterestRateField = value;
                    this.RaisePropertyChanged("PositiveInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PositiveRate {
            get {
                return this.PositiveRateField;
            }
            set {
                if ((this.PositiveRateField.Equals(value) != true)) {
                    this.PositiveRateField = value;
                    this.RaisePropertyChanged("PositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PositiveRateStoppingDay {
            get {
                return this.PositiveRateStoppingDayField;
            }
            set {
                if ((this.PositiveRateStoppingDayField.Equals(value) != true)) {
                    this.PositiveRateStoppingDayField = value;
                    this.RaisePropertyChanged("PositiveRateStoppingDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedOfficeName {
            get {
                return this.RelatedOfficeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedOfficeNameField, value) != true)) {
                    this.RelatedOfficeNameField = value;
                    this.RaisePropertyChanged("RelatedOfficeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort RelatedOfficeNumber {
            get {
                return this.RelatedOfficeNumberField;
            }
            set {
                if ((this.RelatedOfficeNumberField.Equals(value) != true)) {
                    this.RelatedOfficeNumberField = value;
                    this.RaisePropertyChanged("RelatedOfficeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SMSApplicationPresent {
            get {
                return this.SMSApplicationPresentField;
            }
            set {
                if ((this.SMSApplicationPresentField.Equals(value) != true)) {
                    this.SMSApplicationPresentField = value;
                    this.RaisePropertyChanged("SMSApplicationPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalPositiveRate {
            get {
                return this.TotalPositiveRateField;
            }
            set {
                if ((this.TotalPositiveRateField.Equals(value) != true)) {
                    this.TotalPositiveRateField = value;
                    this.RaisePropertyChanged("TotalPositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValidationDate {
            get {
                return this.ValidationDateField;
            }
            set {
                if ((this.ValidationDateField.Equals(value) != true)) {
                    this.ValidationDateField = value;
                    this.RaisePropertyChanged("ValidationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditLine", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CreditLine : Test.ServiceReference1.LoanProduct {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentRateValueUnusedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfCreditLineStoppingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateNusedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedCurrentRateValueUnusedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentRateValueUnused {
            get {
                return this.CurrentRateValueUnusedField;
            }
            set {
                if ((this.CurrentRateValueUnusedField.Equals(value) != true)) {
                    this.CurrentRateValueUnusedField = value;
                    this.RaisePropertyChanged("CurrentRateValueUnused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfCreditLineStopping {
            get {
                return this.DateOfCreditLineStoppingField;
            }
            set {
                if ((this.DateOfCreditLineStoppingField.Equals(value) != true)) {
                    this.DateOfCreditLineStoppingField = value;
                    this.RaisePropertyChanged("DateOfCreditLineStopping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRateNused {
            get {
                return this.InterestRateNusedField;
            }
            set {
                if ((this.InterestRateNusedField.Equals(value) != true)) {
                    this.InterestRateNusedField = value;
                    this.RaisePropertyChanged("InterestRateNused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedCurrentRateValueUnused {
            get {
                return this.MaturedCurrentRateValueUnusedField;
            }
            set {
                if ((this.MaturedCurrentRateValueUnusedField.Equals(value) != true)) {
                    this.MaturedCurrentRateValueUnusedField = value;
                    this.RaisePropertyChanged("MaturedCurrentRateValueUnused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProduct", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CreditHereAndNow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.LeasingLoan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.Loan))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.Guarantee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.Accreditive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaidGuarantee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaidAccreditive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaidFactoring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CreditLine))]
    public partial class LoanProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountNotPaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ConnectAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentRateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DailyPenaltyInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DayOfRateCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FillialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FondDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InpaiedRestOfRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float InterestRateEffectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float InterestRateFullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JudgmentEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float JudgmentPenaltyPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double JudgmentRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> JudgmentStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateOfRateRepairField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account LoanAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LoanProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanProgramDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedCurrentRateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedJudgmentPenaltyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedPenaltyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OutCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OutPenaltyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OverdueCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OverdueLoanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PenaltyAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PenaltyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalJudgmentPenaltyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalRateValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountNotPaid {
            get {
                return this.AmountNotPaidField;
            }
            set {
                if ((this.AmountNotPaidField.Equals(value) != true)) {
                    this.AmountNotPaidField = value;
                    this.RaisePropertyChanged("AmountNotPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ConnectAccount {
            get {
                return this.ConnectAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectAccountField, value) != true)) {
                    this.ConnectAccountField = value;
                    this.RaisePropertyChanged("ConnectAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCode {
            get {
                return this.CreditCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCodeField, value) != true)) {
                    this.CreditCodeField = value;
                    this.RaisePropertyChanged("CreditCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentCapital {
            get {
                return this.CurrentCapitalField;
            }
            set {
                if ((this.CurrentCapitalField.Equals(value) != true)) {
                    this.CurrentCapitalField = value;
                    this.RaisePropertyChanged("CurrentCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentRateValue {
            get {
                return this.CurrentRateValueField;
            }
            set {
                if ((this.CurrentRateValueField.Equals(value) != true)) {
                    this.CurrentRateValueField = value;
                    this.RaisePropertyChanged("CurrentRateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DailyPenaltyInterestRate {
            get {
                return this.DailyPenaltyInterestRateField;
            }
            set {
                if ((this.DailyPenaltyInterestRateField.Equals(value) != true)) {
                    this.DailyPenaltyInterestRateField = value;
                    this.RaisePropertyChanged("DailyPenaltyInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DayOfRateCalculation {
            get {
                return this.DayOfRateCalculationField;
            }
            set {
                if ((this.DayOfRateCalculationField.Equals(value) != true)) {
                    this.DayOfRateCalculationField = value;
                    this.RaisePropertyChanged("DayOfRateCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FillialCode {
            get {
                return this.FillialCodeField;
            }
            set {
                if ((this.FillialCodeField.Equals(value) != true)) {
                    this.FillialCodeField = value;
                    this.RaisePropertyChanged("FillialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Fond {
            get {
                return this.FondField;
            }
            set {
                if ((this.FondField.Equals(value) != true)) {
                    this.FondField = value;
                    this.RaisePropertyChanged("Fond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FondDescription {
            get {
                return this.FondDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FondDescriptionField, value) != true)) {
                    this.FondDescriptionField = value;
                    this.RaisePropertyChanged("FondDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasClaim {
            get {
                return this.HasClaimField;
            }
            set {
                if ((this.HasClaimField.Equals(value) != true)) {
                    this.HasClaimField = value;
                    this.RaisePropertyChanged("HasClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InpaiedRestOfRate {
            get {
                return this.InpaiedRestOfRateField;
            }
            set {
                if ((this.InpaiedRestOfRateField.Equals(value) != true)) {
                    this.InpaiedRestOfRateField = value;
                    this.RaisePropertyChanged("InpaiedRestOfRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float InterestRateEffective {
            get {
                return this.InterestRateEffectiveField;
            }
            set {
                if ((this.InterestRateEffectiveField.Equals(value) != true)) {
                    this.InterestRateEffectiveField = value;
                    this.RaisePropertyChanged("InterestRateEffective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float InterestRateFull {
            get {
                return this.InterestRateFullField;
            }
            set {
                if ((this.InterestRateFullField.Equals(value) != true)) {
                    this.InterestRateFullField = value;
                    this.RaisePropertyChanged("InterestRateFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JudgmentEndDate {
            get {
                return this.JudgmentEndDateField;
            }
            set {
                if ((this.JudgmentEndDateField.Equals(value) != true)) {
                    this.JudgmentEndDateField = value;
                    this.RaisePropertyChanged("JudgmentEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float JudgmentPenaltyPercent {
            get {
                return this.JudgmentPenaltyPercentField;
            }
            set {
                if ((this.JudgmentPenaltyPercentField.Equals(value) != true)) {
                    this.JudgmentPenaltyPercentField = value;
                    this.RaisePropertyChanged("JudgmentPenaltyPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double JudgmentRate {
            get {
                return this.JudgmentRateField;
            }
            set {
                if ((this.JudgmentRateField.Equals(value) != true)) {
                    this.JudgmentRateField = value;
                    this.RaisePropertyChanged("JudgmentRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> JudgmentStartDate {
            get {
                return this.JudgmentStartDateField;
            }
            set {
                if ((this.JudgmentStartDateField.Equals(value) != true)) {
                    this.JudgmentStartDateField = value;
                    this.RaisePropertyChanged("JudgmentStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDateOfRateRepair {
            get {
                return this.LastDateOfRateRepairField;
            }
            set {
                if ((this.LastDateOfRateRepairField.Equals(value) != true)) {
                    this.LastDateOfRateRepairField = value;
                    this.RaisePropertyChanged("LastDateOfRateRepair");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account LoanAccount {
            get {
                return this.LoanAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanAccountField, value) != true)) {
                    this.LoanAccountField = value;
                    this.RaisePropertyChanged("LoanAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LoanProgram {
            get {
                return this.LoanProgramField;
            }
            set {
                if ((this.LoanProgramField.Equals(value) != true)) {
                    this.LoanProgramField = value;
                    this.RaisePropertyChanged("LoanProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanProgramDescription {
            get {
                return this.LoanProgramDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanProgramDescriptionField, value) != true)) {
                    this.LoanProgramDescriptionField = value;
                    this.RaisePropertyChanged("LoanProgramDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainContractNumber {
            get {
                return this.MainContractNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MainContractNumberField, value) != true)) {
                    this.MainContractNumberField = value;
                    this.RaisePropertyChanged("MainContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedCurrentRateValue {
            get {
                return this.MaturedCurrentRateValueField;
            }
            set {
                if ((this.MaturedCurrentRateValueField.Equals(value) != true)) {
                    this.MaturedCurrentRateValueField = value;
                    this.RaisePropertyChanged("MaturedCurrentRateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedJudgmentPenaltyRate {
            get {
                return this.MaturedJudgmentPenaltyRateField;
            }
            set {
                if ((this.MaturedJudgmentPenaltyRateField.Equals(value) != true)) {
                    this.MaturedJudgmentPenaltyRateField = value;
                    this.RaisePropertyChanged("MaturedJudgmentPenaltyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedPenaltyRate {
            get {
                return this.MaturedPenaltyRateField;
            }
            set {
                if ((this.MaturedPenaltyRateField.Equals(value) != true)) {
                    this.MaturedPenaltyRateField = value;
                    this.RaisePropertyChanged("MaturedPenaltyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OutCapital {
            get {
                return this.OutCapitalField;
            }
            set {
                if ((this.OutCapitalField.Equals(value) != true)) {
                    this.OutCapitalField = value;
                    this.RaisePropertyChanged("OutCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OutPenalty {
            get {
                return this.OutPenaltyField;
            }
            set {
                if ((this.OutPenaltyField.Equals(value) != true)) {
                    this.OutPenaltyField = value;
                    this.RaisePropertyChanged("OutPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OverdueCapital {
            get {
                return this.OverdueCapitalField;
            }
            set {
                if ((this.OverdueCapitalField.Equals(value) != true)) {
                    this.OverdueCapitalField = value;
                    this.RaisePropertyChanged("OverdueCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OverdueLoanDate {
            get {
                return this.OverdueLoanDateField;
            }
            set {
                if ((this.OverdueLoanDateField.Equals(value) != true)) {
                    this.OverdueLoanDateField = value;
                    this.RaisePropertyChanged("OverdueLoanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PenaltyAdd {
            get {
                return this.PenaltyAddField;
            }
            set {
                if ((this.PenaltyAddField.Equals(value) != true)) {
                    this.PenaltyAddField = value;
                    this.RaisePropertyChanged("PenaltyAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PenaltyRate {
            get {
                return this.PenaltyRateField;
            }
            set {
                if ((this.PenaltyRateField.Equals(value) != true)) {
                    this.PenaltyRateField = value;
                    this.RaisePropertyChanged("PenaltyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((this.ProductTypeField.Equals(value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((this.SaleField.Equals(value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaleDescription {
            get {
                return this.SaleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleDescriptionField, value) != true)) {
                    this.SaleDescriptionField = value;
                    this.RaisePropertyChanged("SaleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalJudgmentPenaltyRate {
            get {
                return this.TotalJudgmentPenaltyRateField;
            }
            set {
                if ((this.TotalJudgmentPenaltyRateField.Equals(value) != true)) {
                    this.TotalJudgmentPenaltyRateField = value;
                    this.RaisePropertyChanged("TotalJudgmentPenaltyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalRateValue {
            get {
                return this.TotalRateValueField;
            }
            set {
                if ((this.TotalRateValueField.Equals(value) != true)) {
                    this.TotalRateValueField = value;
                    this.RaisePropertyChanged("TotalRateValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditHereAndNow", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CreditHereAndNow : Test.ServiceReference1.LoanProduct {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeasingLoan", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LeasingLoan : Test.ServiceReference1.LoanProduct {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AdvanceAndFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LeasingPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextRepaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OtherPaymentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdvanceAndFee {
            get {
                return this.AdvanceAndFeeField;
            }
            set {
                if ((this.AdvanceAndFeeField.Equals(value) != true)) {
                    this.AdvanceAndFeeField = value;
                    this.RaisePropertyChanged("AdvanceAndFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralNumber {
            get {
                return this.GeneralNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralNumberField, value) != true)) {
                    this.GeneralNumberField = value;
                    this.RaisePropertyChanged("GeneralNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LeasingPayment {
            get {
                return this.LeasingPaymentField;
            }
            set {
                if ((this.LeasingPaymentField.Equals(value) != true)) {
                    this.LeasingPaymentField = value;
                    this.RaisePropertyChanged("LeasingPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextRepaymentDate {
            get {
                return this.NextRepaymentDateField;
            }
            set {
                if ((this.NextRepaymentDateField.Equals(value) != true)) {
                    this.NextRepaymentDateField = value;
                    this.RaisePropertyChanged("NextRepaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OtherPayments {
            get {
                return this.OtherPaymentsField;
            }
            set {
                if ((this.OtherPaymentsField.Equals(value) != true)) {
                    this.OtherPaymentsField = value;
                    this.RaisePropertyChanged("OtherPayments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Loan", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.Guarantee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.Accreditive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaidGuarantee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaidAccreditive))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.PaidFactoring))]
    public partial class Loan : Test.ServiceReference1.LoanProduct {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AdvancedRepaymentRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ChangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckAdvancedRepaymentRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBeginningSecondPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FirstStartCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateEffectiveWithOnlyBankProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateEffectiveWithoutAccountServiceFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LoanTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedCurrentFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.LoanRepaymentGrafik NextRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SubsidiaCurrentRateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SubsidiaInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalFeeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdvancedRepaymentRate {
            get {
                return this.AdvancedRepaymentRateField;
            }
            set {
                if ((this.AdvancedRepaymentRateField.Equals(value) != true)) {
                    this.AdvancedRepaymentRateField = value;
                    this.RaisePropertyChanged("AdvancedRepaymentRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ChangeRate {
            get {
                return this.ChangeRateField;
            }
            set {
                if ((this.ChangeRateField.Equals(value) != true)) {
                    this.ChangeRateField = value;
                    this.RaisePropertyChanged("ChangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckAdvancedRepaymentRate {
            get {
                return this.CheckAdvancedRepaymentRateField;
            }
            set {
                if ((this.CheckAdvancedRepaymentRateField.Equals(value) != true)) {
                    this.CheckAdvancedRepaymentRateField = value;
                    this.RaisePropertyChanged("CheckAdvancedRepaymentRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentFee {
            get {
                return this.CurrentFeeField;
            }
            set {
                if ((this.CurrentFeeField.Equals(value) != true)) {
                    this.CurrentFeeField = value;
                    this.RaisePropertyChanged("CurrentFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBeginningSecondPeriod {
            get {
                return this.DateOfBeginningSecondPeriodField;
            }
            set {
                if ((this.DateOfBeginningSecondPeriodField.Equals(value) != true)) {
                    this.DateOfBeginningSecondPeriodField = value;
                    this.RaisePropertyChanged("DateOfBeginningSecondPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FirstStartCapital {
            get {
                return this.FirstStartCapitalField;
            }
            set {
                if ((this.FirstStartCapitalField.Equals(value) != true)) {
                    this.FirstStartCapitalField = value;
                    this.RaisePropertyChanged("FirstStartCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRateEffectiveWithOnlyBankProfit {
            get {
                return this.InterestRateEffectiveWithOnlyBankProfitField;
            }
            set {
                if ((this.InterestRateEffectiveWithOnlyBankProfitField.Equals(value) != true)) {
                    this.InterestRateEffectiveWithOnlyBankProfitField = value;
                    this.RaisePropertyChanged("InterestRateEffectiveWithOnlyBankProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRateEffectiveWithoutAccountServiceFee {
            get {
                return this.InterestRateEffectiveWithoutAccountServiceFeeField;
            }
            set {
                if ((this.InterestRateEffectiveWithoutAccountServiceFeeField.Equals(value) != true)) {
                    this.InterestRateEffectiveWithoutAccountServiceFeeField = value;
                    this.RaisePropertyChanged("InterestRateEffectiveWithoutAccountServiceFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LoanType {
            get {
                return this.LoanTypeField;
            }
            set {
                if ((this.LoanTypeField.Equals(value) != true)) {
                    this.LoanTypeField = value;
                    this.RaisePropertyChanged("LoanType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanTypeDescription {
            get {
                return this.LoanTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanTypeDescriptionField, value) != true)) {
                    this.LoanTypeDescriptionField = value;
                    this.RaisePropertyChanged("LoanTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedCurrentFee {
            get {
                return this.MaturedCurrentFeeField;
            }
            set {
                if ((this.MaturedCurrentFeeField.Equals(value) != true)) {
                    this.MaturedCurrentFeeField = value;
                    this.RaisePropertyChanged("MaturedCurrentFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.LoanRepaymentGrafik NextRepayment {
            get {
                return this.NextRepaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRepaymentField, value) != true)) {
                    this.NextRepaymentField = value;
                    this.RaisePropertyChanged("NextRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SubsidiaCurrentRateValue {
            get {
                return this.SubsidiaCurrentRateValueField;
            }
            set {
                if ((this.SubsidiaCurrentRateValueField.Equals(value) != true)) {
                    this.SubsidiaCurrentRateValueField = value;
                    this.RaisePropertyChanged("SubsidiaCurrentRateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SubsidiaInterestRate {
            get {
                return this.SubsidiaInterestRateField;
            }
            set {
                if ((this.SubsidiaInterestRateField.Equals(value) != true)) {
                    this.SubsidiaInterestRateField = value;
                    this.RaisePropertyChanged("SubsidiaInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalFee {
            get {
                return this.TotalFeeField;
            }
            set {
                if ((this.TotalFeeField.Equals(value) != true)) {
                    this.TotalFeeField = value;
                    this.RaisePropertyChanged("TotalFee");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Guarantee", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Guarantee : Test.ServiceReference1.Loan {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefeciarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmatorBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmatorBankEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContractEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort PercentCummulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<System.DateTime> ProlongationDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint SetNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Benefeciar {
            get {
                return this.BenefeciarField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefeciarField, value) != true)) {
                    this.BenefeciarField = value;
                    this.RaisePropertyChanged("Benefeciar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmatorBank {
            get {
                return this.ConfirmatorBankField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmatorBankField, value) != true)) {
                    this.ConfirmatorBankField = value;
                    this.RaisePropertyChanged("ConfirmatorBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmatorBankEndDate {
            get {
                return this.ConfirmatorBankEndDateField;
            }
            set {
                if ((this.ConfirmatorBankEndDateField.Equals(value) != true)) {
                    this.ConfirmatorBankEndDateField = value;
                    this.RaisePropertyChanged("ConfirmatorBankEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContractEndDate {
            get {
                return this.ContractEndDateField;
            }
            set {
                if ((this.ContractEndDateField.Equals(value) != true)) {
                    this.ContractEndDateField = value;
                    this.RaisePropertyChanged("ContractEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort PercentCummulation {
            get {
                return this.PercentCummulationField;
            }
            set {
                if ((this.PercentCummulationField.Equals(value) != true)) {
                    this.PercentCummulationField = value;
                    this.RaisePropertyChanged("PercentCummulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.DateTime> ProlongationDates {
            get {
                return this.ProlongationDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProlongationDatesField, value) != true)) {
                    this.ProlongationDatesField = value;
                    this.RaisePropertyChanged("ProlongationDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Accreditive", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Accreditive : Test.ServiceReference1.Loan {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BenefeciarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort PercentCummulationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Benefeciar {
            get {
                return this.BenefeciarField;
            }
            set {
                if ((object.ReferenceEquals(this.BenefeciarField, value) != true)) {
                    this.BenefeciarField = value;
                    this.RaisePropertyChanged("Benefeciar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort PercentCummulation {
            get {
                return this.PercentCummulationField;
            }
            set {
                if ((this.PercentCummulationField.Equals(value) != true)) {
                    this.PercentCummulationField = value;
                    this.RaisePropertyChanged("PercentCummulation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaidGuarantee", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PaidGuarantee : Test.ServiceReference1.Loan {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RequestStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestStatus {
            get {
                return this.RequestStatusField;
            }
            set {
                if ((this.RequestStatusField.Equals(value) != true)) {
                    this.RequestStatusField = value;
                    this.RaisePropertyChanged("RequestStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaidAccreditive", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PaidAccreditive : Test.ServiceReference1.Loan {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaidFactoring", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PaidFactoring : Test.ServiceReference1.Loan {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanRepaymentGrafik", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanRepaymentGrafik : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapitalRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RepaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RestCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SubsidiaRateRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalRepaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CapitalRepayment {
            get {
                return this.CapitalRepaymentField;
            }
            set {
                if ((this.CapitalRepaymentField.Equals(value) != true)) {
                    this.CapitalRepaymentField = value;
                    this.RaisePropertyChanged("CapitalRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeRepayment {
            get {
                return this.FeeRepaymentField;
            }
            set {
                if ((this.FeeRepaymentField.Equals(value) != true)) {
                    this.FeeRepaymentField = value;
                    this.RaisePropertyChanged("FeeRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateRepayment {
            get {
                return this.RateRepaymentField;
            }
            set {
                if ((this.RateRepaymentField.Equals(value) != true)) {
                    this.RateRepaymentField = value;
                    this.RaisePropertyChanged("RateRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RepaymentDate {
            get {
                return this.RepaymentDateField;
            }
            set {
                if ((this.RepaymentDateField.Equals(value) != true)) {
                    this.RepaymentDateField = value;
                    this.RaisePropertyChanged("RepaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RestCapital {
            get {
                return this.RestCapitalField;
            }
            set {
                if ((this.RestCapitalField.Equals(value) != true)) {
                    this.RestCapitalField = value;
                    this.RaisePropertyChanged("RestCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SubsidiaRateRepayment {
            get {
                return this.SubsidiaRateRepaymentField;
            }
            set {
                if ((this.SubsidiaRateRepaymentField.Equals(value) != true)) {
                    this.SubsidiaRateRepaymentField = value;
                    this.RaisePropertyChanged("SubsidiaRateRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalRepayment {
            get {
                return this.TotalRepaymentField;
            }
            set {
                if ((this.TotalRepaymentField.Equals(value) != true)) {
                    this.TotalRepaymentField = value;
                    this.RaisePropertyChanged("TotalRepayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlasticCard", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PlasticCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CardChangeType CardChangeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardHolderLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardHolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainCardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelatedOfficeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.SupplementaryType SupplementaryTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddInf {
            get {
                return this.AddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AddInfField, value) != true)) {
                    this.AddInfField = value;
                    this.RaisePropertyChanged("AddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CardChangeType CardChangeType {
            get {
                return this.CardChangeTypeField;
            }
            set {
                if ((this.CardChangeTypeField.Equals(value) != true)) {
                    this.CardChangeTypeField = value;
                    this.RaisePropertyChanged("CardChangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardHolderLastName {
            get {
                return this.CardHolderLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardHolderLastNameField, value) != true)) {
                    this.CardHolderLastNameField = value;
                    this.RaisePropertyChanged("CardHolderLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardHolderName {
            get {
                return this.CardHolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardHolderNameField, value) != true)) {
                    this.CardHolderNameField = value;
                    this.RaisePropertyChanged("CardHolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardSystem {
            get {
                return this.CardSystemField;
            }
            set {
                if ((this.CardSystemField.Equals(value) != true)) {
                    this.CardSystemField = value;
                    this.RaisePropertyChanged("CardSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiryDateField, value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainCardNumber {
            get {
                return this.MainCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MainCardNumberField, value) != true)) {
                    this.MainCardNumberField = value;
                    this.RaisePropertyChanged("MainCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelatedOfficeNumber {
            get {
                return this.RelatedOfficeNumberField;
            }
            set {
                if ((this.RelatedOfficeNumberField.Equals(value) != true)) {
                    this.RelatedOfficeNumberField = value;
                    this.RaisePropertyChanged("RelatedOfficeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.SupplementaryType SupplementaryType {
            get {
                return this.SupplementaryTypeField;
            }
            set {
                if ((this.SupplementaryTypeField.Equals(value) != true)) {
                    this.SupplementaryTypeField = value;
                    this.RaisePropertyChanged("SupplementaryType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardChangeType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum CardChangeType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReNew = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RePlace = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Change = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplementaryType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum SupplementaryType : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Main = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Linked = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attached = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CashBook", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CashBook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BankVaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CorrespondentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CorrespondentSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FillialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkedRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegisteredUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BankVault {
            get {
                return this.BankVaultField;
            }
            set {
                if ((this.BankVaultField.Equals(value) != true)) {
                    this.BankVaultField = value;
                    this.RaisePropertyChanged("BankVault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CorrespondentID {
            get {
                return this.CorrespondentIDField;
            }
            set {
                if ((this.CorrespondentIDField.Equals(value) != true)) {
                    this.CorrespondentIDField = value;
                    this.RaisePropertyChanged("CorrespondentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CorrespondentSetNumber {
            get {
                return this.CorrespondentSetNumberField;
            }
            set {
                if ((this.CorrespondentSetNumberField.Equals(value) != true)) {
                    this.CorrespondentSetNumberField = value;
                    this.RaisePropertyChanged("CorrespondentSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FillialCode {
            get {
                return this.FillialCodeField;
            }
            set {
                if ((this.FillialCodeField.Equals(value) != true)) {
                    this.FillialCodeField = value;
                    this.RaisePropertyChanged("FillialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkedRowID {
            get {
                return this.LinkedRowIDField;
            }
            set {
                if ((this.LinkedRowIDField.Equals(value) != true)) {
                    this.LinkedRowIDField = value;
                    this.RaisePropertyChanged("LinkedRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationType {
            get {
                return this.OperationTypeField;
            }
            set {
                if ((this.OperationTypeField.Equals(value) != true)) {
                    this.OperationTypeField = value;
                    this.RaisePropertyChanged("OperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegisteredUserID {
            get {
                return this.RegisteredUserIDField;
            }
            set {
                if ((this.RegisteredUserIDField.Equals(value) != true)) {
                    this.RegisteredUserIDField = value;
                    this.RaisePropertyChanged("RegisteredUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credential", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Credential : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Assignee> AssigneeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ClosingReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClosingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CredentialTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GivenByBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivationSetNumber {
            get {
                return this.ActivationSetNumberField;
            }
            set {
                if ((this.ActivationSetNumberField.Equals(value) != true)) {
                    this.ActivationSetNumberField = value;
                    this.RaisePropertyChanged("ActivationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Assignee> AssigneeList {
            get {
                return this.AssigneeListField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeListField, value) != true)) {
                    this.AssigneeListField = value;
                    this.RaisePropertyChanged("AssigneeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReason {
            get {
                return this.ClosingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonField, value) != true)) {
                    this.ClosingReasonField = value;
                    this.RaisePropertyChanged("ClosingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ClosingReasonType {
            get {
                return this.ClosingReasonTypeField;
            }
            set {
                if ((this.ClosingReasonTypeField.Equals(value) != true)) {
                    this.ClosingReasonTypeField = value;
                    this.RaisePropertyChanged("ClosingReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosingSetNumber {
            get {
                return this.ClosingSetNumberField;
            }
            set {
                if ((this.ClosingSetNumberField.Equals(value) != true)) {
                    this.ClosingSetNumberField = value;
                    this.RaisePropertyChanged("ClosingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredentialNumber {
            get {
                return this.CredentialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialNumberField, value) != true)) {
                    this.CredentialNumberField = value;
                    this.RaisePropertyChanged("CredentialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CredentialType {
            get {
                return this.CredentialTypeField;
            }
            set {
                if ((this.CredentialTypeField.Equals(value) != true)) {
                    this.CredentialTypeField = value;
                    this.RaisePropertyChanged("CredentialType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredentialTypeDescription {
            get {
                return this.CredentialTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialTypeDescriptionField, value) != true)) {
                    this.CredentialTypeDescriptionField = value;
                    this.RaisePropertyChanged("CredentialTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GivenByBank {
            get {
                return this.GivenByBankField;
            }
            set {
                if ((this.GivenByBankField.Equals(value) != true)) {
                    this.GivenByBankField = value;
                    this.RaisePropertyChanged("GivenByBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Assignee", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Assignee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeDocumentGivenByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AssigneeDocumentGivenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssigneeDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort IsEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AssigneeOperation> OperationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SignatureTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeDocumentGivenBy {
            get {
                return this.AssigneeDocumentGivenByField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeDocumentGivenByField, value) != true)) {
                    this.AssigneeDocumentGivenByField = value;
                    this.RaisePropertyChanged("AssigneeDocumentGivenBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssigneeDocumentGivenDate {
            get {
                return this.AssigneeDocumentGivenDateField;
            }
            set {
                if ((this.AssigneeDocumentGivenDateField.Equals(value) != true)) {
                    this.AssigneeDocumentGivenDateField = value;
                    this.RaisePropertyChanged("AssigneeDocumentGivenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeDocumentNumber {
            get {
                return this.AssigneeDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeDocumentNumberField, value) != true)) {
                    this.AssigneeDocumentNumberField = value;
                    this.RaisePropertyChanged("AssigneeDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssigneeDocumentType {
            get {
                return this.AssigneeDocumentTypeField;
            }
            set {
                if ((this.AssigneeDocumentTypeField.Equals(value) != true)) {
                    this.AssigneeDocumentTypeField = value;
                    this.RaisePropertyChanged("AssigneeDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeFirstName {
            get {
                return this.AssigneeFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeFirstNameField, value) != true)) {
                    this.AssigneeFirstNameField = value;
                    this.RaisePropertyChanged("AssigneeFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeLastName {
            get {
                return this.AssigneeLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeLastNameField, value) != true)) {
                    this.AssigneeLastNameField = value;
                    this.RaisePropertyChanged("AssigneeLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeMiddleName {
            get {
                return this.AssigneeMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeMiddleNameField, value) != true)) {
                    this.AssigneeMiddleNameField = value;
                    this.RaisePropertyChanged("AssigneeMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort IsEmployee {
            get {
                return this.IsEmployeeField;
            }
            set {
                if ((this.IsEmployeeField.Equals(value) != true)) {
                    this.IsEmployeeField = value;
                    this.RaisePropertyChanged("IsEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AssigneeOperation> OperationList {
            get {
                return this.OperationListField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationListField, value) != true)) {
                    this.OperationListField = value;
                    this.RaisePropertyChanged("OperationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SignatureType {
            get {
                return this.SignatureTypeField;
            }
            set {
                if ((this.SignatureTypeField.Equals(value) != true)) {
                    this.SignatureTypeField = value;
                    this.RaisePropertyChanged("SignatureType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssigneeOperation", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AssigneeOperation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Account> AccountListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationGroupTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort OperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationTypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Account> AccountList {
            get {
                return this.AccountListField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountListField, value) != true)) {
                    this.AccountListField = value;
                    this.RaisePropertyChanged("AccountList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllAccounts {
            get {
                return this.AllAccountsField;
            }
            set {
                if ((this.AllAccountsField.Equals(value) != true)) {
                    this.AllAccountsField = value;
                    this.RaisePropertyChanged("AllAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationGroupTypeDescription {
            get {
                return this.OperationGroupTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationGroupTypeDescriptionField, value) != true)) {
                    this.OperationGroupTypeDescriptionField = value;
                    this.RaisePropertyChanged("OperationGroupTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort OperationType {
            get {
                return this.OperationTypeField;
            }
            set {
                if ((this.OperationTypeField.Equals(value) != true)) {
                    this.OperationTypeField = value;
                    this.RaisePropertyChanged("OperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationTypeDescription {
            get {
                return this.OperationTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationTypeDescriptionField, value) != true)) {
                    this.OperationTypeDescriptionField = value;
                    this.RaisePropertyChanged("OperationTypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferCallContractDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferCallContractDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContractIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvolvingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ContractDate {
            get {
                return this.ContractDateField;
            }
            set {
                if ((this.ContractDateField.Equals(value) != true)) {
                    this.ContractDateField = value;
                    this.RaisePropertyChanged("ContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPassword {
            get {
                return this.ContractPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPasswordField, value) != true)) {
                    this.ContractPasswordField = value;
                    this.RaisePropertyChanged("ContractPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvolvingSetNumber {
            get {
                return this.InvolvingSetNumberField;
            }
            set {
                if ((this.InvolvingSetNumberField.Equals(value) != true)) {
                    this.InvolvingSetNumberField = value;
                    this.RaisePropertyChanged("InvolvingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositCase", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositCase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChangeSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClosingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account ConnectAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ContractDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ContractTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfStoppingPenaltyCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongstring> JointCustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short JointTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDayOfRateCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account OutBalanceAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PenaltyAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PenaltyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecontractPossibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServicingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChangeSetNumber {
            get {
                return this.ChangeSetNumberField;
            }
            set {
                if ((this.ChangeSetNumberField.Equals(value) != true)) {
                    this.ChangeSetNumberField = value;
                    this.RaisePropertyChanged("ChangeSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangingReason {
            get {
                return this.ChangingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangingReasonField, value) != true)) {
                    this.ChangingReasonField = value;
                    this.RaisePropertyChanged("ChangingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClosingSetNumber {
            get {
                return this.ClosingSetNumberField;
            }
            set {
                if ((this.ClosingSetNumberField.Equals(value) != true)) {
                    this.ClosingSetNumberField = value;
                    this.RaisePropertyChanged("ClosingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account ConnectAccount {
            get {
                return this.ConnectAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectAccountField, value) != true)) {
                    this.ConnectAccountField = value;
                    this.RaisePropertyChanged("ConnectAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ContractDuration {
            get {
                return this.ContractDurationField;
            }
            set {
                if ((this.ContractDurationField.Equals(value) != true)) {
                    this.ContractDurationField = value;
                    this.RaisePropertyChanged("ContractDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ContractType {
            get {
                return this.ContractTypeField;
            }
            set {
                if ((this.ContractTypeField.Equals(value) != true)) {
                    this.ContractTypeField = value;
                    this.RaisePropertyChanged("ContractType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfStoppingPenaltyCalculation {
            get {
                return this.DateOfStoppingPenaltyCalculationField;
            }
            set {
                if ((this.DateOfStoppingPenaltyCalculationField.Equals(value) != true)) {
                    this.DateOfStoppingPenaltyCalculationField = value;
                    this.RaisePropertyChanged("DateOfStoppingPenaltyCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongstring> JointCustomers {
            get {
                return this.JointCustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.JointCustomersField, value) != true)) {
                    this.JointCustomersField = value;
                    this.RaisePropertyChanged("JointCustomers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short JointType {
            get {
                return this.JointTypeField;
            }
            set {
                if ((this.JointTypeField.Equals(value) != true)) {
                    this.JointTypeField = value;
                    this.RaisePropertyChanged("JointType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDayOfRateCalculation {
            get {
                return this.LastDayOfRateCalculationField;
            }
            set {
                if ((this.LastDayOfRateCalculationField.Equals(value) != true)) {
                    this.LastDayOfRateCalculationField = value;
                    this.RaisePropertyChanged("LastDayOfRateCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account OutBalanceAccount {
            get {
                return this.OutBalanceAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.OutBalanceAccountField, value) != true)) {
                    this.OutBalanceAccountField = value;
                    this.RaisePropertyChanged("OutBalanceAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PenaltyAmount {
            get {
                return this.PenaltyAmountField;
            }
            set {
                if ((this.PenaltyAmountField.Equals(value) != true)) {
                    this.PenaltyAmountField = value;
                    this.RaisePropertyChanged("PenaltyAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PenaltyDate {
            get {
                return this.PenaltyDateField;
            }
            set {
                if ((this.PenaltyDateField.Equals(value) != true)) {
                    this.PenaltyDateField = value;
                    this.RaisePropertyChanged("PenaltyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecontractPossibility {
            get {
                return this.RecontractPossibilityField;
            }
            set {
                if ((this.RecontractPossibilityField.Equals(value) != true)) {
                    this.RecontractPossibilityField = value;
                    this.RaisePropertyChanged("RecontractPossibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServicingSetNumber {
            get {
                return this.ServicingSetNumberField;
            }
            set {
                if ((this.ServicingSetNumberField.Equals(value) != true)) {
                    this.ServicingSetNumberField = value;
                    this.RaisePropertyChanged("ServicingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insurance", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Insurance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CompensationAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompensationCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ConectedProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FillialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort InsuranceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvolvingSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MainProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((this.CompanyField.Equals(value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CompensationAmount {
            get {
                return this.CompensationAmountField;
            }
            set {
                if ((this.CompensationAmountField.Equals(value) != true)) {
                    this.CompensationAmountField = value;
                    this.RaisePropertyChanged("CompensationAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompensationCurrency {
            get {
                return this.CompensationCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompensationCurrencyField, value) != true)) {
                    this.CompensationCurrencyField = value;
                    this.RaisePropertyChanged("CompensationCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConectedProductId {
            get {
                return this.ConectedProductIdField;
            }
            set {
                if ((this.ConectedProductIdField.Equals(value) != true)) {
                    this.ConectedProductIdField = value;
                    this.RaisePropertyChanged("ConectedProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FillialCode {
            get {
                return this.FillialCodeField;
            }
            set {
                if ((this.FillialCodeField.Equals(value) != true)) {
                    this.FillialCodeField = value;
                    this.RaisePropertyChanged("FillialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort InsuranceType {
            get {
                return this.InsuranceTypeField;
            }
            set {
                if ((this.InsuranceTypeField.Equals(value) != true)) {
                    this.InsuranceTypeField = value;
                    this.RaisePropertyChanged("InsuranceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceTypeDescription {
            get {
                return this.InsuranceTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceTypeDescriptionField, value) != true)) {
                    this.InsuranceTypeDescriptionField = value;
                    this.RaisePropertyChanged("InsuranceTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvolvingSetNumber {
            get {
                return this.InvolvingSetNumberField;
            }
            set {
                if ((this.InvolvingSetNumberField.Equals(value) != true)) {
                    this.InvolvingSetNumberField = value;
                    this.RaisePropertyChanged("InvolvingSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MainProductId {
            get {
                return this.MainProductIdField;
            }
            set {
                if ((this.MainProductIdField.Equals(value) != true)) {
                    this.MainProductIdField = value;
                    this.RaisePropertyChanged("MainProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardServiceFeeGrafik", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardServiceFeeGrafik : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PeriodEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PeriodStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PeriodEnd {
            get {
                return this.PeriodEndField;
            }
            set {
                if ((this.PeriodEndField.Equals(value) != true)) {
                    this.PeriodEndField = value;
                    this.RaisePropertyChanged("PeriodEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PeriodStart {
            get {
                return this.PeriodStartField;
            }
            set {
                if ((this.PeriodStartField.Equals(value) != true)) {
                    this.PeriodStartField = value;
                    this.RaisePropertyChanged("PeriodStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFee {
            get {
                return this.ServiceFeeField;
            }
            set {
                if ((this.ServiceFeeField.Equals(value) != true)) {
                    this.ServiceFeeField = value;
                    this.RaisePropertyChanged("ServiceFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatus", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicePaymentNote", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ServicePaymentNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ServicePaymenteNoteType NoteActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteActionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NoteDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NoteReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalDescription {
            get {
                return this.AdditionalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDescriptionField, value) != true)) {
                    this.AdditionalDescriptionField = value;
                    this.RaisePropertyChanged("AdditionalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ServicePaymenteNoteType NoteActionType {
            get {
                return this.NoteActionTypeField;
            }
            set {
                if ((this.NoteActionTypeField.Equals(value) != true)) {
                    this.NoteActionTypeField = value;
                    this.RaisePropertyChanged("NoteActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteActionTypeDescription {
            get {
                return this.NoteActionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteActionTypeDescriptionField, value) != true)) {
                    this.NoteActionTypeDescriptionField = value;
                    this.RaisePropertyChanged("NoteActionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NoteDate {
            get {
                return this.NoteDateField;
            }
            set {
                if ((this.NoteDateField.Equals(value) != true)) {
                    this.NoteDateField = value;
                    this.RaisePropertyChanged("NoteDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NoteReason {
            get {
                return this.NoteReasonField;
            }
            set {
                if ((this.NoteReasonField.Equals(value) != true)) {
                    this.NoteReasonField = value;
                    this.RaisePropertyChanged("NoteReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteReasonDescription {
            get {
                return this.NoteReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteReasonDescriptionField, value) != true)) {
                    this.NoteReasonDescriptionField = value;
                    this.RaisePropertyChanged("NoteReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicePaymenteNoteType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ServicePaymenteNoteType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chgandzel = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gandzel = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PensionApplication", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PensionApplication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ContractIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfNormalEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FillialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContractDate {
            get {
                return this.ContractDateField;
            }
            set {
                if ((this.ContractDateField.Equals(value) != true)) {
                    this.ContractDateField = value;
                    this.RaisePropertyChanged("ContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfNormalEnd {
            get {
                return this.DateOfNormalEndField;
            }
            set {
                if ((this.DateOfNormalEndField.Equals(value) != true)) {
                    this.DateOfNormalEndField = value;
                    this.RaisePropertyChanged("DateOfNormalEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FillialCode {
            get {
                return this.FillialCodeField;
            }
            set {
                if ((this.FillialCodeField.Equals(value) != true)) {
                    this.FillialCodeField = value;
                    this.RaisePropertyChanged("FillialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceTypeDescription {
            get {
                return this.ServiceTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceTypeDescriptionField, value) != true)) {
                    this.ServiceTypeDescriptionField = value;
                    this.RaisePropertyChanged("ServiceTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatureType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum MatureType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateRepayment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartialRepayment = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullRepayment = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClaimRepayment = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ProductType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loan = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialCreditLine = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccount = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherLabilities = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AparikTexum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodicTransfer = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accreditive = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guarantee = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Factoring = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidAccreditive = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidFactoring = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaidGuarantee = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AmexCard = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VisaCard = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterCard = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArcaCard = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Credential = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardDahkAccount = 115,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transfer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Transfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AcbaTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddTableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AmlCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountInDebCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BIKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BorrowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallRegSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CashOperationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CashTransactionGroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> ConfirmationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmationUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DebForTransferPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DebitAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsOfChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocflowConfirmationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FedwireRoutingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAcbaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeInCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte InstantMoneyTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermediaryBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IsCallCenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KPPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LTACodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ListCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatureTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PaidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PoliceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PoliceResponseDetailsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateSellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisteredUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> RegistrationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SendOrReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderCodeOfTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SenderDateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderOtherBankAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderReferanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TransactionGroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDocumentCredAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferDocumentDebAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferGroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferSystemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnicNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VOCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifiedAmlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AcbaTransfer {
            get {
                return this.AcbaTransferField;
            }
            set {
                if ((this.AcbaTransferField.Equals(value) != true)) {
                    this.AcbaTransferField = value;
                    this.RaisePropertyChanged("AcbaTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddInf {
            get {
                return this.AddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AddInfField, value) != true)) {
                    this.AddInfField = value;
                    this.RaisePropertyChanged("AddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddTableName {
            get {
                return this.AddTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AddTableNameField, value) != true)) {
                    this.AddTableNameField = value;
                    this.RaisePropertyChanged("AddTableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AmlCheck {
            get {
                return this.AmlCheckField;
            }
            set {
                if ((this.AmlCheckField.Equals(value) != true)) {
                    this.AmlCheckField = value;
                    this.RaisePropertyChanged("AmlCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountForPayment {
            get {
                return this.AmountForPaymentField;
            }
            set {
                if ((this.AmountForPaymentField.Equals(value) != true)) {
                    this.AmountForPaymentField = value;
                    this.RaisePropertyChanged("AmountForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountInDebCurrency {
            get {
                return this.AmountInDebCurrencyField;
            }
            set {
                if ((this.AmountInDebCurrencyField.Equals(value) != true)) {
                    this.AmountInDebCurrencyField = value;
                    this.RaisePropertyChanged("AmountInDebCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIK {
            get {
                return this.BIKField;
            }
            set {
                if ((object.ReferenceEquals(this.BIKField, value) != true)) {
                    this.BIKField = value;
                    this.RaisePropertyChanged("BIK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Borrower {
            get {
                return this.BorrowerField;
            }
            set {
                if ((object.ReferenceEquals(this.BorrowerField, value) != true)) {
                    this.BorrowerField = value;
                    this.RaisePropertyChanged("Borrower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallRegSetNumber {
            get {
                return this.CallRegSetNumberField;
            }
            set {
                if ((this.CallRegSetNumberField.Equals(value) != true)) {
                    this.CallRegSetNumberField = value;
                    this.RaisePropertyChanged("CallRegSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CashOperationDate {
            get {
                return this.CashOperationDateField;
            }
            set {
                if ((this.CashOperationDateField.Equals(value) != true)) {
                    this.CashOperationDateField = value;
                    this.RaisePropertyChanged("CashOperationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CashTransactionGroupNumber {
            get {
                return this.CashTransactionGroupNumberField;
            }
            set {
                if ((this.CashTransactionGroupNumberField.Equals(value) != true)) {
                    this.CashTransactionGroupNumberField = value;
                    this.RaisePropertyChanged("CashTransactionGroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> ConfirmationTime {
            get {
                return this.ConfirmationTimeField;
            }
            set {
                if ((this.ConfirmationTimeField.Equals(value) != true)) {
                    this.ConfirmationTimeField = value;
                    this.RaisePropertyChanged("ConfirmationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmationUserName {
            get {
                return this.ConfirmationUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmationUserNameField, value) != true)) {
                    this.ConfirmationUserNameField = value;
                    this.RaisePropertyChanged("ConfirmationUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrAccount {
            get {
                return this.CorrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrAccountField, value) != true)) {
                    this.CorrAccountField = value;
                    this.RaisePropertyChanged("CorrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCode {
            get {
                return this.CreditCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCodeField, value) != true)) {
                    this.CreditCodeField = value;
                    this.RaisePropertyChanged("CreditCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerTypeDescription {
            get {
                return this.CustomerTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeDescriptionField, value) != true)) {
                    this.CustomerTypeDescriptionField = value;
                    this.RaisePropertyChanged("CustomerTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DebForTransferPayment {
            get {
                return this.DebForTransferPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DebForTransferPaymentField, value) != true)) {
                    this.DebForTransferPaymentField = value;
                    this.RaisePropertyChanged("DebForTransferPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DebitAccount {
            get {
                return this.DebitAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DebitAccountField, value) != true)) {
                    this.DebitAccountField = value;
                    this.RaisePropertyChanged("DebitAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Debtor {
            get {
                return this.DebtorField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorField, value) != true)) {
                    this.DebtorField = value;
                    this.RaisePropertyChanged("Debtor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorDocument {
            get {
                return this.DebtorDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorDocumentField, value) != true)) {
                    this.DebtorDocumentField = value;
                    this.RaisePropertyChanged("DebtorDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtorType {
            get {
                return this.DebtorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorTypeField, value) != true)) {
                    this.DebtorTypeField = value;
                    this.RaisePropertyChanged("DebtorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPayment {
            get {
                return this.DescriptionForPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentField, value) != true)) {
                    this.DescriptionForPaymentField = value;
                    this.RaisePropertyChanged("DescriptionForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR1 {
            get {
                return this.DescriptionForPaymentRUR1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR1Field, value) != true)) {
                    this.DescriptionForPaymentRUR1Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR2 {
            get {
                return this.DescriptionForPaymentRUR2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR2Field, value) != true)) {
                    this.DescriptionForPaymentRUR2Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR3 {
            get {
                return this.DescriptionForPaymentRUR3Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR3Field, value) != true)) {
                    this.DescriptionForPaymentRUR3Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR4 {
            get {
                return this.DescriptionForPaymentRUR4Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR4Field, value) != true)) {
                    this.DescriptionForPaymentRUR4Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR5 {
            get {
                return this.DescriptionForPaymentRUR5Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR5Field, value) != true)) {
                    this.DescriptionForPaymentRUR5Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR6 {
            get {
                return this.DescriptionForPaymentRUR6Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR6Field, value) != true)) {
                    this.DescriptionForPaymentRUR6Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailsOfCharges {
            get {
                return this.DetailsOfChargesField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsOfChargesField, value) != true)) {
                    this.DetailsOfChargesField = value;
                    this.RaisePropertyChanged("DetailsOfCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocflowConfirmationId {
            get {
                return this.DocflowConfirmationIdField;
            }
            set {
                if ((this.DocflowConfirmationIdField.Equals(value) != true)) {
                    this.DocflowConfirmationIdField = value;
                    this.RaisePropertyChanged("DocflowConfirmationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FedwireRoutingCode {
            get {
                return this.FedwireRoutingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FedwireRoutingCodeField, value) != true)) {
                    this.FedwireRoutingCodeField = value;
                    this.RaisePropertyChanged("FedwireRoutingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAcba {
            get {
                return this.FeeAcbaField;
            }
            set {
                if ((this.FeeAcbaField.Equals(value) != true)) {
                    this.FeeAcbaField = value;
                    this.RaisePropertyChanged("FeeAcba");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeInCurrency {
            get {
                return this.FeeInCurrencyField;
            }
            set {
                if ((this.FeeInCurrencyField.Equals(value) != true)) {
                    this.FeeInCurrencyField = value;
                    this.RaisePropertyChanged("FeeInCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte InstantMoneyTransfer {
            get {
                return this.InstantMoneyTransferField;
            }
            set {
                if ((this.InstantMoneyTransferField.Equals(value) != true)) {
                    this.InstantMoneyTransferField = value;
                    this.RaisePropertyChanged("InstantMoneyTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryBank {
            get {
                return this.IntermediaryBankField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryBankField, value) != true)) {
                    this.IntermediaryBankField = value;
                    this.RaisePropertyChanged("IntermediaryBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermediaryBankSwift {
            get {
                return this.IntermediaryBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermediaryBankSwiftField, value) != true)) {
                    this.IntermediaryBankSwiftField = value;
                    this.RaisePropertyChanged("IntermediaryBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IsCallCenter {
            get {
                return this.IsCallCenterField;
            }
            set {
                if ((this.IsCallCenterField.Equals(value) != true)) {
                    this.IsCallCenterField = value;
                    this.RaisePropertyChanged("IsCallCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPP {
            get {
                return this.KPPField;
            }
            set {
                if ((object.ReferenceEquals(this.KPPField, value) != true)) {
                    this.KPPField = value;
                    this.RaisePropertyChanged("KPP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LTACode {
            get {
                return this.LTACodeField;
            }
            set {
                if ((this.LTACodeField.Equals(value) != true)) {
                    this.LTACodeField = value;
                    this.RaisePropertyChanged("LTACode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint ListCount {
            get {
                return this.ListCountField;
            }
            set {
                if ((this.ListCountField.Equals(value) != true)) {
                    this.ListCountField = value;
                    this.RaisePropertyChanged("ListCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MT {
            get {
                return this.MTField;
            }
            set {
                if ((object.ReferenceEquals(this.MTField, value) != true)) {
                    this.MTField = value;
                    this.RaisePropertyChanged("MT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatureTypeDescription {
            get {
                return this.MatureTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MatureTypeDescriptionField, value) != true)) {
                    this.MatureTypeDescriptionField = value;
                    this.RaisePropertyChanged("MatureTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PoliceCode {
            get {
                return this.PoliceCodeField;
            }
            set {
                if ((this.PoliceCodeField.Equals(value) != true)) {
                    this.PoliceCodeField = value;
                    this.RaisePropertyChanged("PoliceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PoliceResponseDetailsID {
            get {
                return this.PoliceResponseDetailsIDField;
            }
            set {
                if ((this.PoliceResponseDetailsIDField.Equals(value) != true)) {
                    this.PoliceResponseDetailsIDField = value;
                    this.RaisePropertyChanged("PoliceResponseDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateBuy {
            get {
                return this.RateBuyField;
            }
            set {
                if ((this.RateBuyField.Equals(value) != true)) {
                    this.RateBuyField = value;
                    this.RaisePropertyChanged("RateBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateSell {
            get {
                return this.RateSellField;
            }
            set {
                if ((this.RateSellField.Equals(value) != true)) {
                    this.RateSellField = value;
                    this.RaisePropertyChanged("RateSell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAddInf {
            get {
                return this.ReceiverAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAddInfField, value) != true)) {
                    this.ReceiverAddInfField = value;
                    this.RaisePropertyChanged("ReceiverAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBank {
            get {
                return this.ReceiverBankField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankField, value) != true)) {
                    this.ReceiverBankField = value;
                    this.RaisePropertyChanged("ReceiverBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankAddInf {
            get {
                return this.ReceiverBankAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankAddInfField, value) != true)) {
                    this.ReceiverBankAddInfField = value;
                    this.RaisePropertyChanged("ReceiverBankAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankSwift {
            get {
                return this.ReceiverBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankSwiftField, value) != true)) {
                    this.ReceiverBankSwiftField = value;
                    this.RaisePropertyChanged("ReceiverBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverPassport {
            get {
                return this.ReceiverPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPassportField, value) != true)) {
                    this.ReceiverPassportField = value;
                    this.RaisePropertyChanged("ReceiverPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverSwift {
            get {
                return this.ReceiverSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverSwiftField, value) != true)) {
                    this.ReceiverSwiftField = value;
                    this.RaisePropertyChanged("ReceiverSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverType {
            get {
                return this.ReceiverTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverTypeField, value) != true)) {
                    this.ReceiverTypeField = value;
                    this.RaisePropertyChanged("ReceiverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisteredUserName {
            get {
                return this.RegisteredUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredUserNameField, value) != true)) {
                    this.RegisteredUserNameField = value;
                    this.RaisePropertyChanged("RegisteredUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> RegistrationTime {
            get {
                return this.RegistrationTimeField;
            }
            set {
                if ((this.RegistrationTimeField.Equals(value) != true)) {
                    this.RegistrationTimeField = value;
                    this.RaisePropertyChanged("RegistrationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SendOrReceived {
            get {
                return this.SendOrReceivedField;
            }
            set {
                if ((this.SendOrReceivedField.Equals(value) != true)) {
                    this.SendOrReceivedField = value;
                    this.RaisePropertyChanged("SendOrReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAccount {
            get {
                return this.SenderAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAccountField, value) != true)) {
                    this.SenderAccountField = value;
                    this.RaisePropertyChanged("SenderAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAddress {
            get {
                return this.SenderAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAddressField, value) != true)) {
                    this.SenderAddressField = value;
                    this.RaisePropertyChanged("SenderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderBank {
            get {
                return this.SenderBankField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderBankField, value) != true)) {
                    this.SenderBankField = value;
                    this.RaisePropertyChanged("SenderBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderBankSwift {
            get {
                return this.SenderBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderBankSwiftField, value) != true)) {
                    this.SenderBankSwiftField = value;
                    this.RaisePropertyChanged("SenderBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderCodeOfTax {
            get {
                return this.SenderCodeOfTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderCodeOfTaxField, value) != true)) {
                    this.SenderCodeOfTaxField = value;
                    this.RaisePropertyChanged("SenderCodeOfTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderCountry {
            get {
                return this.SenderCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderCountryField, value) != true)) {
                    this.SenderCountryField = value;
                    this.RaisePropertyChanged("SenderCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SenderDateOfBirth {
            get {
                return this.SenderDateOfBirthField;
            }
            set {
                if ((this.SenderDateOfBirthField.Equals(value) != true)) {
                    this.SenderDateOfBirthField = value;
                    this.RaisePropertyChanged("SenderDateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderEmail {
            get {
                return this.SenderEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderEmailField, value) != true)) {
                    this.SenderEmailField = value;
                    this.RaisePropertyChanged("SenderEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderOtherBankAccount {
            get {
                return this.SenderOtherBankAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderOtherBankAccountField, value) != true)) {
                    this.SenderOtherBankAccountField = value;
                    this.RaisePropertyChanged("SenderOtherBankAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPassport {
            get {
                return this.SenderPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPassportField, value) != true)) {
                    this.SenderPassportField = value;
                    this.RaisePropertyChanged("SenderPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPhone {
            get {
                return this.SenderPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPhoneField, value) != true)) {
                    this.SenderPhoneField = value;
                    this.RaisePropertyChanged("SenderPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderReferance {
            get {
                return this.SenderReferanceField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderReferanceField, value) != true)) {
                    this.SenderReferanceField = value;
                    this.RaisePropertyChanged("SenderReferance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderTown {
            get {
                return this.SenderTownField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTownField, value) != true)) {
                    this.SenderTownField = value;
                    this.RaisePropertyChanged("SenderTown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TransactionGroupNumber {
            get {
                return this.TransactionGroupNumberField;
            }
            set {
                if ((this.TransactionGroupNumberField.Equals(value) != true)) {
                    this.TransactionGroupNumberField = value;
                    this.RaisePropertyChanged("TransactionGroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDocumentCredAccount {
            get {
                return this.TransferDocumentCredAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDocumentCredAccountField, value) != true)) {
                    this.TransferDocumentCredAccountField = value;
                    this.RaisePropertyChanged("TransferDocumentCredAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferDocumentDebAccount {
            get {
                return this.TransferDocumentDebAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferDocumentDebAccountField, value) != true)) {
                    this.TransferDocumentDebAccountField = value;
                    this.RaisePropertyChanged("TransferDocumentDebAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferGroup {
            get {
                return this.TransferGroupField;
            }
            set {
                if ((this.TransferGroupField.Equals(value) != true)) {
                    this.TransferGroupField = value;
                    this.RaisePropertyChanged("TransferGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferGroupDescription {
            get {
                return this.TransferGroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferGroupDescriptionField, value) != true)) {
                    this.TransferGroupDescriptionField = value;
                    this.RaisePropertyChanged("TransferGroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferSource {
            get {
                return this.TransferSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferSourceField, value) != true)) {
                    this.TransferSourceField = value;
                    this.RaisePropertyChanged("TransferSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferSystem {
            get {
                return this.TransferSystemField;
            }
            set {
                if ((this.TransferSystemField.Equals(value) != true)) {
                    this.TransferSystemField = value;
                    this.RaisePropertyChanged("TransferSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferSystemDescription {
            get {
                return this.TransferSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferSystemDescriptionField, value) != true)) {
                    this.TransferSystemDescriptionField = value;
                    this.RaisePropertyChanged("TransferSystemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Transit {
            get {
                return this.TransitField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitField, value) != true)) {
                    this.TransitField = value;
                    this.RaisePropertyChanged("Transit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnicNumber {
            get {
                return this.UnicNumberField;
            }
            set {
                if ((this.UnicNumberField.Equals(value) != true)) {
                    this.UnicNumberField = value;
                    this.RaisePropertyChanged("UnicNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VOCode {
            get {
                return this.VOCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VOCodeField, value) != true)) {
                    this.VOCodeField = value;
                    this.RaisePropertyChanged("VOCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short VerifiedAml {
            get {
                return this.VerifiedAmlField;
            }
            set {
                if ((this.VerifiedAmlField.Equals(value) != true)) {
                    this.VerifiedAmlField = value;
                    this.RaisePropertyChanged("VerifiedAml");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanMonitoringConclusion", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanMonitoringConclusion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ConclusionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConclusionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionLinkedLoan> LinkedMonitoringLoansField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoanProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MonitoringDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionFactor> MonitoringFactorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MonitoringIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonitoringSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MonitoringSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonitoringSubTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MonitoringTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonitoringTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProfitReduceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfitReduceTypeDescritpionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProfitReducedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ProfitReductionSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProvisionCostConclusionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvisionCostConclusionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ProvisionCoverCoefficientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<short> ProvisionQualityConclusionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvisionQualityConclusionsDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Conclusion {
            get {
                return this.ConclusionField;
            }
            set {
                if ((this.ConclusionField.Equals(value) != true)) {
                    this.ConclusionField = value;
                    this.RaisePropertyChanged("Conclusion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConclusionDescription {
            get {
                return this.ConclusionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConclusionDescriptionField, value) != true)) {
                    this.ConclusionDescriptionField = value;
                    this.RaisePropertyChanged("ConclusionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionLinkedLoan> LinkedMonitoringLoans {
            get {
                return this.LinkedMonitoringLoansField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedMonitoringLoansField, value) != true)) {
                    this.LinkedMonitoringLoansField = value;
                    this.RaisePropertyChanged("LinkedMonitoringLoans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoanProductId {
            get {
                return this.LoanProductIdField;
            }
            set {
                if ((this.LoanProductIdField.Equals(value) != true)) {
                    this.LoanProductIdField = value;
                    this.RaisePropertyChanged("LoanProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MonitoringDate {
            get {
                return this.MonitoringDateField;
            }
            set {
                if ((this.MonitoringDateField.Equals(value) != true)) {
                    this.MonitoringDateField = value;
                    this.RaisePropertyChanged("MonitoringDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionFactor> MonitoringFactors {
            get {
                return this.MonitoringFactorsField;
            }
            set {
                if ((object.ReferenceEquals(this.MonitoringFactorsField, value) != true)) {
                    this.MonitoringFactorsField = value;
                    this.RaisePropertyChanged("MonitoringFactors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MonitoringId {
            get {
                return this.MonitoringIdField;
            }
            set {
                if ((this.MonitoringIdField.Equals(value) != true)) {
                    this.MonitoringIdField = value;
                    this.RaisePropertyChanged("MonitoringId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonitoringSetNumber {
            get {
                return this.MonitoringSetNumberField;
            }
            set {
                if ((this.MonitoringSetNumberField.Equals(value) != true)) {
                    this.MonitoringSetNumberField = value;
                    this.RaisePropertyChanged("MonitoringSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MonitoringSubType {
            get {
                return this.MonitoringSubTypeField;
            }
            set {
                if ((this.MonitoringSubTypeField.Equals(value) != true)) {
                    this.MonitoringSubTypeField = value;
                    this.RaisePropertyChanged("MonitoringSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonitoringSubTypeDescription {
            get {
                return this.MonitoringSubTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MonitoringSubTypeDescriptionField, value) != true)) {
                    this.MonitoringSubTypeDescriptionField = value;
                    this.RaisePropertyChanged("MonitoringSubTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MonitoringType {
            get {
                return this.MonitoringTypeField;
            }
            set {
                if ((this.MonitoringTypeField.Equals(value) != true)) {
                    this.MonitoringTypeField = value;
                    this.RaisePropertyChanged("MonitoringType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonitoringTypeDescription {
            get {
                return this.MonitoringTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MonitoringTypeDescriptionField, value) != true)) {
                    this.MonitoringTypeDescriptionField = value;
                    this.RaisePropertyChanged("MonitoringTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProfitReduceType {
            get {
                return this.ProfitReduceTypeField;
            }
            set {
                if ((this.ProfitReduceTypeField.Equals(value) != true)) {
                    this.ProfitReduceTypeField = value;
                    this.RaisePropertyChanged("ProfitReduceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfitReduceTypeDescritpion {
            get {
                return this.ProfitReduceTypeDescritpionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfitReduceTypeDescritpionField, value) != true)) {
                    this.ProfitReduceTypeDescritpionField = value;
                    this.RaisePropertyChanged("ProfitReduceTypeDescritpion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProfitReduced {
            get {
                return this.ProfitReducedField;
            }
            set {
                if ((this.ProfitReducedField.Equals(value) != true)) {
                    this.ProfitReducedField = value;
                    this.RaisePropertyChanged("ProfitReduced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ProfitReductionSize {
            get {
                return this.ProfitReductionSizeField;
            }
            set {
                if ((this.ProfitReductionSizeField.Equals(value) != true)) {
                    this.ProfitReductionSizeField = value;
                    this.RaisePropertyChanged("ProfitReductionSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProvisionCostConclusion {
            get {
                return this.ProvisionCostConclusionField;
            }
            set {
                if ((this.ProvisionCostConclusionField.Equals(value) != true)) {
                    this.ProvisionCostConclusionField = value;
                    this.RaisePropertyChanged("ProvisionCostConclusion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvisionCostConclusionDescription {
            get {
                return this.ProvisionCostConclusionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvisionCostConclusionDescriptionField, value) != true)) {
                    this.ProvisionCostConclusionDescriptionField = value;
                    this.RaisePropertyChanged("ProvisionCostConclusionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ProvisionCoverCoefficient {
            get {
                return this.ProvisionCoverCoefficientField;
            }
            set {
                if ((this.ProvisionCoverCoefficientField.Equals(value) != true)) {
                    this.ProvisionCoverCoefficientField = value;
                    this.RaisePropertyChanged("ProvisionCoverCoefficient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<short> ProvisionQualityConclusion {
            get {
                return this.ProvisionQualityConclusionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvisionQualityConclusionField, value) != true)) {
                    this.ProvisionQualityConclusionField = value;
                    this.RaisePropertyChanged("ProvisionQualityConclusion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvisionQualityConclusionsDescription {
            get {
                return this.ProvisionQualityConclusionsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvisionQualityConclusionsDescriptionField, value) != true)) {
                    this.ProvisionQualityConclusionsDescriptionField = value;
                    this.RaisePropertyChanged("ProvisionQualityConclusionsDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitoringConclusionLinkedLoan", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class MonitoringConclusionLinkedLoan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MainProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDescription {
            get {
                return this.CustomerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDescriptionField, value) != true)) {
                    this.CustomerDescriptionField = value;
                    this.RaisePropertyChanged("CustomerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Linked {
            get {
                return this.LinkedField;
            }
            set {
                if ((this.LinkedField.Equals(value) != true)) {
                    this.LinkedField = value;
                    this.RaisePropertyChanged("Linked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MainProduct {
            get {
                return this.MainProductField;
            }
            set {
                if ((this.MainProductField.Equals(value) != true)) {
                    this.MainProductField = value;
                    this.RaisePropertyChanged("MainProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonitoringConclusionFactor", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class MonitoringConclusionFactor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FactorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactorDescription {
            get {
                return this.FactorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorDescriptionField, value) != true)) {
                    this.FactorDescriptionField = value;
                    this.RaisePropertyChanged("FactorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FactorId {
            get {
                return this.FactorIdField;
            }
            set {
                if ((this.FactorIdField.Equals(value) != true)) {
                    this.FactorIdField = value;
                    this.RaisePropertyChanged("FactorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionResult", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ActionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.ActionError> ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ResultCode ResultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.ActionError> Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ResultCode ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionError", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ActionError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCode", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAutorized = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedNotConfirmed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoneAutoConfirm = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveAndSendToConfirm = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoneAndReturnedValues = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchParams", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.SearchPreOrderDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.SearchCreditHereAndNow))]
    public partial class SearchParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartRowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndRow {
            get {
                return this.EndRowField;
            }
            set {
                if ((this.EndRowField.Equals(value) != true)) {
                    this.EndRowField = value;
                    this.RaisePropertyChanged("EndRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartRow {
            get {
                return this.StartRowField;
            }
            set {
                if ((this.StartRowField.Equals(value) != true)) {
                    this.StartRowField = value;
                    this.RaisePropertyChanged("StartRow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchPreOrderDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchPreOrderDetails : Test.ServiceReference1.SearchParams {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PreOrderQuality QualityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AppID {
            get {
                return this.AppIDField;
            }
            set {
                if ((this.AppIDField.Equals(value) != true)) {
                    this.AppIDField = value;
                    this.RaisePropertyChanged("AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PreOrderQuality Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCreditHereAndNow", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchCreditHereAndNow : Test.ServiceReference1.SearchParams {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.ProductQualityFilter QualityFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShopFilialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.ProductQualityFilter QualityFilter {
            get {
                return this.QualityFilterField;
            }
            set {
                if ((this.QualityFilterField.Equals(value) != true)) {
                    this.QualityFilterField = value;
                    this.RaisePropertyChanged("QualityFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShopFilial {
            get {
                return this.ShopFilialField;
            }
            set {
                if ((this.ShopFilialField.Equals(value) != true)) {
                    this.ShopFilialField = value;
                    this.RaisePropertyChanged("ShopFilial");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductQualityFilter", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ProductQualityFilter : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Opened = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StillNotActive = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contracts = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllExceptContracts = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 100,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreOrderQuality", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum PreOrderQuality : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCreated = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedNotDone = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreOrder", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.CreditHereAndNowActivationOrders))]
    public partial class PreOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PreOrderQuality PreOrderQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PreOrderType PreOrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationFilialCode {
            get {
                return this.OperationFilialCodeField;
            }
            set {
                if ((this.OperationFilialCodeField.Equals(value) != true)) {
                    this.OperationFilialCodeField = value;
                    this.RaisePropertyChanged("OperationFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreOrderID {
            get {
                return this.PreOrderIDField;
            }
            set {
                if ((this.PreOrderIDField.Equals(value) != true)) {
                    this.PreOrderIDField = value;
                    this.RaisePropertyChanged("PreOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PreOrderQuality PreOrderQuality {
            get {
                return this.PreOrderQualityField;
            }
            set {
                if ((this.PreOrderQualityField.Equals(value) != true)) {
                    this.PreOrderQualityField = value;
                    this.RaisePropertyChanged("PreOrderQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PreOrderType PreOrderType {
            get {
                return this.PreOrderTypeField;
            }
            set {
                if ((this.PreOrderTypeField.Equals(value) != true)) {
                    this.PreOrderTypeField = value;
                    this.RaisePropertyChanged("PreOrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditHereAndNowActivationOrders", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CreditHereAndNowActivationOrders : Test.ServiceReference1.PreOrder {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.PreOrderDetails> CreditHereAndNowActivationDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.PreOrderDetails> CreditHereAndNowActivationDetails {
            get {
                return this.CreditHereAndNowActivationDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditHereAndNowActivationDetailsField, value) != true)) {
                    this.CreditHereAndNowActivationDetailsField = value;
                    this.RaisePropertyChanged("CreditHereAndNowActivationDetails");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreOrderType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum PreOrderType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHereAndNowActivationOrdersCreation = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreOrderDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PreOrderDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong AppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PreOrderQuality QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AppID {
            get {
                return this.AppIDField;
            }
            set {
                if ((this.AppIDField.Equals(value) != true)) {
                    this.AppIDField = value;
                    this.RaisePropertyChanged("AppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreOrderID {
            get {
                return this.PreOrderIDField;
            }
            set {
                if ((this.PreOrderIDField.Equals(value) != true)) {
                    this.PreOrderIDField = value;
                    this.RaisePropertyChanged("PreOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PreOrderQuality Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectedOrderMessage", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class RejectedOrderMessage : Test.ServiceReference1.UserMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Order OrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMessage", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Test.ServiceReference1.RejectedOrderMessage))]
    public partial class UserMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTypeDescription {
            get {
                return this.MessageTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeDescriptionField, value) != true)) {
                    this.MessageTypeDescriptionField = value;
                    this.RaisePropertyChanged("MessageTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReadDate {
            get {
                return this.ReadDateField;
            }
            set {
                if ((this.ReadDateField.Equals(value) != true)) {
                    this.ReadDateField = value;
                    this.RaisePropertyChanged("ReadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositCaseMap", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositCaseMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CaseSideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InUseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CaseId {
            get {
                return this.CaseIdField;
            }
            set {
                if ((this.CaseIdField.Equals(value) != true)) {
                    this.CaseIdField = value;
                    this.RaisePropertyChanged("CaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((this.CaseNumberField.Equals(value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CaseSide {
            get {
                return this.CaseSideField;
            }
            set {
                if ((this.CaseSideField.Equals(value) != true)) {
                    this.CaseSideField = value;
                    this.RaisePropertyChanged("CaseSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CaseType {
            get {
                return this.CaseTypeField;
            }
            set {
                if ((this.CaseTypeField.Equals(value) != true)) {
                    this.CaseTypeField = value;
                    this.RaisePropertyChanged("CaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InUse {
            get {
                return this.InUseField;
            }
            set {
                if ((this.InUseField.Equals(value) != true)) {
                    this.InUseField = value;
                    this.RaisePropertyChanged("InUse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTariffContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardTariffContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CardTariff> CardTariffsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TariffIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CardTariff> CardTariffs {
            get {
                return this.CardTariffsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTariffsField, value) != true)) {
                    this.CardTariffsField = value;
                    this.RaisePropertyChanged("CardTariffs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((this.ReasonField.Equals(value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonDescription {
            get {
                return this.ReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonDescriptionField, value) != true)) {
                    this.ReasonDescriptionField = value;
                    this.RaisePropertyChanged("ReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TariffID {
            get {
                return this.TariffIDField;
            }
            set {
                if ((this.TariffIDField.Equals(value) != true)) {
                    this.TariffIDField = value;
                    this.RaisePropertyChanged("TariffID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTariff", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardTariff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CardToCardFeeOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CardToCardFeeOurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashInFeeRateOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashInFeeRateOurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashRateInternationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashRateOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashRateOurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GracePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinFeeInternationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinFeeLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NegativeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PositiveRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SMSFeeFromBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SMSFeeFromCustomerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardSystem {
            get {
                return this.CardSystemField;
            }
            set {
                if ((this.CardSystemField.Equals(value) != true)) {
                    this.CardSystemField = value;
                    this.RaisePropertyChanged("CardSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CardToCardFeeOther {
            get {
                return this.CardToCardFeeOtherField;
            }
            set {
                if ((this.CardToCardFeeOtherField.Equals(value) != true)) {
                    this.CardToCardFeeOtherField = value;
                    this.RaisePropertyChanged("CardToCardFeeOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CardToCardFeeOur {
            get {
                return this.CardToCardFeeOurField;
            }
            set {
                if ((this.CardToCardFeeOurField.Equals(value) != true)) {
                    this.CardToCardFeeOurField = value;
                    this.RaisePropertyChanged("CardToCardFeeOur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashInFeeRateOther {
            get {
                return this.CashInFeeRateOtherField;
            }
            set {
                if ((this.CashInFeeRateOtherField.Equals(value) != true)) {
                    this.CashInFeeRateOtherField = value;
                    this.RaisePropertyChanged("CashInFeeRateOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashInFeeRateOur {
            get {
                return this.CashInFeeRateOurField;
            }
            set {
                if ((this.CashInFeeRateOurField.Equals(value) != true)) {
                    this.CashInFeeRateOurField = value;
                    this.RaisePropertyChanged("CashInFeeRateOur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashRateInternational {
            get {
                return this.CashRateInternationalField;
            }
            set {
                if ((this.CashRateInternationalField.Equals(value) != true)) {
                    this.CashRateInternationalField = value;
                    this.RaisePropertyChanged("CashRateInternational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashRateOther {
            get {
                return this.CashRateOtherField;
            }
            set {
                if ((this.CashRateOtherField.Equals(value) != true)) {
                    this.CashRateOtherField = value;
                    this.RaisePropertyChanged("CashRateOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashRateOur {
            get {
                return this.CashRateOurField;
            }
            set {
                if ((this.CashRateOurField.Equals(value) != true)) {
                    this.CashRateOurField = value;
                    this.RaisePropertyChanged("CashRateOur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GracePeriod {
            get {
                return this.GracePeriodField;
            }
            set {
                if ((this.GracePeriodField.Equals(value) != true)) {
                    this.GracePeriodField = value;
                    this.RaisePropertyChanged("GracePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinFeeInternational {
            get {
                return this.MinFeeInternationalField;
            }
            set {
                if ((this.MinFeeInternationalField.Equals(value) != true)) {
                    this.MinFeeInternationalField = value;
                    this.RaisePropertyChanged("MinFeeInternational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinFeeLocal {
            get {
                return this.MinFeeLocalField;
            }
            set {
                if ((this.MinFeeLocalField.Equals(value) != true)) {
                    this.MinFeeLocalField = value;
                    this.RaisePropertyChanged("MinFeeLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NegativeRate {
            get {
                return this.NegativeRateField;
            }
            set {
                if ((this.NegativeRateField.Equals(value) != true)) {
                    this.NegativeRateField = value;
                    this.RaisePropertyChanged("NegativeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PositiveRate {
            get {
                return this.PositiveRateField;
            }
            set {
                if ((this.PositiveRateField.Equals(value) != true)) {
                    this.PositiveRateField = value;
                    this.RaisePropertyChanged("PositiveRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SMSFeeFromBank {
            get {
                return this.SMSFeeFromBankField;
            }
            set {
                if ((this.SMSFeeFromBankField.Equals(value) != true)) {
                    this.SMSFeeFromBankField = value;
                    this.RaisePropertyChanged("SMSFeeFromBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SMSFeeFromCustomer {
            get {
                return this.SMSFeeFromCustomerField;
            }
            set {
                if ((this.SMSFeeFromCustomerField.Equals(value) != true)) {
                    this.SMSFeeFromCustomerField = value;
                    this.RaisePropertyChanged("SMSFeeFromCustomer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PosLocation", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PosLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LocationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.PosTerminal> PosterminalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalDescription {
            get {
                return this.AdditionalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalDescriptionField, value) != true)) {
                    this.AdditionalDescriptionField = value;
                    this.RaisePropertyChanged("AdditionalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LocationType {
            get {
                return this.LocationTypeField;
            }
            set {
                if ((this.LocationTypeField.Equals(value) != true)) {
                    this.LocationTypeField = value;
                    this.RaisePropertyChanged("LocationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationTypeDescription {
            get {
                return this.LocationTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationTypeDescriptionField, value) != true)) {
                    this.LocationTypeDescriptionField = value;
                    this.RaisePropertyChanged("LocationTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenDate {
            get {
                return this.OpenDateField;
            }
            set {
                if ((this.OpenDateField.Equals(value) != true)) {
                    this.OpenDateField = value;
                    this.RaisePropertyChanged("OpenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.PosTerminal> Posterminals {
            get {
                return this.PosterminalsField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterminalsField, value) != true)) {
                    this.PosterminalsField = value;
                    this.RaisePropertyChanged("Posterminals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PosTerminal", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PosTerminal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmexMIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmexMID {
            get {
                return this.AmexMIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AmexMIDField, value) != true)) {
                    this.AmexMIDField = value;
                    this.RaisePropertyChanged("AmexMID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerBankCode {
            get {
                return this.OwnerBankCodeField;
            }
            set {
                if ((this.OwnerBankCodeField.Equals(value) != true)) {
                    this.OwnerBankCodeField = value;
                    this.RaisePropertyChanged("OwnerBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminalID {
            get {
                return this.TerminalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminalIDField, value) != true)) {
                    this.TerminalIDField = value;
                    this.RaisePropertyChanged("TerminalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PosRate", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PosRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CardSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardSystemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FixedRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LocalRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CardSystem {
            get {
                return this.CardSystemField;
            }
            set {
                if ((this.CardSystemField.Equals(value) != true)) {
                    this.CardSystemField = value;
                    this.RaisePropertyChanged("CardSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardSystemDescription {
            get {
                return this.CardSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardSystemDescriptionField, value) != true)) {
                    this.CardSystemDescriptionField = value;
                    this.RaisePropertyChanged("CardSystemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FixedRate {
            get {
                return this.FixedRateField;
            }
            set {
                if ((this.FixedRateField.Equals(value) != true)) {
                    this.FixedRateField = value;
                    this.RaisePropertyChanged("FixedRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float LocalRate {
            get {
                return this.LocalRateField;
            }
            set {
                if ((this.LocalRateField.Equals(value) != true)) {
                    this.LocalRateField = value;
                    this.RaisePropertyChanged("LocalRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PosCashbackRate", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PosCashbackRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RateFromACBAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardTypeDescription {
            get {
                return this.CardTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeDescriptionField, value) != true)) {
                    this.CardTypeDescriptionField = value;
                    this.RaisePropertyChanged("CardTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RateFromACBA {
            get {
                return this.RateFromACBAField;
            }
            set {
                if ((this.RateFromACBAField.Equals(value) != true)) {
                    this.RateFromACBAField = value;
                    this.RaisePropertyChanged("RateFromACBA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Provision", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Provision : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActivateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivatedSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LoanProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaturedSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MoveableIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PacketNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyLicenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvisionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivateDate {
            get {
                return this.ActivateDateField;
            }
            set {
                if ((this.ActivateDateField.Equals(value) != true)) {
                    this.ActivateDateField = value;
                    this.RaisePropertyChanged("ActivateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivatedSetNumber {
            get {
                return this.ActivatedSetNumberField;
            }
            set {
                if ((this.ActivatedSetNumberField.Equals(value) != true)) {
                    this.ActivatedSetNumberField = value;
                    this.RaisePropertyChanged("ActivatedSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosingReason {
            get {
                return this.ClosingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosingReasonField, value) != true)) {
                    this.ClosingReasonField = value;
                    this.RaisePropertyChanged("ClosingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenceNumber {
            get {
                return this.LicenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenceNumberField, value) != true)) {
                    this.LicenceNumberField = value;
                    this.RaisePropertyChanged("LicenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LoanProgram {
            get {
                return this.LoanProgramField;
            }
            set {
                if ((this.LoanProgramField.Equals(value) != true)) {
                    this.LoanProgramField = value;
                    this.RaisePropertyChanged("LoanProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaturedSetNumber {
            get {
                return this.MaturedSetNumberField;
            }
            set {
                if ((this.MaturedSetNumberField.Equals(value) != true)) {
                    this.MaturedSetNumberField = value;
                    this.RaisePropertyChanged("MaturedSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MoveableIndex {
            get {
                return this.MoveableIndexField;
            }
            set {
                if ((this.MoveableIndexField.Equals(value) != true)) {
                    this.MoveableIndexField = value;
                    this.RaisePropertyChanged("MoveableIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutBalance {
            get {
                return this.OutBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.OutBalanceField, value) != true)) {
                    this.OutBalanceField = value;
                    this.RaisePropertyChanged("OutBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PacketNumber {
            get {
                return this.PacketNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PacketNumberField, value) != true)) {
                    this.PacketNumberField = value;
                    this.RaisePropertyChanged("PacketNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyLicenceNumber {
            get {
                return this.PropertyLicenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyLicenceNumberField, value) != true)) {
                    this.PropertyLicenceNumberField = value;
                    this.RaisePropertyChanged("PropertyLicenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvisionNumber {
            get {
                return this.ProvisionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvisionNumberField, value) != true)) {
                    this.ProvisionNumberField = value;
                    this.RaisePropertyChanged("ProvisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProvisionLoan", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ProvisionLoan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanCustomerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong LoanCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LoanQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanQualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LoantypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanAccount {
            get {
                return this.LoanAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanAccountField, value) != true)) {
                    this.LoanAccountField = value;
                    this.RaisePropertyChanged("LoanAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanCustomerDescription {
            get {
                return this.LoanCustomerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanCustomerDescriptionField, value) != true)) {
                    this.LoanCustomerDescriptionField = value;
                    this.RaisePropertyChanged("LoanCustomerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong LoanCustomerNumber {
            get {
                return this.LoanCustomerNumberField;
            }
            set {
                if ((this.LoanCustomerNumberField.Equals(value) != true)) {
                    this.LoanCustomerNumberField = value;
                    this.RaisePropertyChanged("LoanCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LoanQuality {
            get {
                return this.LoanQualityField;
            }
            set {
                if ((this.LoanQualityField.Equals(value) != true)) {
                    this.LoanQualityField = value;
                    this.RaisePropertyChanged("LoanQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanQualityDescription {
            get {
                return this.LoanQualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanQualityDescriptionField, value) != true)) {
                    this.LoanQualityDescriptionField = value;
                    this.RaisePropertyChanged("LoanQualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanTypeDescription {
            get {
                return this.LoanTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanTypeDescriptionField, value) != true)) {
                    this.LoanTypeDescriptionField = value;
                    this.RaisePropertyChanged("LoanTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Loantype {
            get {
                return this.LoantypeField;
            }
            set {
                if ((this.LoantypeField.Equals(value) != true)) {
                    this.LoantypeField = value;
                    this.RaisePropertyChanged("Loantype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GivenGuaranteeReduction", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class GivenGuaranteeReduction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductAppIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReasonDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReductionAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReductionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint SetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductAppId {
            get {
                return this.ProductAppIdField;
            }
            set {
                if ((this.ProductAppIdField.Equals(value) != true)) {
                    this.ProductAppIdField = value;
                    this.RaisePropertyChanged("ProductAppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReasonDate {
            get {
                return this.ReasonDateField;
            }
            set {
                if ((this.ReasonDateField.Equals(value) != true)) {
                    this.ReasonDateField = value;
                    this.RaisePropertyChanged("ReasonDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonNumber {
            get {
                return this.ReasonNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonNumberField, value) != true)) {
                    this.ReasonNumberField = value;
                    this.RaisePropertyChanged("ReasonNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReductionAmount {
            get {
                return this.ReductionAmountField;
            }
            set {
                if ((this.ReductionAmountField.Equals(value) != true)) {
                    this.ReductionAmountField = value;
                    this.RaisePropertyChanged("ReductionAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReductionDate {
            get {
                return this.ReductionDateField;
            }
            set {
                if ((this.ReductionDateField.Equals(value) != true)) {
                    this.ReductionDateField = value;
                    this.RaisePropertyChanged("ReductionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DAHKDetail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DAHKDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArcaBalanceResponseData", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ArcaBalanceResponseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AvailableExceedLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvailableExceedLimitCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OwnFundsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnFundsCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AvailableExceedLimit {
            get {
                return this.AvailableExceedLimitField;
            }
            set {
                if ((this.AvailableExceedLimitField.Equals(value) != true)) {
                    this.AvailableExceedLimitField = value;
                    this.RaisePropertyChanged("AvailableExceedLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvailableExceedLimitCurrency {
            get {
                return this.AvailableExceedLimitCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableExceedLimitCurrencyField, value) != true)) {
                    this.AvailableExceedLimitCurrencyField = value;
                    this.RaisePropertyChanged("AvailableExceedLimitCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OwnFunds {
            get {
                return this.OwnFundsField;
            }
            set {
                if ((this.OwnFundsField.Equals(value) != true)) {
                    this.OwnFundsField = value;
                    this.RaisePropertyChanged("OwnFunds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnFundsCurrency {
            get {
                return this.OwnFundsCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnFundsCurrencyField, value) != true)) {
                    this.OwnFundsCurrencyField = value;
                    this.RaisePropertyChanged("OwnFundsCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseDescription {
            get {
                return this.ResponseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseDescriptionField, value) != true)) {
                    this.ResponseDescriptionField = value;
                    this.RaisePropertyChanged("ResponseDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProductClassification", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanProductClassification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClassificationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StoreAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StoreAmountTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StorePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StoreTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClassificationDate {
            get {
                return this.ClassificationDateField;
            }
            set {
                if ((this.ClassificationDateField.Equals(value) != true)) {
                    this.ClassificationDateField = value;
                    this.RaisePropertyChanged("ClassificationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysCount {
            get {
                return this.DaysCountField;
            }
            set {
                if ((this.DaysCountField.Equals(value) != true)) {
                    this.DaysCountField = value;
                    this.RaisePropertyChanged("DaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StoreAmount {
            get {
                return this.StoreAmountField;
            }
            set {
                if ((this.StoreAmountField.Equals(value) != true)) {
                    this.StoreAmountField = value;
                    this.RaisePropertyChanged("StoreAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StoreAmountTypeDescription {
            get {
                return this.StoreAmountTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreAmountTypeDescriptionField, value) != true)) {
                    this.StoreAmountTypeDescriptionField = value;
                    this.RaisePropertyChanged("StoreAmountTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StorePercent {
            get {
                return this.StorePercentField;
            }
            set {
                if ((this.StorePercentField.Equals(value) != true)) {
                    this.StorePercentField = value;
                    this.RaisePropertyChanged("StorePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte StoreType {
            get {
                return this.StoreTypeField;
            }
            set {
                if ((this.StoreTypeField.Equals(value) != true)) {
                    this.StoreTypeField = value;
                    this.RaisePropertyChanged("StoreType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SafekeepingItem", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SafekeepingItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DebtAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PacketNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TariffField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractNumberField, value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DebtAmount {
            get {
                return this.DebtAmountField;
            }
            set {
                if ((this.DebtAmountField.Equals(value) != true)) {
                    this.DebtAmountField = value;
                    this.RaisePropertyChanged("DebtAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemTypeDescription {
            get {
                return this.ItemTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemTypeDescriptionField, value) != true)) {
                    this.ItemTypeDescriptionField = value;
                    this.RaisePropertyChanged("ItemTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PacketNumber {
            get {
                return this.PacketNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PacketNumberField, value) != true)) {
                    this.PacketNumberField = value;
                    this.RaisePropertyChanged("PacketNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Periodicity {
            get {
                return this.PeriodicityField;
            }
            set {
                if ((this.PeriodicityField.Equals(value) != true)) {
                    this.PeriodicityField = value;
                    this.RaisePropertyChanged("Periodicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Tariff {
            get {
                return this.TariffField;
            }
            set {
                if ((this.TariffField.Equals(value) != true)) {
                    this.TariffField = value;
                    this.RaisePropertyChanged("Tariff");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeRate", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ExchangeRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BuyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BuyRateATMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BuyRateCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BuyRateCrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BuyRateTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RateCBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaleRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaleRateATMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaleRateCashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaleRateCrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaleRateTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceCurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BuyRate {
            get {
                return this.BuyRateField;
            }
            set {
                if ((this.BuyRateField.Equals(value) != true)) {
                    this.BuyRateField = value;
                    this.RaisePropertyChanged("BuyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BuyRateATM {
            get {
                return this.BuyRateATMField;
            }
            set {
                if ((this.BuyRateATMField.Equals(value) != true)) {
                    this.BuyRateATMField = value;
                    this.RaisePropertyChanged("BuyRateATM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BuyRateCash {
            get {
                return this.BuyRateCashField;
            }
            set {
                if ((this.BuyRateCashField.Equals(value) != true)) {
                    this.BuyRateCashField = value;
                    this.RaisePropertyChanged("BuyRateCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BuyRateCross {
            get {
                return this.BuyRateCrossField;
            }
            set {
                if ((this.BuyRateCrossField.Equals(value) != true)) {
                    this.BuyRateCrossField = value;
                    this.RaisePropertyChanged("BuyRateCross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BuyRateTransfer {
            get {
                return this.BuyRateTransferField;
            }
            set {
                if ((this.BuyRateTransferField.Equals(value) != true)) {
                    this.BuyRateTransferField = value;
                    this.RaisePropertyChanged("BuyRateTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float RateCB {
            get {
                return this.RateCBField;
            }
            set {
                if ((this.RateCBField.Equals(value) != true)) {
                    this.RateCBField = value;
                    this.RaisePropertyChanged("RateCB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SaleRate {
            get {
                return this.SaleRateField;
            }
            set {
                if ((this.SaleRateField.Equals(value) != true)) {
                    this.SaleRateField = value;
                    this.RaisePropertyChanged("SaleRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SaleRateATM {
            get {
                return this.SaleRateATMField;
            }
            set {
                if ((this.SaleRateATMField.Equals(value) != true)) {
                    this.SaleRateATMField = value;
                    this.RaisePropertyChanged("SaleRateATM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SaleRateCash {
            get {
                return this.SaleRateCashField;
            }
            set {
                if ((this.SaleRateCashField.Equals(value) != true)) {
                    this.SaleRateCashField = value;
                    this.RaisePropertyChanged("SaleRateCash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SaleRateCross {
            get {
                return this.SaleRateCrossField;
            }
            set {
                if ((this.SaleRateCrossField.Equals(value) != true)) {
                    this.SaleRateCrossField = value;
                    this.RaisePropertyChanged("SaleRateCross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SaleRateTransfer {
            get {
                return this.SaleRateTransferField;
            }
            set {
                if ((this.SaleRateTransferField.Equals(value) != true)) {
                    this.SaleRateTransferField = value;
                    this.RaisePropertyChanged("SaleRateTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceCurrency {
            get {
                return this.SourceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceCurrencyField, value) != true)) {
                    this.SourceCurrencyField = value;
                    this.RaisePropertyChanged("SourceCurrency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CrossExchangeRate", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CrossExchangeRate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CHFBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CHFSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EURBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EURSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GBPBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GBPSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RURBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RURSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double USDBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double USDSaleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CHFBuy {
            get {
                return this.CHFBuyField;
            }
            set {
                if ((this.CHFBuyField.Equals(value) != true)) {
                    this.CHFBuyField = value;
                    this.RaisePropertyChanged("CHFBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CHFSale {
            get {
                return this.CHFSaleField;
            }
            set {
                if ((this.CHFSaleField.Equals(value) != true)) {
                    this.CHFSaleField = value;
                    this.RaisePropertyChanged("CHFSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EURBuy {
            get {
                return this.EURBuyField;
            }
            set {
                if ((this.EURBuyField.Equals(value) != true)) {
                    this.EURBuyField = value;
                    this.RaisePropertyChanged("EURBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EURSale {
            get {
                return this.EURSaleField;
            }
            set {
                if ((this.EURSaleField.Equals(value) != true)) {
                    this.EURSaleField = value;
                    this.RaisePropertyChanged("EURSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GBPBuy {
            get {
                return this.GBPBuyField;
            }
            set {
                if ((this.GBPBuyField.Equals(value) != true)) {
                    this.GBPBuyField = value;
                    this.RaisePropertyChanged("GBPBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GBPSale {
            get {
                return this.GBPSaleField;
            }
            set {
                if ((this.GBPSaleField.Equals(value) != true)) {
                    this.GBPSaleField = value;
                    this.RaisePropertyChanged("GBPSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RURBuy {
            get {
                return this.RURBuyField;
            }
            set {
                if ((this.RURBuyField.Equals(value) != true)) {
                    this.RURBuyField = value;
                    this.RaisePropertyChanged("RURBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RURSale {
            get {
                return this.RURSaleField;
            }
            set {
                if ((this.RURSaleField.Equals(value) != true)) {
                    this.RURSaleField = value;
                    this.RaisePropertyChanged("RURSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double USDBuy {
            get {
                return this.USDBuyField;
            }
            set {
                if ((this.USDBuyField.Equals(value) != true)) {
                    this.USDBuyField = value;
                    this.RaisePropertyChanged("USDBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double USDSale {
            get {
                return this.USDSaleField;
            }
            set {
                if ((this.USDSaleField.Equals(value) != true)) {
                    this.USDSaleField = value;
                    this.RaisePropertyChanged("USDSale");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransitAccountForDebitTransactions", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransitAccountForDebitTransactions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account TransitAccountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenDate {
            get {
                return this.OpenDateField;
            }
            set {
                if ((this.OpenDateField.Equals(value) != true)) {
                    this.OpenDateField = value;
                    this.RaisePropertyChanged("OpenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresApproval {
            get {
                return this.RequiresApprovalField;
            }
            set {
                if ((this.RequiresApprovalField.Equals(value) != true)) {
                    this.RequiresApprovalField = value;
                    this.RaisePropertyChanged("RequiresApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account TransitAccount {
            get {
                return this.TransitAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitAccountField, value) != true)) {
                    this.TransitAccountField = value;
                    this.RaisePropertyChanged("TransitAccount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorrespondentBankAccount", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CorrespondentBankAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AcbaTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwiftCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AcbaTransfer {
            get {
                return this.AcbaTransferField;
            }
            set {
                if ((this.AcbaTransferField.Equals(value) != true)) {
                    this.AcbaTransferField = value;
                    this.RaisePropertyChanged("AcbaTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeAccount {
            get {
                return this.CodeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeAccountField, value) != true)) {
                    this.CodeAccountField = value;
                    this.RaisePropertyChanged("CodeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwiftCode {
            get {
                return this.SwiftCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SwiftCodeField, value) != true)) {
                    this.SwiftCodeField = value;
                    this.RaisePropertyChanged("SwiftCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferSystem {
            get {
                return this.TransferSystemField;
            }
            set {
                if ((this.TransferSystemField.Equals(value) != true)) {
                    this.TransferSystemField = value;
                    this.RaisePropertyChanged("TransferSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardActivationInArCa", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardActivationInArCa : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CardActivationInArCaApigateDetails CardActivationInArCaApigateDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CardActivationInArCaPaymentDetails CardActivationInArCaPaymentDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebitCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivationType {
            get {
                return this.ActivationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivationTypeField, value) != true)) {
                    this.ActivationTypeField = value;
                    this.RaisePropertyChanged("ActivationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CardActivationInArCaApigateDetails CardActivationInArCaApigateDetails {
            get {
                return this.CardActivationInArCaApigateDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardActivationInArCaApigateDetailsField, value) != true)) {
                    this.CardActivationInArCaApigateDetailsField = value;
                    this.RaisePropertyChanged("CardActivationInArCaApigateDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CardActivationInArCaPaymentDetails CardActivationInArCaPaymentDetails {
            get {
                return this.CardActivationInArCaPaymentDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardActivationInArCaPaymentDetailsField, value) != true)) {
                    this.CardActivationInArCaPaymentDetailsField = value;
                    this.RaisePropertyChanged("CardActivationInArCaPaymentDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebitCredit {
            get {
                return this.DebitCreditField;
            }
            set {
                if ((object.ReferenceEquals(this.DebitCreditField, value) != true)) {
                    this.DebitCreditField = value;
                    this.RaisePropertyChanged("DebitCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendDate {
            get {
                return this.SendDateField;
            }
            set {
                if ((this.SendDateField.Equals(value) != true)) {
                    this.SendDateField = value;
                    this.RaisePropertyChanged("SendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardActivationInArCaApigateDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardActivationInArCaApigateDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseCodeField, value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardActivationInArCaPaymentDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardActivationInArCaPaymentDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InputDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InputDate {
            get {
                return this.InputDateField;
            }
            set {
                if ((this.InputDateField.Equals(value) != true)) {
                    this.InputDateField = value;
                    this.RaisePropertyChanged("InputDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerCommunalCard", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CustomerCommunalCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.AbonentTypes AbonentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CommunalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EditingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort EditorSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort OpenerFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort OpenerSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentNumber {
            get {
                return this.AbonentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentNumberField, value) != true)) {
                    this.AbonentNumberField = value;
                    this.RaisePropertyChanged("AbonentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.AbonentTypes AbonentType {
            get {
                return this.AbonentTypeField;
            }
            set {
                if ((this.AbonentTypeField.Equals(value) != true)) {
                    this.AbonentTypeField = value;
                    this.RaisePropertyChanged("AbonentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchCodeField, value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CommunalType {
            get {
                return this.CommunalTypeField;
            }
            set {
                if ((this.CommunalTypeField.Equals(value) != true)) {
                    this.CommunalTypeField = value;
                    this.RaisePropertyChanged("CommunalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EditingDate {
            get {
                return this.EditingDateField;
            }
            set {
                if ((this.EditingDateField.Equals(value) != true)) {
                    this.EditingDateField = value;
                    this.RaisePropertyChanged("EditingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort EditorSetNumber {
            get {
                return this.EditorSetNumberField;
            }
            set {
                if ((this.EditorSetNumberField.Equals(value) != true)) {
                    this.EditorSetNumberField = value;
                    this.RaisePropertyChanged("EditorSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenDate {
            get {
                return this.OpenDateField;
            }
            set {
                if ((this.OpenDateField.Equals(value) != true)) {
                    this.OpenDateField = value;
                    this.RaisePropertyChanged("OpenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort OpenerFilialCode {
            get {
                return this.OpenerFilialCodeField;
            }
            set {
                if ((this.OpenerFilialCodeField.Equals(value) != true)) {
                    this.OpenerFilialCodeField = value;
                    this.RaisePropertyChanged("OpenerFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort OpenerSetNumber {
            get {
                return this.OpenerSetNumberField;
            }
            set {
                if ((this.OpenerSetNumberField.Equals(value) != true)) {
                    this.OpenerSetNumberField = value;
                    this.RaisePropertyChanged("OpenerSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbonentTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum AbonentTypes : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        physical = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        legal = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ENAPayments", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ENAPayments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PaidAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentOrderNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PaidAmount {
            get {
                return this.PaidAmountField;
            }
            set {
                if ((this.PaidAmountField.Equals(value) != true)) {
                    this.PaidAmountField = value;
                    this.RaisePropertyChanged("PaidAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentOrderNumber {
            get {
                return this.PaymentOrderNumberField;
            }
            set {
                if ((this.PaymentOrderNumberField.Equals(value) != true)) {
                    this.PaymentOrderNumberField = value;
                    this.RaisePropertyChanged("PaymentOrderNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderAccountType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum OrderAccountType : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebitAccount = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditAccount = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FeeAccount = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanApplication", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanApplication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApplicationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CommunicationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommunicationTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float InterestRateOfferedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LoanApplicationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoanUseCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoanUseLocalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoanUseRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OfferedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefuseReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApplicationDate {
            get {
                return this.ApplicationDateField;
            }
            set {
                if ((this.ApplicationDateField.Equals(value) != true)) {
                    this.ApplicationDateField = value;
                    this.RaisePropertyChanged("ApplicationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CommunicationType {
            get {
                return this.CommunicationTypeField;
            }
            set {
                if ((this.CommunicationTypeField.Equals(value) != true)) {
                    this.CommunicationTypeField = value;
                    this.RaisePropertyChanged("CommunicationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommunicationTypeDescription {
            get {
                return this.CommunicationTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CommunicationTypeDescriptionField, value) != true)) {
                    this.CommunicationTypeDescriptionField = value;
                    this.RaisePropertyChanged("CommunicationTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float InterestRateOffered {
            get {
                return this.InterestRateOfferedField;
            }
            set {
                if ((this.InterestRateOfferedField.Equals(value) != true)) {
                    this.InterestRateOfferedField = value;
                    this.RaisePropertyChanged("InterestRateOffered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LoanApplicationNumber {
            get {
                return this.LoanApplicationNumberField;
            }
            set {
                if ((this.LoanApplicationNumberField.Equals(value) != true)) {
                    this.LoanApplicationNumberField = value;
                    this.RaisePropertyChanged("LoanApplicationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanUseCountry {
            get {
                return this.LoanUseCountryField;
            }
            set {
                if ((this.LoanUseCountryField.Equals(value) != true)) {
                    this.LoanUseCountryField = value;
                    this.RaisePropertyChanged("LoanUseCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanUseLocality {
            get {
                return this.LoanUseLocalityField;
            }
            set {
                if ((this.LoanUseLocalityField.Equals(value) != true)) {
                    this.LoanUseLocalityField = value;
                    this.RaisePropertyChanged("LoanUseLocality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanUseRegion {
            get {
                return this.LoanUseRegionField;
            }
            set {
                if ((this.LoanUseRegionField.Equals(value) != true)) {
                    this.LoanUseRegionField = value;
                    this.RaisePropertyChanged("LoanUseRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OfferedAmount {
            get {
                return this.OfferedAmountField;
            }
            set {
                if ((this.OfferedAmountField.Equals(value) != true)) {
                    this.OfferedAmountField = value;
                    this.RaisePropertyChanged("OfferedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((this.ProductTypeField.Equals(value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTypeDescription {
            get {
                return this.ProductTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeDescriptionField, value) != true)) {
                    this.ProductTypeDescriptionField = value;
                    this.RaisePropertyChanged("ProductTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefuseReason {
            get {
                return this.RefuseReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RefuseReasonField, value) != true)) {
                    this.RefuseReasonField = value;
                    this.RaisePropertyChanged("RefuseReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectReason {
            get {
                return this.RejectReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectReasonField, value) != true)) {
                    this.RejectReasonField = value;
                    this.RaisePropertyChanged("RejectReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FicoScoreResult", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class FicoScoreResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FicoScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MidFicoScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> ReasonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FicoScore {
            get {
                return this.FicoScoreField;
            }
            set {
                if ((this.FicoScoreField.Equals(value) != true)) {
                    this.FicoScoreField = value;
                    this.RaisePropertyChanged("FicoScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MidFicoScore {
            get {
                return this.MidFicoScoreField;
            }
            set {
                if ((this.MidFicoScoreField.Equals(value) != true)) {
                    this.MidFicoScoreField = value;
                    this.RaisePropertyChanged("MidFicoScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Reasons {
            get {
                return this.ReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonsField, value) != true)) {
                    this.ReasonsField = value;
                    this.RaisePropertyChanged("Reasons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HasHB", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum HasHB : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForActivate = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanMainContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanMainContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralNumber {
            get {
                return this.GeneralNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralNumberField, value) != true)) {
                    this.GeneralNumberField = value;
                    this.RaisePropertyChanged("GeneralNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanProductProlongation", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class LoanProductProlongation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfirmationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InterestRateEffectiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InterestRateFullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PenaltyAddPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegistrationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.ActivationDateField;
            }
            set {
                if ((this.ActivationDateField.Equals(value) != true)) {
                    this.ActivationDateField = value;
                    this.RaisePropertyChanged("ActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivationSetNumber {
            get {
                return this.ActivationSetNumberField;
            }
            set {
                if ((this.ActivationSetNumberField.Equals(value) != true)) {
                    this.ActivationSetNumberField = value;
                    this.RaisePropertyChanged("ActivationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfirmationSetNumber {
            get {
                return this.ConfirmationSetNumberField;
            }
            set {
                if ((this.ConfirmationSetNumberField.Equals(value) != true)) {
                    this.ConfirmationSetNumberField = value;
                    this.RaisePropertyChanged("ConfirmationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InterestRateEffective {
            get {
                return this.InterestRateEffectiveField;
            }
            set {
                if ((this.InterestRateEffectiveField.Equals(value) != true)) {
                    this.InterestRateEffectiveField = value;
                    this.RaisePropertyChanged("InterestRateEffective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InterestRateFull {
            get {
                return this.InterestRateFullField;
            }
            set {
                if ((this.InterestRateFullField.Equals(value) != true)) {
                    this.InterestRateFullField = value;
                    this.RaisePropertyChanged("InterestRateFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PenaltyAddPercent {
            get {
                return this.PenaltyAddPercentField;
            }
            set {
                if ((this.PenaltyAddPercentField.Equals(value) != true)) {
                    this.PenaltyAddPercentField = value;
                    this.RaisePropertyChanged("PenaltyAddPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegistrationSetNumber {
            get {
                return this.RegistrationSetNumberField;
            }
            set {
                if ((this.RegistrationSetNumberField.Equals(value) != true)) {
                    this.RegistrationSetNumberField = value;
                    this.RaisePropertyChanged("RegistrationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductOtherFee", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ProductOtherFee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Claim", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Claim : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClaimDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.ClaimEvent> EventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimDate {
            get {
                return this.ClaimDateField;
            }
            set {
                if ((this.ClaimDateField.Equals(value) != true)) {
                    this.ClaimDateField = value;
                    this.RaisePropertyChanged("ClaimDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimNumber {
            get {
                return this.ClaimNumberField;
            }
            set {
                if ((this.ClaimNumberField.Equals(value) != true)) {
                    this.ClaimNumberField = value;
                    this.RaisePropertyChanged("ClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.ClaimEvent> Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((this.PurposeField.Equals(value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurposeDescription {
            get {
                return this.PurposeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeDescriptionField, value) != true)) {
                    this.PurposeDescriptionField = value;
                    this.RaisePropertyChanged("PurposeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClaimEvent", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ClaimEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ClaimAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CourtTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourtTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.Tax> EventTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int claimNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClaimAmount {
            get {
                return this.ClaimAmountField;
            }
            set {
                if ((this.ClaimAmountField.Equals(value) != true)) {
                    this.ClaimAmountField = value;
                    this.RaisePropertyChanged("ClaimAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CourtType {
            get {
                return this.CourtTypeField;
            }
            set {
                if ((this.CourtTypeField.Equals(value) != true)) {
                    this.CourtTypeField = value;
                    this.RaisePropertyChanged("CourtType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourtTypeDescription {
            get {
                return this.CourtTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CourtTypeDescriptionField, value) != true)) {
                    this.CourtTypeDescriptionField = value;
                    this.RaisePropertyChanged("CourtTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventNumber {
            get {
                return this.EventNumberField;
            }
            set {
                if ((this.EventNumberField.Equals(value) != true)) {
                    this.EventNumberField = value;
                    this.RaisePropertyChanged("EventNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.Tax> EventTax {
            get {
                return this.EventTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTaxField, value) != true)) {
                    this.EventTaxField = value;
                    this.RaisePropertyChanged("EventTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((this.PurposeField.Equals(value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurposeDescription {
            get {
                return this.PurposeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeDescriptionField, value) != true)) {
                    this.PurposeDescriptionField = value;
                    this.RaisePropertyChanged("PurposeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int claimNumber {
            get {
                return this.claimNumberField;
            }
            set {
                if ((this.claimNumberField.Equals(value) != true)) {
                    this.claimNumberField = value;
                    this.RaisePropertyChanged("claimNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tax", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Tax : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConcedeAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ConcedeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> CourtDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourtDecisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OutLoanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferRegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransferUnicnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimNumber {
            get {
                return this.ClaimNumberField;
            }
            set {
                if ((this.ClaimNumberField.Equals(value) != true)) {
                    this.ClaimNumberField = value;
                    this.RaisePropertyChanged("ClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConcedeAddInf {
            get {
                return this.ConcedeAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ConcedeAddInfField, value) != true)) {
                    this.ConcedeAddInfField = value;
                    this.RaisePropertyChanged("ConcedeAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ConcedeAmount {
            get {
                return this.ConcedeAmountField;
            }
            set {
                if ((this.ConcedeAmountField.Equals(value) != true)) {
                    this.ConcedeAmountField = value;
                    this.RaisePropertyChanged("ConcedeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CourtDecision {
            get {
                return this.CourtDecisionField;
            }
            set {
                if ((this.CourtDecisionField.Equals(value) != true)) {
                    this.CourtDecisionField = value;
                    this.RaisePropertyChanged("CourtDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourtDecisionDate {
            get {
                return this.CourtDecisionDateField;
            }
            set {
                if ((this.CourtDecisionDateField.Equals(value) != true)) {
                    this.CourtDecisionDateField = value;
                    this.RaisePropertyChanged("CourtDecisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventNumber {
            get {
                return this.EventNumberField;
            }
            set {
                if ((this.EventNumberField.Equals(value) != true)) {
                    this.EventNumberField = value;
                    this.RaisePropertyChanged("EventNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedAmount {
            get {
                return this.MaturedAmountField;
            }
            set {
                if ((this.MaturedAmountField.Equals(value) != true)) {
                    this.MaturedAmountField = value;
                    this.RaisePropertyChanged("MaturedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OutLoanDate {
            get {
                return this.OutLoanDateField;
            }
            set {
                if ((this.OutLoanDateField.Equals(value) != true)) {
                    this.OutLoanDateField = value;
                    this.RaisePropertyChanged("OutLoanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferRegistrationDate {
            get {
                return this.TransferRegistrationDateField;
            }
            set {
                if ((this.TransferRegistrationDateField.Equals(value) != true)) {
                    this.TransferRegistrationDateField = value;
                    this.RaisePropertyChanged("TransferRegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransferUnicnumber {
            get {
                return this.TransferUnicnumberField;
            }
            set {
                if ((this.TransferUnicnumberField.Equals(value) != true)) {
                    this.TransferUnicnumberField = value;
                    this.RaisePropertyChanged("TransferUnicnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipRewardsStatusHistory", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class MembershipRewardsStatusHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeSetNumber {
            get {
                return this.ChangeSetNumberField;
            }
            set {
                if ((this.ChangeSetNumberField.Equals(value) != true)) {
                    this.ChangeSetNumberField = value;
                    this.RaisePropertyChanged("ChangeSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchInternationalTransfer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchInternationalTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BIKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeginRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentRUR6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermidateBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntermidateBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KPPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverSwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAccNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderOtherBankAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BIK {
            get {
                return this.BIKField;
            }
            set {
                if ((object.ReferenceEquals(this.BIKField, value) != true)) {
                    this.BIKField = value;
                    this.RaisePropertyChanged("BIK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeginRow {
            get {
                return this.BeginRowField;
            }
            set {
                if ((this.BeginRowField.Equals(value) != true)) {
                    this.BeginRowField = value;
                    this.RaisePropertyChanged("BeginRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrAccount {
            get {
                return this.CorrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrAccountField, value) != true)) {
                    this.CorrAccountField = value;
                    this.RaisePropertyChanged("CorrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfTransfer {
            get {
                return this.DateOfTransferField;
            }
            set {
                if ((this.DateOfTransferField.Equals(value) != true)) {
                    this.DateOfTransferField = value;
                    this.RaisePropertyChanged("DateOfTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPayment {
            get {
                return this.DescriptionForPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentField, value) != true)) {
                    this.DescriptionForPaymentField = value;
                    this.RaisePropertyChanged("DescriptionForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR1 {
            get {
                return this.DescriptionForPaymentRUR1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR1Field, value) != true)) {
                    this.DescriptionForPaymentRUR1Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR2 {
            get {
                return this.DescriptionForPaymentRUR2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR2Field, value) != true)) {
                    this.DescriptionForPaymentRUR2Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR3 {
            get {
                return this.DescriptionForPaymentRUR3Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR3Field, value) != true)) {
                    this.DescriptionForPaymentRUR3Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR4 {
            get {
                return this.DescriptionForPaymentRUR4Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR4Field, value) != true)) {
                    this.DescriptionForPaymentRUR4Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR5 {
            get {
                return this.DescriptionForPaymentRUR5Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR5Field, value) != true)) {
                    this.DescriptionForPaymentRUR5Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPaymentRUR6 {
            get {
                return this.DescriptionForPaymentRUR6Field;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentRUR6Field, value) != true)) {
                    this.DescriptionForPaymentRUR6Field = value;
                    this.RaisePropertyChanged("DescriptionForPaymentRUR6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndRow {
            get {
                return this.EndRowField;
            }
            set {
                if ((this.EndRowField.Equals(value) != true)) {
                    this.EndRowField = value;
                    this.RaisePropertyChanged("EndRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermidateBank {
            get {
                return this.IntermidateBankField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermidateBankField, value) != true)) {
                    this.IntermidateBankField = value;
                    this.RaisePropertyChanged("IntermidateBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntermidateBankSwift {
            get {
                return this.IntermidateBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.IntermidateBankSwiftField, value) != true)) {
                    this.IntermidateBankSwiftField = value;
                    this.RaisePropertyChanged("IntermidateBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPP {
            get {
                return this.KPPField;
            }
            set {
                if ((object.ReferenceEquals(this.KPPField, value) != true)) {
                    this.KPPField = value;
                    this.RaisePropertyChanged("KPP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAddInf {
            get {
                return this.ReceiverAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAddInfField, value) != true)) {
                    this.ReceiverAddInfField = value;
                    this.RaisePropertyChanged("ReceiverAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBank {
            get {
                return this.ReceiverBankField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankField, value) != true)) {
                    this.ReceiverBankField = value;
                    this.RaisePropertyChanged("ReceiverBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankAddInf {
            get {
                return this.ReceiverBankAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankAddInfField, value) != true)) {
                    this.ReceiverBankAddInfField = value;
                    this.RaisePropertyChanged("ReceiverBankAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankSwift {
            get {
                return this.ReceiverBankSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankSwiftField, value) != true)) {
                    this.ReceiverBankSwiftField = value;
                    this.RaisePropertyChanged("ReceiverBankSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverName {
            get {
                return this.ReceiverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverNameField, value) != true)) {
                    this.ReceiverNameField = value;
                    this.RaisePropertyChanged("ReceiverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverSwift {
            get {
                return this.ReceiverSwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverSwiftField, value) != true)) {
                    this.ReceiverSwiftField = value;
                    this.RaisePropertyChanged("ReceiverSwift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverType {
            get {
                return this.ReceiverTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverTypeField, value) != true)) {
                    this.ReceiverTypeField = value;
                    this.RaisePropertyChanged("ReceiverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAccNumber {
            get {
                return this.SenderAccNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAccNumberField, value) != true)) {
                    this.SenderAccNumberField = value;
                    this.RaisePropertyChanged("SenderAccNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAddress {
            get {
                return this.SenderAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAddressField, value) != true)) {
                    this.SenderAddressField = value;
                    this.RaisePropertyChanged("SenderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderName {
            get {
                return this.SenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderNameField, value) != true)) {
                    this.SenderNameField = value;
                    this.RaisePropertyChanged("SenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderOtherBankAccount {
            get {
                return this.SenderOtherBankAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderOtherBankAccountField, value) != true)) {
                    this.SenderOtherBankAccountField = value;
                    this.RaisePropertyChanged("SenderOtherBankAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPhone {
            get {
                return this.SenderPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPhoneField, value) != true)) {
                    this.SenderPhoneField = value;
                    this.RaisePropertyChanged("SenderPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchReceivedTransfer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchReceivedTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AcbaFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ChargeWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProfitPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AcbaFee {
            get {
                return this.AcbaFeeField;
            }
            set {
                if ((this.AcbaFeeField.Equals(value) != true)) {
                    this.AcbaFeeField = value;
                    this.RaisePropertyChanged("AcbaFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ChargeW {
            get {
                return this.ChargeWField;
            }
            set {
                if ((this.ChargeWField.Equals(value) != true)) {
                    this.ChargeWField = value;
                    this.RaisePropertyChanged("ChargeW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTransfer {
            get {
                return this.DateTransferField;
            }
            set {
                if ((this.DateTransferField.Equals(value) != true)) {
                    this.DateTransferField = value;
                    this.RaisePropertyChanged("DateTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProfitPercent {
            get {
                return this.ProfitPercentField;
            }
            set {
                if ((this.ProfitPercentField.Equals(value) != true)) {
                    this.ProfitPercentField = value;
                    this.RaisePropertyChanged("ProfitPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateW {
            get {
                return this.RateWField;
            }
            set {
                if ((this.RateWField.Equals(value) != true)) {
                    this.RateWField = value;
                    this.RaisePropertyChanged("RateW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAddress {
            get {
                return this.ReceiverAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAddressField, value) != true)) {
                    this.ReceiverAddressField = value;
                    this.RaisePropertyChanged("ReceiverAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverName {
            get {
                return this.ReceiverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverNameField, value) != true)) {
                    this.ReceiverNameField = value;
                    this.RaisePropertyChanged("ReceiverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverPassport {
            get {
                return this.ReceiverPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPassportField, value) != true)) {
                    this.ReceiverPassportField = value;
                    this.RaisePropertyChanged("ReceiverPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverPhone {
            get {
                return this.ReceiverPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverPhoneField, value) != true)) {
                    this.ReceiverPhoneField = value;
                    this.RaisePropertyChanged("ReceiverPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAddress {
            get {
                return this.SenderAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAddressField, value) != true)) {
                    this.SenderAddressField = value;
                    this.RaisePropertyChanged("SenderAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderName {
            get {
                return this.SenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderNameField, value) != true)) {
                    this.SenderNameField = value;
                    this.RaisePropertyChanged("SenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPhone {
            get {
                return this.SenderPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPhoneField, value) != true)) {
                    this.SenderPhoneField = value;
                    this.RaisePropertyChanged("SenderPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferType {
            get {
                return this.TransferTypeField;
            }
            set {
                if ((this.TransferTypeField.Equals(value) != true)) {
                    this.TransferTypeField = value;
                    this.RaisePropertyChanged("TransferType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchTransferBankMail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchTransferBankMail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeginRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsArchiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsBudgetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderRegCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TransferGroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeginRow {
            get {
                return this.BeginRowField;
            }
            set {
                if ((this.BeginRowField.Equals(value) != true)) {
                    this.BeginRowField = value;
                    this.RaisePropertyChanged("BeginRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfTransfer {
            get {
                return this.DateOfTransferField;
            }
            set {
                if ((this.DateOfTransferField.Equals(value) != true)) {
                    this.DateOfTransferField = value;
                    this.RaisePropertyChanged("DateOfTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionForPayment {
            get {
                return this.DescriptionForPaymentField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionForPaymentField, value) != true)) {
                    this.DescriptionForPaymentField = value;
                    this.RaisePropertyChanged("DescriptionForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndRow {
            get {
                return this.EndRowField;
            }
            set {
                if ((this.EndRowField.Equals(value) != true)) {
                    this.EndRowField = value;
                    this.RaisePropertyChanged("EndRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsArchive {
            get {
                return this.IsArchiveField;
            }
            set {
                if ((this.IsArchiveField.Equals(value) != true)) {
                    this.IsArchiveField = value;
                    this.RaisePropertyChanged("IsArchive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsBudget {
            get {
                return this.IsBudgetField;
            }
            set {
                if ((this.IsBudgetField.Equals(value) != true)) {
                    this.IsBudgetField = value;
                    this.RaisePropertyChanged("IsBudget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverAccount {
            get {
                return this.ReceiverAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverAccountField, value) != true)) {
                    this.ReceiverAccountField = value;
                    this.RaisePropertyChanged("ReceiverAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBank {
            get {
                return this.ReceiverBankField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankField, value) != true)) {
                    this.ReceiverBankField = value;
                    this.RaisePropertyChanged("ReceiverBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverName {
            get {
                return this.ReceiverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverNameField, value) != true)) {
                    this.ReceiverNameField = value;
                    this.RaisePropertyChanged("ReceiverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderAccount {
            get {
                return this.SenderAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderAccountField, value) != true)) {
                    this.SenderAccountField = value;
                    this.RaisePropertyChanged("SenderAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderRegCode {
            get {
                return this.SenderRegCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderRegCodeField, value) != true)) {
                    this.SenderRegCodeField = value;
                    this.RaisePropertyChanged("SenderRegCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort TransferGroup {
            get {
                return this.TransferGroupField;
            }
            set {
                if ((this.TransferGroupField.Equals(value) != true)) {
                    this.TransferGroupField = value;
                    this.RaisePropertyChanged("TransferGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchBudgetAccount", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchBudgetAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeginRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsEntrepreneurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsLegalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsPhysicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeginRow {
            get {
                return this.BeginRowField;
            }
            set {
                if ((this.BeginRowField.Equals(value) != true)) {
                    this.BeginRowField = value;
                    this.RaisePropertyChanged("BeginRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeField, value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndRow {
            get {
                return this.EndRowField;
            }
            set {
                if ((this.EndRowField.Equals(value) != true)) {
                    this.EndRowField = value;
                    this.RaisePropertyChanged("EndRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsEntrepreneur {
            get {
                return this.IsEntrepreneurField;
            }
            set {
                if ((object.ReferenceEquals(this.IsEntrepreneurField, value) != true)) {
                    this.IsEntrepreneurField = value;
                    this.RaisePropertyChanged("IsEntrepreneur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsLegal {
            get {
                return this.IsLegalField;
            }
            set {
                if ((object.ReferenceEquals(this.IsLegalField, value) != true)) {
                    this.IsLegalField = value;
                    this.RaisePropertyChanged("IsLegal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsPhysical {
            get {
                return this.IsPhysicalField;
            }
            set {
                if ((object.ReferenceEquals(this.IsPhysicalField, value) != true)) {
                    this.IsPhysicalField = value;
                    this.RaisePropertyChanged("IsPhysical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soc {
            get {
                return this.SocField;
            }
            set {
                if ((object.ReferenceEquals(this.SocField, value) != true)) {
                    this.SocField = value;
                    this.RaisePropertyChanged("Soc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccessForCustomer", Namespace="http://schemas.datacontract.org/2004/07/InformationSecurityLibrary")]
    [System.SerializableAttribute()]
    public partial class UserAccessForCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CustomerAccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCustomerAccessibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AccessibleAccountsGroups> ListOfAccessibleAccountsGroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AccessibleActions> ListOfAccessibleActionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AccessibleProducts> ListOfAccessibleProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CustomerAccessLevel {
            get {
                return this.CustomerAccessLevelField;
            }
            set {
                if ((this.CustomerAccessLevelField.Equals(value) != true)) {
                    this.CustomerAccessLevelField = value;
                    this.RaisePropertyChanged("CustomerAccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustomerAccessible {
            get {
                return this.IsCustomerAccessibleField;
            }
            set {
                if ((this.IsCustomerAccessibleField.Equals(value) != true)) {
                    this.IsCustomerAccessibleField = value;
                    this.RaisePropertyChanged("IsCustomerAccessible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AccessibleAccountsGroups> ListOfAccessibleAccountsGroups {
            get {
                return this.ListOfAccessibleAccountsGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfAccessibleAccountsGroupsField, value) != true)) {
                    this.ListOfAccessibleAccountsGroupsField = value;
                    this.RaisePropertyChanged("ListOfAccessibleAccountsGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AccessibleActions> ListOfAccessibleActions {
            get {
                return this.ListOfAccessibleActionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfAccessibleActionsField, value) != true)) {
                    this.ListOfAccessibleActionsField = value;
                    this.RaisePropertyChanged("ListOfAccessibleActions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AccessibleProducts> ListOfAccessibleProducts {
            get {
                return this.ListOfAccessibleProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfAccessibleProductsField, value) != true)) {
                    this.ListOfAccessibleProductsField = value;
                    this.RaisePropertyChanged("ListOfAccessibleProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessibleAccountsGroups", Namespace="http://schemas.datacontract.org/2004/07/InformationSecurityLibrary")]
    [System.SerializableAttribute()]
    public partial class AccessibleAccountsGroups : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountGroupDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountGroup {
            get {
                return this.AccountGroupField;
            }
            set {
                if ((this.AccountGroupField.Equals(value) != true)) {
                    this.AccountGroupField = value;
                    this.RaisePropertyChanged("AccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountGroupDescription {
            get {
                return this.AccountGroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountGroupDescriptionField, value) != true)) {
                    this.AccountGroupDescriptionField = value;
                    this.RaisePropertyChanged("AccountGroupDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessibleActions", Namespace="http://schemas.datacontract.org/2004/07/InformationSecurityLibrary")]
    [System.SerializableAttribute()]
    public partial class AccessibleActions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionDescriptionENField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionDescription {
            get {
                return this.ActionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionDescriptionField, value) != true)) {
                    this.ActionDescriptionField = value;
                    this.RaisePropertyChanged("ActionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionDescriptionEN {
            get {
                return this.ActionDescriptionENField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionDescriptionENField, value) != true)) {
                    this.ActionDescriptionENField = value;
                    this.RaisePropertyChanged("ActionDescriptionEN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessibleProducts", Namespace="http://schemas.datacontract.org/2004/07/InformationSecurityLibrary")]
    [System.SerializableAttribute()]
    public partial class AccessibleProducts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescription {
            get {
                return this.ProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true)) {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCashBook", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchCashBook : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FillialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegisteredUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RowTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SearchUserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FillialCode {
            get {
                return this.FillialCodeField;
            }
            set {
                if ((this.FillialCodeField.Equals(value) != true)) {
                    this.FillialCodeField = value;
                    this.RaisePropertyChanged("FillialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OperationType {
            get {
                return this.OperationTypeField;
            }
            set {
                if ((this.OperationTypeField.Equals(value) != true)) {
                    this.OperationTypeField = value;
                    this.RaisePropertyChanged("OperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegisteredUserID {
            get {
                return this.RegisteredUserIDField;
            }
            set {
                if ((this.RegisteredUserIDField.Equals(value) != true)) {
                    this.RegisteredUserIDField = value;
                    this.RaisePropertyChanged("RegisteredUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RowType {
            get {
                return this.RowTypeField;
            }
            set {
                if ((this.RowTypeField.Equals(value) != true)) {
                    this.RowTypeField = value;
                    this.RaisePropertyChanged("RowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SearchUserID {
            get {
                return this.SearchUserIDField;
            }
            set {
                if ((this.SearchUserIDField.Equals(value) != true)) {
                    this.SearchUserIDField = value;
                    this.RaisePropertyChanged("SearchUserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerMainData", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class CustomerMainData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CustomerAddress> AddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDescriptionEngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CustomerEmail> EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IdentityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdateAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CustomerPhone> PhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegisrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResidenceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CustomerWebSite> WebSitesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CustomerAddress> Addresses {
            get {
                return this.AddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesField, value) != true)) {
                    this.AddressesField = value;
                    this.RaisePropertyChanged("Addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDescription {
            get {
                return this.CustomerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDescriptionField, value) != true)) {
                    this.CustomerDescriptionField = value;
                    this.RaisePropertyChanged("CustomerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDescriptionEng {
            get {
                return this.CustomerDescriptionEngField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDescriptionEngField, value) != true)) {
                    this.CustomerDescriptionEngField = value;
                    this.RaisePropertyChanged("CustomerDescriptionEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerType {
            get {
                return this.CustomerTypeField;
            }
            set {
                if ((this.CustomerTypeField.Equals(value) != true)) {
                    this.CustomerTypeField = value;
                    this.RaisePropertyChanged("CustomerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerTypeDescription {
            get {
                return this.CustomerTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTypeDescriptionField, value) != true)) {
                    this.CustomerTypeDescriptionField = value;
                    this.RaisePropertyChanged("CustomerTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CustomerEmail> Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint IdentityId {
            get {
                return this.IdentityIdField;
            }
            set {
                if ((this.IdentityIdField.Equals(value) != true)) {
                    this.IdentityIdField = value;
                    this.RaisePropertyChanged("IdentityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdateAddInf {
            get {
                return this.LastUpdateAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdateAddInfField, value) != true)) {
                    this.LastUpdateAddInfField = value;
                    this.RaisePropertyChanged("LastUpdateAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CustomerPhone> Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisrationDate {
            get {
                return this.RegisrationDateField;
            }
            set {
                if ((this.RegisrationDateField.Equals(value) != true)) {
                    this.RegisrationDateField = value;
                    this.RaisePropertyChanged("RegisrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResidenceType {
            get {
                return this.ResidenceTypeField;
            }
            set {
                if ((this.ResidenceTypeField.Equals(value) != true)) {
                    this.ResidenceTypeField = value;
                    this.RaisePropertyChanged("ResidenceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialNumber {
            get {
                return this.SocialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialNumberField, value) != true)) {
                    this.SocialNumberField = value;
                    this.RaisePropertyChanged("SocialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CustomerWebSite> WebSites {
            get {
                return this.WebSitesField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSitesField, value) != true)) {
                    this.WebSitesField = value;
                    this.RaisePropertyChanged("WebSites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerAddress", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class CustomerAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Address addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue addressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue priorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Address address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue addressType {
            get {
                return this.addressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.addressTypeField, value) != true)) {
                    this.addressTypeField = value;
                    this.RaisePropertyChanged("addressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue priority {
            get {
                return this.priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.priorityField, value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerEmail", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class CustomerEmail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Email emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue emailTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue qualityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Email email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue emailType {
            get {
                return this.emailTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.emailTypeField, value) != true)) {
                    this.emailTypeField = value;
                    this.RaisePropertyChanged("emailType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue priority {
            get {
                return this.priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.priorityField, value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue quality {
            get {
                return this.qualityField;
            }
            set {
                if ((object.ReferenceEquals(this.qualityField, value) != true)) {
                    this.qualityField = value;
                    this.RaisePropertyChanged("quality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerPhone", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class CustomerPhone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Phone phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue phoneTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue priorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string addInf {
            get {
                return this.addInfField;
            }
            set {
                if ((object.ReferenceEquals(this.addInfField, value) != true)) {
                    this.addInfField = value;
                    this.RaisePropertyChanged("addInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Phone phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue phoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneTypeField, value) != true)) {
                    this.phoneTypeField = value;
                    this.RaisePropertyChanged("phoneType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue priority {
            get {
                return this.priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.priorityField, value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerWebSite", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class CustomerWebSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue qualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.WebSite webSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue webSiteTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue priority {
            get {
                return this.priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.priorityField, value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue quality {
            get {
                return this.qualityField;
            }
            set {
                if ((object.ReferenceEquals(this.qualityField, value) != true)) {
                    this.qualityField = value;
                    this.RaisePropertyChanged("quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.WebSite webSite {
            get {
                return this.webSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.webSiteField, value) != true)) {
                    this.webSiteField = value;
                    this.RaisePropertyChanged("webSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue webSiteType {
            get {
                return this.webSiteTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.webSiteTypeField, value) != true)) {
                    this.webSiteTypeField = value;
                    this.RaisePropertyChanged("webSiteType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue BuildingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.StringKeyValue CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.IntKeyValue StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.KeyValue TownVillageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fullAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Appartment {
            get {
                return this.AppartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AppartmentField, value) != true)) {
                    this.AppartmentField = value;
                    this.RaisePropertyChanged("Appartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue Building {
            get {
                return this.BuildingField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingField, value) != true)) {
                    this.BuildingField = value;
                    this.RaisePropertyChanged("Building");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.StringKeyValue Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string House {
            get {
                return this.HouseField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseField, value) != true)) {
                    this.HouseField = value;
                    this.RaisePropertyChanged("House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.IntKeyValue Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.KeyValue TownVillage {
            get {
                return this.TownVillageField;
            }
            set {
                if ((object.ReferenceEquals(this.TownVillageField, value) != true)) {
                    this.TownVillageField = value;
                    this.RaisePropertyChanged("TownVillage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fullAddress {
            get {
                return this.fullAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.fullAddressField, value) != true)) {
                    this.fullAddressField = value;
                    this.RaisePropertyChanged("fullAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValue", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class KeyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short keyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringKeyValue", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class StringKeyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string keyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntKeyValue", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class IntKeyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int keyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Email", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class Email : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.emailAddressField, value) != true)) {
                    this.emailAddressField = value;
                    this.RaisePropertyChanged("emailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phone", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class Phone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string areaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.areaCodeField, value) != true)) {
                    this.areaCodeField = value;
                    this.RaisePropertyChanged("areaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.countryCodeField, value) != true)) {
                    this.countryCodeField = value;
                    this.RaisePropertyChanged("countryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneNumberField, value) != true)) {
                    this.phoneNumberField = value;
                    this.RaisePropertyChanged("phoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebSite", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class WebSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string webSiteUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string webSiteUrl {
            get {
                return this.webSiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.webSiteUrlField, value) != true)) {
                    this.webSiteUrlField = value;
                    this.RaisePropertyChanged("webSiteUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchLeasingCustomer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchLeasingCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LeasingCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNumberField, value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LeasingCustomerNumber {
            get {
                return this.LeasingCustomerNumberField;
            }
            set {
                if ((this.LeasingCustomerNumberField.Equals(value) != true)) {
                    this.LeasingCustomerNumberField = value;
                    this.RaisePropertyChanged("LeasingCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportNumber {
            get {
                return this.PassportNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportNumberField, value) != true)) {
                    this.PassportNumberField = value;
                    this.RaisePropertyChanged("PassportNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchLeasingLoan", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchLeasingLoan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LeasingCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNumberField, value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LeasingCustomerNumber {
            get {
                return this.LeasingCustomerNumberField;
            }
            set {
                if ((this.LeasingCustomerNumberField.Equals(value) != true)) {
                    this.LeasingCustomerNumberField = value;
                    this.RaisePropertyChanged("LeasingCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportNumber {
            get {
                return this.PassportNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportNumberField, value) != true)) {
                    this.PassportNumberField = value;
                    this.RaisePropertyChanged("PassportNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountClosingHistory", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountClosingHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong HBDocIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong HBDocId {
            get {
                return this.HBDocIdField;
            }
            set {
                if ((this.HBDocIdField.Equals(value) != true)) {
                    this.HBDocIdField = value;
                    this.RaisePropertyChanged("HBDocId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((this.ReasonTypeField.Equals(value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleViolationResponse", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class VehicleViolationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FineAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PayableAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PayedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PenaltyAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoliceAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RequestedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ResponseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehiclePassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ViolationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FineAmount {
            get {
                return this.FineAmountField;
            }
            set {
                if ((this.FineAmountField.Equals(value) != true)) {
                    this.FineAmountField = value;
                    this.RaisePropertyChanged("FineAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PayableAmount {
            get {
                return this.PayableAmountField;
            }
            set {
                if ((this.PayableAmountField.Equals(value) != true)) {
                    this.PayableAmountField = value;
                    this.RaisePropertyChanged("PayableAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PayedAmount {
            get {
                return this.PayedAmountField;
            }
            set {
                if ((this.PayedAmountField.Equals(value) != true)) {
                    this.PayedAmountField = value;
                    this.RaisePropertyChanged("PayedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PenaltyAmount {
            get {
                return this.PenaltyAmountField;
            }
            set {
                if ((this.PenaltyAmountField.Equals(value) != true)) {
                    this.PenaltyAmountField = value;
                    this.RaisePropertyChanged("PenaltyAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoliceAccount {
            get {
                return this.PoliceAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PoliceAccountField, value) != true)) {
                    this.PoliceAccountField = value;
                    this.RaisePropertyChanged("PoliceAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RequestedAmount {
            get {
                return this.RequestedAmountField;
            }
            set {
                if ((this.RequestedAmountField.Equals(value) != true)) {
                    this.RequestedAmountField = value;
                    this.RaisePropertyChanged("RequestedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ResponseId {
            get {
                return this.ResponseIdField;
            }
            set {
                if ((this.ResponseIdField.Equals(value) != true)) {
                    this.ResponseIdField = value;
                    this.RaisePropertyChanged("ResponseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModel {
            get {
                return this.VehicleModelField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelField, value) != true)) {
                    this.VehicleModelField = value;
                    this.RaisePropertyChanged("VehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleNumber {
            get {
                return this.VehicleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleNumberField, value) != true)) {
                    this.VehicleNumberField = value;
                    this.RaisePropertyChanged("VehicleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehiclePassport {
            get {
                return this.VehiclePassportField;
            }
            set {
                if ((object.ReferenceEquals(this.VehiclePassportField, value) != true)) {
                    this.VehiclePassportField = value;
                    this.RaisePropertyChanged("VehiclePassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ViolationDate {
            get {
                return this.ViolationDateField;
            }
            set {
                if ((this.ViolationDateField.Equals(value) != true)) {
                    this.ViolationDateField = value;
                    this.RaisePropertyChanged("ViolationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationNumber {
            get {
                return this.ViolationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationNumberField, value) != true)) {
                    this.ViolationNumberField = value;
                    this.RaisePropertyChanged("ViolationNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DahkDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DahkDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InquestCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InquestNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReleaseRemainingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SetDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShowPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionType {
            get {
                return this.ActionTypeField;
            }
            set {
                if ((this.ActionTypeField.Equals(value) != true)) {
                    this.ActionTypeField = value;
                    this.RaisePropertyChanged("ActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionTypeDescription {
            get {
                return this.ActionTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTypeDescriptionField, value) != true)) {
                    this.ActionTypeDescriptionField = value;
                    this.RaisePropertyChanged("ActionTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InquestCode {
            get {
                return this.InquestCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InquestCodeField, value) != true)) {
                    this.InquestCodeField = value;
                    this.RaisePropertyChanged("InquestCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InquestNumber {
            get {
                return this.InquestNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InquestNumberField, value) != true)) {
                    this.InquestNumberField = value;
                    this.RaisePropertyChanged("InquestNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReleaseRemaining {
            get {
                return this.ReleaseRemainingField;
            }
            set {
                if ((this.ReleaseRemainingField.Equals(value) != true)) {
                    this.ReleaseRemainingField = value;
                    this.RaisePropertyChanged("ReleaseRemaining");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestNumber {
            get {
                return this.RequestNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestNumberField, value) != true)) {
                    this.RequestNumberField = value;
                    this.RaisePropertyChanged("RequestNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SetDate {
            get {
                return this.SetDateField;
            }
            set {
                if ((this.SetDateField.Equals(value) != true)) {
                    this.SetDateField = value;
                    this.RaisePropertyChanged("SetDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShowPriority {
            get {
                return this.ShowPriorityField;
            }
            set {
                if ((this.ShowPriorityField.Equals(value) != true)) {
                    this.ShowPriorityField = value;
                    this.RaisePropertyChanged("ShowPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalDebt {
            get {
                return this.TotalDebtField;
            }
            set {
                if ((this.TotalDebtField.Equals(value) != true)) {
                    this.TotalDebtField = value;
                    this.RaisePropertyChanged("TotalDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProblemLoanCalculationsDetail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ProblemLoanCalculationsDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClaimCalculationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ClaimCalculationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClaimNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentRateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DebtAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InpaiedRestOfRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDateOfRateCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OverdueCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PenaltyAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PenaltyRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClaimCalculationDate {
            get {
                return this.ClaimCalculationDateField;
            }
            set {
                if ((this.ClaimCalculationDateField.Equals(value) != true)) {
                    this.ClaimCalculationDateField = value;
                    this.RaisePropertyChanged("ClaimCalculationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ClaimCalculationNumber {
            get {
                return this.ClaimCalculationNumberField;
            }
            set {
                if ((this.ClaimCalculationNumberField.Equals(value) != true)) {
                    this.ClaimCalculationNumberField = value;
                    this.RaisePropertyChanged("ClaimCalculationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClaimNumber {
            get {
                return this.ClaimNumberField;
            }
            set {
                if ((this.ClaimNumberField.Equals(value) != true)) {
                    this.ClaimNumberField = value;
                    this.RaisePropertyChanged("ClaimNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Course {
            get {
                return this.CourseField;
            }
            set {
                if ((this.CourseField.Equals(value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentCapital {
            get {
                return this.CurrentCapitalField;
            }
            set {
                if ((this.CurrentCapitalField.Equals(value) != true)) {
                    this.CurrentCapitalField = value;
                    this.RaisePropertyChanged("CurrentCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentFee {
            get {
                return this.CurrentFeeField;
            }
            set {
                if ((this.CurrentFeeField.Equals(value) != true)) {
                    this.CurrentFeeField = value;
                    this.RaisePropertyChanged("CurrentFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentRateValue {
            get {
                return this.CurrentRateValueField;
            }
            set {
                if ((this.CurrentRateValueField.Equals(value) != true)) {
                    this.CurrentRateValueField = value;
                    this.RaisePropertyChanged("CurrentRateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DebtAmount {
            get {
                return this.DebtAmountField;
            }
            set {
                if ((this.DebtAmountField.Equals(value) != true)) {
                    this.DebtAmountField = value;
                    this.RaisePropertyChanged("DebtAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventNumber {
            get {
                return this.EventNumberField;
            }
            set {
                if ((this.EventNumberField.Equals(value) != true)) {
                    this.EventNumberField = value;
                    this.RaisePropertyChanged("EventNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InpaiedRestOfRate {
            get {
                return this.InpaiedRestOfRateField;
            }
            set {
                if ((this.InpaiedRestOfRateField.Equals(value) != true)) {
                    this.InpaiedRestOfRateField = value;
                    this.RaisePropertyChanged("InpaiedRestOfRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDateOfRateCalculation {
            get {
                return this.LastDateOfRateCalculationField;
            }
            set {
                if ((this.LastDateOfRateCalculationField.Equals(value) != true)) {
                    this.LastDateOfRateCalculationField = value;
                    this.RaisePropertyChanged("LastDateOfRateCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OverdueCapital {
            get {
                return this.OverdueCapitalField;
            }
            set {
                if ((this.OverdueCapitalField.Equals(value) != true)) {
                    this.OverdueCapitalField = value;
                    this.RaisePropertyChanged("OverdueCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PenaltyAdd {
            get {
                return this.PenaltyAddField;
            }
            set {
                if ((this.PenaltyAddField.Equals(value) != true)) {
                    this.PenaltyAddField = value;
                    this.RaisePropertyChanged("PenaltyAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PenaltyRate {
            get {
                return this.PenaltyRateField;
            }
            set {
                if ((this.PenaltyRateField.Equals(value) != true)) {
                    this.PenaltyRateField = value;
                    this.RaisePropertyChanged("PenaltyRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DahkEmployer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DahkEmployer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InquestCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InquestCode {
            get {
                return this.InquestCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InquestCodeField, value) != true)) {
                    this.InquestCodeField = value;
                    this.RaisePropertyChanged("InquestCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestNumber {
            get {
                return this.RequestNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestNumberField, value) != true)) {
                    this.RequestNumberField = value;
                    this.RaisePropertyChanged("RequestNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DahkAmountTotals", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DahkAmountTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockageTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BlockedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreezeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreezeTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UnBlockedAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockageTypeDescription {
            get {
                return this.BlockageTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockageTypeDescriptionField, value) != true)) {
                    this.BlockageTypeDescriptionField = value;
                    this.RaisePropertyChanged("BlockageTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BlockedAmount {
            get {
                return this.BlockedAmountField;
            }
            set {
                if ((this.BlockedAmountField.Equals(value) != true)) {
                    this.BlockedAmountField = value;
                    this.RaisePropertyChanged("BlockedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FreezeType {
            get {
                return this.FreezeTypeField;
            }
            set {
                if ((this.FreezeTypeField.Equals(value) != true)) {
                    this.FreezeTypeField = value;
                    this.RaisePropertyChanged("FreezeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreezeTypeDescription {
            get {
                return this.FreezeTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezeTypeDescriptionField, value) != true)) {
                    this.FreezeTypeDescriptionField = value;
                    this.RaisePropertyChanged("FreezeTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float UnBlockedAmount {
            get {
                return this.UnBlockedAmountField;
            }
            set {
                if ((this.UnBlockedAmountField.Equals(value) != true)) {
                    this.UnBlockedAmountField = value;
                    this.RaisePropertyChanged("UnBlockedAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Languages", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum Languages : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        hy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        eng = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodsDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class GoodsDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CashPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GoodAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GoodPrepaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PrepaidPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShopNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalGoodAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CashPrice {
            get {
                return this.CashPriceField;
            }
            set {
                if ((this.CashPriceField.Equals(value) != true)) {
                    this.CashPriceField = value;
                    this.RaisePropertyChanged("CashPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodAddress {
            get {
                return this.GoodAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodAddressField, value) != true)) {
                    this.GoodAddressField = value;
                    this.RaisePropertyChanged("GoodAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GoodAmount {
            get {
                return this.GoodAmountField;
            }
            set {
                if ((this.GoodAmountField.Equals(value) != true)) {
                    this.GoodAmountField = value;
                    this.RaisePropertyChanged("GoodAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodCount {
            get {
                return this.GoodCountField;
            }
            set {
                if ((this.GoodCountField.Equals(value) != true)) {
                    this.GoodCountField = value;
                    this.RaisePropertyChanged("GoodCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodName {
            get {
                return this.GoodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodNameField, value) != true)) {
                    this.GoodNameField = value;
                    this.RaisePropertyChanged("GoodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GoodPrepaid {
            get {
                return this.GoodPrepaidField;
            }
            set {
                if ((this.GoodPrepaidField.Equals(value) != true)) {
                    this.GoodPrepaidField = value;
                    this.RaisePropertyChanged("GoodPrepaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PrepaidPercent {
            get {
                return this.PrepaidPercentField;
            }
            set {
                if ((this.PrepaidPercentField.Equals(value) != true)) {
                    this.PrepaidPercentField = value;
                    this.RaisePropertyChanged("PrepaidPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShopName {
            get {
                return this.ShopNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShopNameField, value) != true)) {
                    this.ShopNameField = value;
                    this.RaisePropertyChanged("ShopName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalGoodAmount {
            get {
                return this.TotalGoodAmountField;
            }
            set {
                if ((this.TotalGoodAmountField.Equals(value) != true)) {
                    this.TotalGoodAmountField = value;
                    this.RaisePropertyChanged("TotalGoodAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFlowDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountFlowDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BallanceAMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BallanceInCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CreditAmountAMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CreditInCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DebitAmountAMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DebitInCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitiativeBallanceAMDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitiativeBallanceCurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BallanceAMD {
            get {
                return this.BallanceAMDField;
            }
            set {
                if ((this.BallanceAMDField.Equals(value) != true)) {
                    this.BallanceAMDField = value;
                    this.RaisePropertyChanged("BallanceAMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BallanceInCurrency {
            get {
                return this.BallanceInCurrencyField;
            }
            set {
                if ((this.BallanceInCurrencyField.Equals(value) != true)) {
                    this.BallanceInCurrencyField = value;
                    this.RaisePropertyChanged("BallanceInCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CreditAmountAMD {
            get {
                return this.CreditAmountAMDField;
            }
            set {
                if ((this.CreditAmountAMDField.Equals(value) != true)) {
                    this.CreditAmountAMDField = value;
                    this.RaisePropertyChanged("CreditAmountAMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CreditInCurrency {
            get {
                return this.CreditInCurrencyField;
            }
            set {
                if ((this.CreditInCurrencyField.Equals(value) != true)) {
                    this.CreditInCurrencyField = value;
                    this.RaisePropertyChanged("CreditInCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DebitAmountAMD {
            get {
                return this.DebitAmountAMDField;
            }
            set {
                if ((this.DebitAmountAMDField.Equals(value) != true)) {
                    this.DebitAmountAMDField = value;
                    this.RaisePropertyChanged("DebitAmountAMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DebitInCurrency {
            get {
                return this.DebitInCurrencyField;
            }
            set {
                if ((this.DebitInCurrencyField.Equals(value) != true)) {
                    this.DebitInCurrencyField = value;
                    this.RaisePropertyChanged("DebitInCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitiativeBallanceAMD {
            get {
                return this.InitiativeBallanceAMDField;
            }
            set {
                if ((this.InitiativeBallanceAMDField.Equals(value) != true)) {
                    this.InitiativeBallanceAMDField = value;
                    this.RaisePropertyChanged("InitiativeBallanceAMD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitiativeBallanceCurrency {
            get {
                return this.InitiativeBallanceCurrencyField;
            }
            set {
                if ((this.InitiativeBallanceCurrencyField.Equals(value) != true)) {
                    this.InitiativeBallanceCurrencyField = value;
                    this.RaisePropertyChanged("InitiativeBallanceCurrency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfunsignedLongdouble", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfunsignedLongdouble : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ulong keyField;
        
        private double valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ulong key {
            get {
                return this.keyField;
            }
            set {
                if ((this.keyField.Equals(value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferCallContract", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferCallContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CardValidationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ContractFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContractIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CreditLineQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MotherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RelatedOfficeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountDescription {
            get {
                return this.AccountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDescriptionField, value) != true)) {
                    this.AccountDescriptionField = value;
                    this.RaisePropertyChanged("AccountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardPhone {
            get {
                return this.CardPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CardPhoneField, value) != true)) {
                    this.CardPhoneField = value;
                    this.RaisePropertyChanged("CardPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CardValidationDate {
            get {
                return this.CardValidationDateField;
            }
            set {
                if ((this.CardValidationDateField.Equals(value) != true)) {
                    this.CardValidationDateField = value;
                    this.RaisePropertyChanged("CardValidationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ContractFilialCode {
            get {
                return this.ContractFilialCodeField;
            }
            set {
                if ((this.ContractFilialCodeField.Equals(value) != true)) {
                    this.ContractFilialCodeField = value;
                    this.RaisePropertyChanged("ContractFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContractId {
            get {
                return this.ContractIdField;
            }
            set {
                if ((this.ContractIdField.Equals(value) != true)) {
                    this.ContractIdField = value;
                    this.RaisePropertyChanged("ContractId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractPassword {
            get {
                return this.ContractPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractPasswordField, value) != true)) {
                    this.ContractPasswordField = value;
                    this.RaisePropertyChanged("ContractPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CreditLineQuality {
            get {
                return this.CreditLineQualityField;
            }
            set {
                if ((this.CreditLineQualityField.Equals(value) != true)) {
                    this.CreditLineQualityField = value;
                    this.RaisePropertyChanged("CreditLineQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotherName {
            get {
                return this.MotherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MotherNameField, value) != true)) {
                    this.MotherNameField = value;
                    this.RaisePropertyChanged("MotherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelatedOfficeNumber {
            get {
                return this.RelatedOfficeNumberField;
            }
            set {
                if ((this.RelatedOfficeNumberField.Equals(value) != true)) {
                    this.RelatedOfficeNumberField = value;
                    this.RaisePropertyChanged("RelatedOfficeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfstringstring", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfstringstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string m_Item1Field;
        
        private string m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item1Field, value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item2Field, value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedCustomer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingService")]
    [System.SerializableAttribute()]
    public partial class AuthorizedCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ApprovementSchemeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DailyTransactionsLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayLimitToAnothersAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayLimitToOwnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OneTransactionLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OneTransactionLimitToAnothersAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OneTransactionLimitToOwnAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeOfClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ApprovementScheme {
            get {
                return this.ApprovementSchemeField;
            }
            set {
                if ((this.ApprovementSchemeField.Equals(value) != true)) {
                    this.ApprovementSchemeField = value;
                    this.RaisePropertyChanged("ApprovementScheme");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((this.BranchCodeField.Equals(value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DailyTransactionsLimit {
            get {
                return this.DailyTransactionsLimitField;
            }
            set {
                if ((this.DailyTransactionsLimitField.Equals(value) != true)) {
                    this.DailyTransactionsLimitField = value;
                    this.RaisePropertyChanged("DailyTransactionsLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayLimitToAnothersAccount {
            get {
                return this.DayLimitToAnothersAccountField;
            }
            set {
                if ((this.DayLimitToAnothersAccountField.Equals(value) != true)) {
                    this.DayLimitToAnothersAccountField = value;
                    this.RaisePropertyChanged("DayLimitToAnothersAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayLimitToOwnAccount {
            get {
                return this.DayLimitToOwnAccountField;
            }
            set {
                if ((this.DayLimitToOwnAccountField.Equals(value) != true)) {
                    this.DayLimitToOwnAccountField = value;
                    this.RaisePropertyChanged("DayLimitToOwnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OneTransactionLimit {
            get {
                return this.OneTransactionLimitField;
            }
            set {
                if ((this.OneTransactionLimitField.Equals(value) != true)) {
                    this.OneTransactionLimitField = value;
                    this.RaisePropertyChanged("OneTransactionLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OneTransactionLimitToAnothersAccount {
            get {
                return this.OneTransactionLimitToAnothersAccountField;
            }
            set {
                if ((this.OneTransactionLimitToAnothersAccountField.Equals(value) != true)) {
                    this.OneTransactionLimitToAnothersAccountField = value;
                    this.RaisePropertyChanged("OneTransactionLimitToAnothersAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OneTransactionLimitToOwnAccount {
            get {
                return this.OneTransactionLimitToOwnAccountField;
            }
            set {
                if ((this.OneTransactionLimitToOwnAccountField.Equals(value) != true)) {
                    this.OneTransactionLimitToOwnAccountField = value;
                    this.RaisePropertyChanged("OneTransactionLimitToOwnAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondConfirm {
            get {
                return this.SecondConfirmField;
            }
            set {
                if ((this.SecondConfirmField.Equals(value) != true)) {
                    this.SecondConfirmField = value;
                    this.RaisePropertyChanged("SecondConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeOfClient {
            get {
                return this.TypeOfClientField;
            }
            set {
                if ((this.TypeOfClientField.Equals(value) != true)) {
                    this.TypeOfClientField = value;
                    this.RaisePropertyChanged("TypeOfClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverdueDetail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class OverdueDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProductEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProductStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Checked {
            get {
                return this.CheckedField;
            }
            set {
                if ((this.CheckedField.Equals(value) != true)) {
                    this.CheckedField = value;
                    this.RaisePropertyChanged("Checked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProductEndDate {
            get {
                return this.ProductEndDateField;
            }
            set {
                if ((this.ProductEndDateField.Equals(value) != true)) {
                    this.ProductEndDateField = value;
                    this.RaisePropertyChanged("ProductEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProductStartDate {
            get {
                return this.ProductStartDateField;
            }
            set {
                if ((this.ProductStartDateField.Equals(value) != true)) {
                    this.ProductStartDateField = value;
                    this.RaisePropertyChanged("ProductStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((this.ProductTypeField.Equals(value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTypeDescription {
            get {
                return this.ProductTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeDescriptionField, value) != true)) {
                    this.ProductTypeDescriptionField = value;
                    this.RaisePropertyChanged("ProductTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Productid {
            get {
                return this.ProductidField;
            }
            set {
                if ((this.ProductidField.Equals(value) != true)) {
                    this.ProductidField = value;
                    this.RaisePropertyChanged("Productid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateAmount {
            get {
                return this.RateAmountField;
            }
            set {
                if ((this.RateAmountField.Equals(value) != true)) {
                    this.RateAmountField = value;
                    this.RaisePropertyChanged("RateAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ServiceType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerService = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonCustomerService = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentDocument", Namespace="http://schemas.datacontract.org/2004/07/ACBALibrary")]
    [System.SerializableAttribute()]
    public partial class AttachmentDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AttachmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Attachment {
            get {
                return this.AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentField, value) != true)) {
                    this.AttachmentField = value;
                    this.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AttachmentDate {
            get {
                return this.AttachmentDateField;
            }
            set {
                if ((this.AttachmentDateField.Equals(value) != true)) {
                    this.AttachmentDateField = value;
                    this.RaisePropertyChanged("AttachmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachmentDescription {
            get {
                return this.AttachmentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentDescriptionField, value) != true)) {
                    this.AttachmentDescriptionField = value;
                    this.RaisePropertyChanged("AttachmentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((this.FileExtensionField.Equals(value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDocument", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ProductDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((this.DocumentTypeField.Equals(value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTypeDescription {
            get {
                return this.DocumentTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeDescriptionField, value) != true)) {
                    this.DocumentTypeDescriptionField = value;
                    this.RaisePropertyChanged("DocumentTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipRewards", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class MembershipRewards : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BonusBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FeePaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastDayOfBonusCalculationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeePayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeRealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BonusBalance {
            get {
                return this.BonusBalanceField;
            }
            set {
                if ((this.BonusBalanceField.Equals(value) != true)) {
                    this.BonusBalanceField = value;
                    this.RaisePropertyChanged("BonusBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FeePaymentDate {
            get {
                return this.FeePaymentDateField;
            }
            set {
                if ((this.FeePaymentDateField.Equals(value) != true)) {
                    this.FeePaymentDateField = value;
                    this.RaisePropertyChanged("FeePaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastDayOfBonusCalculation {
            get {
                return this.LastDayOfBonusCalculationField;
            }
            set {
                if ((this.LastDayOfBonusCalculationField.Equals(value) != true)) {
                    this.LastDayOfBonusCalculationField = value;
                    this.RaisePropertyChanged("LastDayOfBonusCalculation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFee {
            get {
                return this.ServiceFeeField;
            }
            set {
                if ((this.ServiceFeeField.Equals(value) != true)) {
                    this.ServiceFeeField = value;
                    this.RaisePropertyChanged("ServiceFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFeePayed {
            get {
                return this.ServiceFeePayedField;
            }
            set {
                if ((this.ServiceFeePayedField.Equals(value) != true)) {
                    this.ServiceFeePayedField = value;
                    this.RaisePropertyChanged("ServiceFeePayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFeeReal {
            get {
                return this.ServiceFeeRealField;
            }
            set {
                if ((this.ServiceFeeRealField.Equals(value) != true)) {
                    this.ServiceFeeRealField = value;
                    this.RaisePropertyChanged("ServiceFeeReal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SetNumber {
            get {
                return this.SetNumberField;
            }
            set {
                if ((this.SetNumberField.Equals(value) != true)) {
                    this.SetNumberField = value;
                    this.RaisePropertyChanged("SetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidationDate {
            get {
                return this.ValidationDateField;
            }
            set {
                if ((this.ValidationDateField.Equals(value) != true)) {
                    this.ValidationDateField = value;
                    this.RaisePropertyChanged("ValidationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Factoring", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Factoring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float CommissionPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FactoirngRegresTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoringCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoringRegresTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FactoringTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactoringTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FillialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartCapitalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float CommissionPercent {
            get {
                return this.CommissionPercentField;
            }
            set {
                if ((this.CommissionPercentField.Equals(value) != true)) {
                    this.CommissionPercentField = value;
                    this.RaisePropertyChanged("CommissionPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FactoirngRegresType {
            get {
                return this.FactoirngRegresTypeField;
            }
            set {
                if ((this.FactoirngRegresTypeField.Equals(value) != true)) {
                    this.FactoirngRegresTypeField = value;
                    this.RaisePropertyChanged("FactoirngRegresType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoringCurrency {
            get {
                return this.FactoringCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoringCurrencyField, value) != true)) {
                    this.FactoringCurrencyField = value;
                    this.RaisePropertyChanged("FactoringCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoringRegresTypeDescription {
            get {
                return this.FactoringRegresTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoringRegresTypeDescriptionField, value) != true)) {
                    this.FactoringRegresTypeDescriptionField = value;
                    this.RaisePropertyChanged("FactoringRegresTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FactoringType {
            get {
                return this.FactoringTypeField;
            }
            set {
                if ((this.FactoringTypeField.Equals(value) != true)) {
                    this.FactoringTypeField = value;
                    this.RaisePropertyChanged("FactoringType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FactoringTypeDescription {
            get {
                return this.FactoringTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FactoringTypeDescriptionField, value) != true)) {
                    this.FactoringTypeDescriptionField = value;
                    this.RaisePropertyChanged("FactoringTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FillialCode {
            get {
                return this.FillialCodeField;
            }
            set {
                if ((this.FillialCodeField.Equals(value) != true)) {
                    this.FillialCodeField = value;
                    this.RaisePropertyChanged("FillialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QualityDescription {
            get {
                return this.QualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QualityDescriptionField, value) != true)) {
                    this.QualityDescriptionField = value;
                    this.RaisePropertyChanged("QualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StartCapital {
            get {
                return this.StartCapitalField;
            }
            set {
                if ((this.StartCapitalField.Equals(value) != true)) {
                    this.StartCapitalField = value;
                    this.RaisePropertyChanged("StartCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchAccounts", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchAccounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string currencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool includeClosedAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isCorAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sintAccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sintAccNewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.accountNumberField, value) != true)) {
                    this.accountNumberField = value;
                    this.RaisePropertyChanged("accountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                if ((object.ReferenceEquals(this.currencyField, value) != true)) {
                    this.currencyField = value;
                    this.RaisePropertyChanged("currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.customerNumberField, value) != true)) {
                    this.customerNumberField = value;
                    this.RaisePropertyChanged("customerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool includeClosedAccounts {
            get {
                return this.includeClosedAccountsField;
            }
            set {
                if ((this.includeClosedAccountsField.Equals(value) != true)) {
                    this.includeClosedAccountsField = value;
                    this.RaisePropertyChanged("includeClosedAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCorAcc {
            get {
                return this.isCorAccField;
            }
            set {
                if ((this.isCorAccField.Equals(value) != true)) {
                    this.isCorAccField = value;
                    this.RaisePropertyChanged("isCorAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sintAcc {
            get {
                return this.sintAccField;
            }
            set {
                if ((object.ReferenceEquals(this.sintAccField, value) != true)) {
                    this.sintAccField = value;
                    this.RaisePropertyChanged("sintAcc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sintAccNew {
            get {
                return this.sintAccNewField;
            }
            set {
                if ((object.ReferenceEquals(this.sintAccNewField, value) != true)) {
                    this.sintAccNewField = value;
                    this.RaisePropertyChanged("sintAccNew");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchAccountResult", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchAccountResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CloseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((this.AccountTypeField.Equals(value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountTypeDescription {
            get {
                return this.AccountTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeDescriptionField, value) != true)) {
                    this.AccountTypeDescriptionField = value;
                    this.RaisePropertyChanged("AccountTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CloseDate {
            get {
                return this.CloseDateField;
            }
            set {
                if ((this.CloseDateField.Equals(value) != true)) {
                    this.CloseDateField = value;
                    this.RaisePropertyChanged("CloseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber {
            get {
                return this.ProductNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true)) {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCards", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchCards : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string currencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool includeCloseCardsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.cardNumberField, value) != true)) {
                    this.cardNumberField = value;
                    this.RaisePropertyChanged("cardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                if ((object.ReferenceEquals(this.currencyField, value) != true)) {
                    this.currencyField = value;
                    this.RaisePropertyChanged("currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.customerNumberField, value) != true)) {
                    this.customerNumberField = value;
                    this.RaisePropertyChanged("customerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool includeCloseCards {
            get {
                return this.includeCloseCardsField;
            }
            set {
                if ((this.includeCloseCardsField.Equals(value) != true)) {
                    this.includeCloseCardsField = value;
                    this.RaisePropertyChanged("includeCloseCards");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCardResult", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchCardResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CardAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardHolderDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CardAccount {
            get {
                return this.CardAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CardAccountField, value) != true)) {
                    this.CardAccountField = value;
                    this.RaisePropertyChanged("CardAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardHolderDescription {
            get {
                return this.CardHolderDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardHolderDescriptionField, value) != true)) {
                    this.CardHolderDescriptionField = value;
                    this.RaisePropertyChanged("CardHolderDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CardTypeField, value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchSwiftCodes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchSwiftCodes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CounryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwiftCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Counry {
            get {
                return this.CounryField;
            }
            set {
                if ((object.ReferenceEquals(this.CounryField, value) != true)) {
                    this.CounryField = value;
                    this.RaisePropertyChanged("Counry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SwiftCode {
            get {
                return this.SwiftCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SwiftCodeField, value) != true)) {
                    this.SwiftCodeField = value;
                    this.RaisePropertyChanged("SwiftCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderNumberTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum OrderNumberTypes : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashIn = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashOut = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MemOrder = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternationalOrder = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutMemOrder = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RATransfer = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Convertation = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorrectMemOrder = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperationByPeriod = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentOrder = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCommunal", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchCommunal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AbonentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoWaterBranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CommunalTypes CommunalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DebtListDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FindByEqualAbonentNumberAndBranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentNumber {
            get {
                return this.AbonentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentNumberField, value) != true)) {
                    this.AbonentNumberField = value;
                    this.RaisePropertyChanged("AbonentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AbonentType {
            get {
                return this.AbonentTypeField;
            }
            set {
                if ((this.AbonentTypeField.Equals(value) != true)) {
                    this.AbonentTypeField = value;
                    this.RaisePropertyChanged("AbonentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoWaterBranch {
            get {
                return this.CoWaterBranchField;
            }
            set {
                if ((object.ReferenceEquals(this.CoWaterBranchField, value) != true)) {
                    this.CoWaterBranchField = value;
                    this.RaisePropertyChanged("CoWaterBranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CommunalTypes CommunalType {
            get {
                return this.CommunalTypeField;
            }
            set {
                if ((this.CommunalTypeField.Equals(value) != true)) {
                    this.CommunalTypeField = value;
                    this.RaisePropertyChanged("CommunalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Debt {
            get {
                return this.DebtField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtField, value) != true)) {
                    this.DebtField = value;
                    this.RaisePropertyChanged("Debt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DebtListDate {
            get {
                return this.DebtListDateField;
            }
            set {
                if ((this.DebtListDateField.Equals(value) != true)) {
                    this.DebtListDateField = value;
                    this.RaisePropertyChanged("DebtListDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FilialCodeField, value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FindByEqualAbonentNumberAndBranch {
            get {
                return this.FindByEqualAbonentNumberAndBranchField;
            }
            set {
                if ((this.FindByEqualAbonentNumberAndBranchField.Equals(value) != true)) {
                    this.FindByEqualAbonentNumberAndBranchField = value;
                    this.RaisePropertyChanged("FindByEqualAbonentNumberAndBranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Home {
            get {
                return this.HomeField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeField, value) != true)) {
                    this.HomeField = value;
                    this.RaisePropertyChanged("Home");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string House {
            get {
                return this.HouseField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseField, value) != true)) {
                    this.HouseField = value;
                    this.RaisePropertyChanged("House");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((this.PaymentTypeField.Equals(value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfstringstring", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial struct KeyValuePairOfstringstring : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string keyField;
        
        private string valueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfbooleanstring", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfbooleanstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool m_Item1Field;
        
        private string m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((this.m_Item1Field.Equals(value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((object.ReferenceEquals(this.m_Item2Field, value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchOrders", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SearchOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsATSAccountOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCashBookOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.OrderQuality OrderQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegisteredUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.SourceType SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.OrderType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsATSAccountOrders {
            get {
                return this.IsATSAccountOrdersField;
            }
            set {
                if ((this.IsATSAccountOrdersField.Equals(value) != true)) {
                    this.IsATSAccountOrdersField = value;
                    this.RaisePropertyChanged("IsATSAccountOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCashBookOrder {
            get {
                return this.IsCashBookOrderField;
            }
            set {
                if ((this.IsCashBookOrderField.Equals(value) != true)) {
                    this.IsCashBookOrderField = value;
                    this.RaisePropertyChanged("IsCashBookOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationFilialCode {
            get {
                return this.OperationFilialCodeField;
            }
            set {
                if ((this.OperationFilialCodeField.Equals(value) != true)) {
                    this.OperationFilialCodeField = value;
                    this.RaisePropertyChanged("OperationFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.OrderQuality OrderQuality {
            get {
                return this.OrderQualityField;
            }
            set {
                if ((this.OrderQualityField.Equals(value) != true)) {
                    this.OrderQualityField = value;
                    this.RaisePropertyChanged("OrderQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegisteredUserID {
            get {
                return this.RegisteredUserIDField;
            }
            set {
                if ((this.RegisteredUserIDField.Equals(value) != true)) {
                    this.RegisteredUserIDField = value;
                    this.RaisePropertyChanged("RegisteredUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.SourceType Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.OrderType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardServiceFee", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardServiceFee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastDayOfServiceFeePaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NextDayOfServiceFeePaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PayedReplacementFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ReplacementFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeePayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ServiceFeeTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Debt {
            get {
                return this.DebtField;
            }
            set {
                if ((this.DebtField.Equals(value) != true)) {
                    this.DebtField = value;
                    this.RaisePropertyChanged("Debt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstCharge {
            get {
                return this.FirstChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstChargeField, value) != true)) {
                    this.FirstChargeField = value;
                    this.RaisePropertyChanged("FirstCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastDayOfServiceFeePayment {
            get {
                return this.LastDayOfServiceFeePaymentField;
            }
            set {
                if ((this.LastDayOfServiceFeePaymentField.Equals(value) != true)) {
                    this.LastDayOfServiceFeePaymentField = value;
                    this.RaisePropertyChanged("LastDayOfServiceFeePayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NextDayOfServiceFeePayment {
            get {
                return this.NextDayOfServiceFeePaymentField;
            }
            set {
                if ((this.NextDayOfServiceFeePaymentField.Equals(value) != true)) {
                    this.NextDayOfServiceFeePaymentField = value;
                    this.RaisePropertyChanged("NextDayOfServiceFeePayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PayedReplacementFee {
            get {
                return this.PayedReplacementFeeField;
            }
            set {
                if ((this.PayedReplacementFeeField.Equals(value) != true)) {
                    this.PayedReplacementFeeField = value;
                    this.RaisePropertyChanged("PayedReplacementFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Period {
            get {
                return this.PeriodField;
            }
            set {
                if ((this.PeriodField.Equals(value) != true)) {
                    this.PeriodField = value;
                    this.RaisePropertyChanged("Period");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ReplacementFee {
            get {
                return this.ReplacementFeeField;
            }
            set {
                if ((this.ReplacementFeeField.Equals(value) != true)) {
                    this.ReplacementFeeField = value;
                    this.RaisePropertyChanged("ReplacementFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFee {
            get {
                return this.ServiceFeeField;
            }
            set {
                if ((this.ServiceFeeField.Equals(value) != true)) {
                    this.ServiceFeeField = value;
                    this.RaisePropertyChanged("ServiceFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFeePayed {
            get {
                return this.ServiceFeePayedField;
            }
            set {
                if ((this.ServiceFeePayedField.Equals(value) != true)) {
                    this.ServiceFeePayedField = value;
                    this.RaisePropertyChanged("ServiceFeePayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ServiceFeeTotal {
            get {
                return this.ServiceFeeTotalField;
            }
            set {
                if ((this.ServiceFeeTotalField.Equals(value) != true)) {
                    this.ServiceFeeTotalField = value;
                    this.RaisePropertyChanged("ServiceFeeTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFreezeDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountFreezeDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AmountFreezeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FreezeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FreezeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FreezeDateByDocumnetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreezeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FreezeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UnfreezeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnfreezeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnfreezeReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort UnfreezeReasonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UnfreezeUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AmountFreezeDate {
            get {
                return this.AmountFreezeDateField;
            }
            set {
                if ((this.AmountFreezeDateField.Equals(value) != true)) {
                    this.AmountFreezeDateField = value;
                    this.RaisePropertyChanged("AmountFreezeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FreezeAmount {
            get {
                return this.FreezeAmountField;
            }
            set {
                if ((this.FreezeAmountField.Equals(value) != true)) {
                    this.FreezeAmountField = value;
                    this.RaisePropertyChanged("FreezeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FreezeDate {
            get {
                return this.FreezeDateField;
            }
            set {
                if ((this.FreezeDateField.Equals(value) != true)) {
                    this.FreezeDateField = value;
                    this.RaisePropertyChanged("FreezeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FreezeDateByDocumnet {
            get {
                return this.FreezeDateByDocumnetField;
            }
            set {
                if ((this.FreezeDateByDocumnetField.Equals(value) != true)) {
                    this.FreezeDateByDocumnetField = value;
                    this.RaisePropertyChanged("FreezeDateByDocumnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreezeDescription {
            get {
                return this.FreezeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FreezeDescriptionField, value) != true)) {
                    this.FreezeDescriptionField = value;
                    this.RaisePropertyChanged("FreezeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FreezeUserId {
            get {
                return this.FreezeUserIdField;
            }
            set {
                if ((this.FreezeUserIdField.Equals(value) != true)) {
                    this.FreezeUserIdField = value;
                    this.RaisePropertyChanged("FreezeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonDescription {
            get {
                return this.ReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonDescriptionField, value) != true)) {
                    this.ReasonDescriptionField = value;
                    this.RaisePropertyChanged("ReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ReasonId {
            get {
                return this.ReasonIdField;
            }
            set {
                if ((this.ReasonIdField.Equals(value) != true)) {
                    this.ReasonIdField = value;
                    this.RaisePropertyChanged("ReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UnfreezeDate {
            get {
                return this.UnfreezeDateField;
            }
            set {
                if ((this.UnfreezeDateField.Equals(value) != true)) {
                    this.UnfreezeDateField = value;
                    this.RaisePropertyChanged("UnfreezeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnfreezeDescription {
            get {
                return this.UnfreezeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UnfreezeDescriptionField, value) != true)) {
                    this.UnfreezeDescriptionField = value;
                    this.RaisePropertyChanged("UnfreezeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnfreezeReasonDescription {
            get {
                return this.UnfreezeReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UnfreezeReasonDescriptionField, value) != true)) {
                    this.UnfreezeReasonDescriptionField = value;
                    this.RaisePropertyChanged("UnfreezeReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort UnfreezeReasonId {
            get {
                return this.UnfreezeReasonIdField;
            }
            set {
                if ((this.UnfreezeReasonIdField.Equals(value) != true)) {
                    this.UnfreezeReasonIdField = value;
                    this.RaisePropertyChanged("UnfreezeReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UnfreezeUserId {
            get {
                return this.UnfreezeUserIdField;
            }
            set {
                if ((this.UnfreezeUserIdField.Equals(value) != true)) {
                    this.UnfreezeUserIdField = value;
                    this.RaisePropertyChanged("UnfreezeUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizedUser", Namespace="http://schemas.datacontract.org/2004/07/InformationSecurityLibrary")]
    [System.SerializableAttribute()]
    public partial class AuthorizedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string configDBBaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string configDBPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string configDBServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string configDBUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short departmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string departmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort filialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort filialLogonAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAutorizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isReplacementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string logedProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short positionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string positionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short replacementEmployeeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short replacementUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string resultDescriptionAMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long userAccountGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong userCustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userEmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short userIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userSessionTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string configDBBaseName {
            get {
                return this.configDBBaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.configDBBaseNameField, value) != true)) {
                    this.configDBBaseNameField = value;
                    this.RaisePropertyChanged("configDBBaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string configDBPassword {
            get {
                return this.configDBPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.configDBPasswordField, value) != true)) {
                    this.configDBPasswordField = value;
                    this.RaisePropertyChanged("configDBPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string configDBServerName {
            get {
                return this.configDBServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.configDBServerNameField, value) != true)) {
                    this.configDBServerNameField = value;
                    this.RaisePropertyChanged("configDBServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string configDBUserName {
            get {
                return this.configDBUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.configDBUserNameField, value) != true)) {
                    this.configDBUserNameField = value;
                    this.RaisePropertyChanged("configDBUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short departmentID {
            get {
                return this.departmentIDField;
            }
            set {
                if ((this.departmentIDField.Equals(value) != true)) {
                    this.departmentIDField = value;
                    this.RaisePropertyChanged("departmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string departmentName {
            get {
                return this.departmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.departmentNameField, value) != true)) {
                    this.departmentNameField = value;
                    this.RaisePropertyChanged("departmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort filialCode {
            get {
                return this.filialCodeField;
            }
            set {
                if ((this.filialCodeField.Equals(value) != true)) {
                    this.filialCodeField = value;
                    this.RaisePropertyChanged("filialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort filialLogonAccess {
            get {
                return this.filialLogonAccessField;
            }
            set {
                if ((this.filialLogonAccessField.Equals(value) != true)) {
                    this.filialLogonAccessField = value;
                    this.RaisePropertyChanged("filialLogonAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filialName {
            get {
                return this.filialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.filialNameField, value) != true)) {
                    this.filialNameField = value;
                    this.RaisePropertyChanged("filialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAutorized {
            get {
                return this.isAutorizedField;
            }
            set {
                if ((this.isAutorizedField.Equals(value) != true)) {
                    this.isAutorizedField = value;
                    this.RaisePropertyChanged("isAutorized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isReplacement {
            get {
                return this.isReplacementField;
            }
            set {
                if ((this.isReplacementField.Equals(value) != true)) {
                    this.isReplacementField = value;
                    this.RaisePropertyChanged("isReplacement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string logedProgramName {
            get {
                return this.logedProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.logedProgramNameField, value) != true)) {
                    this.logedProgramNameField = value;
                    this.RaisePropertyChanged("logedProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short positionID {
            get {
                return this.positionIDField;
            }
            set {
                if ((this.positionIDField.Equals(value) != true)) {
                    this.positionIDField = value;
                    this.RaisePropertyChanged("positionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string positionName {
            get {
                return this.positionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.positionNameField, value) != true)) {
                    this.positionNameField = value;
                    this.RaisePropertyChanged("positionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short replacementEmployeeNumber {
            get {
                return this.replacementEmployeeNumberField;
            }
            set {
                if ((this.replacementEmployeeNumberField.Equals(value) != true)) {
                    this.replacementEmployeeNumberField = value;
                    this.RaisePropertyChanged("replacementEmployeeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short replacementUserID {
            get {
                return this.replacementUserIDField;
            }
            set {
                if ((this.replacementUserIDField.Equals(value) != true)) {
                    this.replacementUserIDField = value;
                    this.RaisePropertyChanged("replacementUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.resultDescriptionField, value) != true)) {
                    this.resultDescriptionField = value;
                    this.RaisePropertyChanged("resultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultDescriptionAM {
            get {
                return this.resultDescriptionAMField;
            }
            set {
                if ((object.ReferenceEquals(this.resultDescriptionAMField, value) != true)) {
                    this.resultDescriptionAMField = value;
                    this.RaisePropertyChanged("resultDescriptionAM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transLimit {
            get {
                return this.transLimitField;
            }
            set {
                if ((this.transLimitField.Equals(value) != true)) {
                    this.transLimitField = value;
                    this.RaisePropertyChanged("transLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transRight {
            get {
                return this.transRightField;
            }
            set {
                if ((this.transRightField.Equals(value) != true)) {
                    this.transRightField = value;
                    this.RaisePropertyChanged("transRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long userAccountGroup {
            get {
                return this.userAccountGroupField;
            }
            set {
                if ((this.userAccountGroupField.Equals(value) != true)) {
                    this.userAccountGroupField = value;
                    this.RaisePropertyChanged("userAccountGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong userCustomerNumber {
            get {
                return this.userCustomerNumberField;
            }
            set {
                if ((this.userCustomerNumberField.Equals(value) != true)) {
                    this.userCustomerNumberField = value;
                    this.RaisePropertyChanged("userCustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userEmployeeID {
            get {
                return this.userEmployeeIDField;
            }
            set {
                if ((this.userEmployeeIDField.Equals(value) != true)) {
                    this.userEmployeeIDField = value;
                    this.RaisePropertyChanged("userEmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userGroupID {
            get {
                return this.userGroupIDField;
            }
            set {
                if ((this.userGroupIDField.Equals(value) != true)) {
                    this.userGroupIDField = value;
                    this.RaisePropertyChanged("userGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userPassword {
            get {
                return this.userPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.userPasswordField, value) != true)) {
                    this.userPasswordField = value;
                    this.RaisePropertyChanged("userPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userSessionToken {
            get {
                return this.userSessionTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.userSessionTokenField, value) != true)) {
                    this.userSessionTokenField = value;
                    this.RaisePropertyChanged("userSessionToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatement", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountStatement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalDebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AccountStatementTotalsByDays> TotalsByDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.AccountStatementDetail> TransactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalBalance {
            get {
                return this.FinalBalanceField;
            }
            set {
                if ((this.FinalBalanceField.Equals(value) != true)) {
                    this.FinalBalanceField = value;
                    this.RaisePropertyChanged("FinalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialBalance {
            get {
                return this.InitialBalanceField;
            }
            set {
                if ((this.InitialBalanceField.Equals(value) != true)) {
                    this.InitialBalanceField = value;
                    this.RaisePropertyChanged("InitialBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalCreditAmount {
            get {
                return this.TotalCreditAmountField;
            }
            set {
                if ((this.TotalCreditAmountField.Equals(value) != true)) {
                    this.TotalCreditAmountField = value;
                    this.RaisePropertyChanged("TotalCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalDebitAmount {
            get {
                return this.TotalDebitAmountField;
            }
            set {
                if ((this.TotalDebitAmountField.Equals(value) != true)) {
                    this.TotalDebitAmountField = value;
                    this.RaisePropertyChanged("TotalDebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AccountStatementTotalsByDays> TotalsByDays {
            get {
                return this.TotalsByDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalsByDaysField, value) != true)) {
                    this.TotalsByDaysField = value;
                    this.RaisePropertyChanged("TotalsByDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.AccountStatementDetail> Transactions {
            get {
                return this.TransactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionsField, value) != true)) {
                    this.TransactionsField = value;
                    this.RaisePropertyChanged("Transactions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatementTotalsByDays", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountStatementTotalsByDays : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayTotalCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayTotalCreditAmountBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayTotalDebetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DayTotalDebetAmountBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayTotalCreditAmount {
            get {
                return this.DayTotalCreditAmountField;
            }
            set {
                if ((this.DayTotalCreditAmountField.Equals(value) != true)) {
                    this.DayTotalCreditAmountField = value;
                    this.RaisePropertyChanged("DayTotalCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayTotalCreditAmountBase {
            get {
                return this.DayTotalCreditAmountBaseField;
            }
            set {
                if ((this.DayTotalCreditAmountBaseField.Equals(value) != true)) {
                    this.DayTotalCreditAmountBaseField = value;
                    this.RaisePropertyChanged("DayTotalCreditAmountBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayTotalDebetAmount {
            get {
                return this.DayTotalDebetAmountField;
            }
            set {
                if ((this.DayTotalDebetAmountField.Equals(value) != true)) {
                    this.DayTotalDebetAmountField = value;
                    this.RaisePropertyChanged("DayTotalDebetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DayTotalDebetAmountBase {
            get {
                return this.DayTotalDebetAmountBaseField;
            }
            set {
                if ((this.DayTotalDebetAmountBaseField.Equals(value) != true)) {
                    this.DayTotalDebetAmountBaseField = value;
                    this.RaisePropertyChanged("DayTotalDebetAmountBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountStatementDetail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class AccountStatementDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CashOperationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrespondentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrespondentAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CurrentAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char DebitCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountBase {
            get {
                return this.AmountBaseField;
            }
            set {
                if ((this.AmountBaseField.Equals(value) != true)) {
                    this.AmountBaseField = value;
                    this.RaisePropertyChanged("AmountBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashOperationNumber {
            get {
                return this.CashOperationNumberField;
            }
            set {
                if ((this.CashOperationNumberField.Equals(value) != true)) {
                    this.CashOperationNumberField = value;
                    this.RaisePropertyChanged("CashOperationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correspondent {
            get {
                return this.CorrespondentField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondentField, value) != true)) {
                    this.CorrespondentField = value;
                    this.RaisePropertyChanged("Correspondent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrespondentAccount {
            get {
                return this.CorrespondentAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrespondentAccountField, value) != true)) {
                    this.CorrespondentAccountField = value;
                    this.RaisePropertyChanged("CorrespondentAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CurrentAccountNumber {
            get {
                return this.CurrentAccountNumberField;
            }
            set {
                if ((this.CurrentAccountNumberField.Equals(value) != true)) {
                    this.CurrentAccountNumberField = value;
                    this.RaisePropertyChanged("CurrentAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char DebitCredit {
            get {
                return this.DebitCreditField;
            }
            set {
                if ((this.DebitCreditField.Equals(value) != true)) {
                    this.DebitCreditField = value;
                    this.RaisePropertyChanged("DebitCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationType {
            get {
                return this.OperationTypeField;
            }
            set {
                if ((this.OperationTypeField.Equals(value) != true)) {
                    this.OperationTypeField = value;
                    this.RaisePropertyChanged("OperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatement", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardStatement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FinalBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalDebitAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.CardStatementDetail> TransactionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FinalBalance {
            get {
                return this.FinalBalanceField;
            }
            set {
                if ((this.FinalBalanceField.Equals(value) != true)) {
                    this.FinalBalanceField = value;
                    this.RaisePropertyChanged("FinalBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialBalance {
            get {
                return this.InitialBalanceField;
            }
            set {
                if ((this.InitialBalanceField.Equals(value) != true)) {
                    this.InitialBalanceField = value;
                    this.RaisePropertyChanged("InitialBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalCreditAmount {
            get {
                return this.TotalCreditAmountField;
            }
            set {
                if ((this.TotalCreditAmountField.Equals(value) != true)) {
                    this.TotalCreditAmountField = value;
                    this.RaisePropertyChanged("TotalCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalDebitAmount {
            get {
                return this.TotalDebitAmountField;
            }
            set {
                if ((this.TotalDebitAmountField.Equals(value) != true)) {
                    this.TotalDebitAmountField = value;
                    this.RaisePropertyChanged("TotalDebitAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.CardStatementDetail> Transactions {
            get {
                return this.TransactionsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionsField, value) != true)) {
                    this.TransactionsField = value;
                    this.RaisePropertyChanged("Transactions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardStatementDetail", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CardStatementDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CommissionFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfValeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DebitCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OperationAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationCardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CommissionFee {
            get {
                return this.CommissionFeeField;
            }
            set {
                if ((this.CommissionFeeField.Equals(value) != true)) {
                    this.CommissionFeeField = value;
                    this.RaisePropertyChanged("CommissionFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfVale {
            get {
                return this.DateOfValeField;
            }
            set {
                if ((this.DateOfValeField.Equals(value) != true)) {
                    this.DateOfValeField = value;
                    this.RaisePropertyChanged("DateOfVale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DebitCredit {
            get {
                return this.DebitCreditField;
            }
            set {
                if ((this.DebitCreditField.Equals(value) != true)) {
                    this.DebitCreditField = value;
                    this.RaisePropertyChanged("DebitCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OperationAmount {
            get {
                return this.OperationAmountField;
            }
            set {
                if ((this.OperationAmountField.Equals(value) != true)) {
                    this.OperationAmountField = value;
                    this.RaisePropertyChanged("OperationAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationCardNumber {
            get {
                return this.OperationCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationCardNumberField, value) != true)) {
                    this.OperationCardNumberField = value;
                    this.RaisePropertyChanged("OperationCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationCurrency {
            get {
                return this.OperationCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationCurrencyField, value) != true)) {
                    this.OperationCurrencyField = value;
                    this.RaisePropertyChanged("OperationCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperationDate {
            get {
                return this.OperationDateField;
            }
            set {
                if ((this.OperationDateField.Equals(value) != true)) {
                    this.OperationDateField = value;
                    this.RaisePropertyChanged("OperationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicTransfer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentAddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AmountSubTypeByPurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountSubTypeByPurposeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CheckDaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrediAccountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account CreditInternalAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account DebitAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstTransferDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong HBDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastOperationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxAmountLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinAmountLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinDebetAccountRestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PartialPaymentSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort PayIfNoDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PeriodicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ReceiverBankCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverBankSwiftCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverCodeOfTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderCodeOfTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong SenderRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TerminationHBDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferPoliceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferPurposeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferPurposeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentAddInf {
            get {
                return this.AbonentAddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentAddInfField, value) != true)) {
                    this.AbonentAddInfField = value;
                    this.RaisePropertyChanged("AbonentAddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentNumber {
            get {
                return this.AbonentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentNumberField, value) != true)) {
                    this.AbonentNumberField = value;
                    this.RaisePropertyChanged("AbonentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AmountSubTypeByPurpose {
            get {
                return this.AmountSubTypeByPurposeField;
            }
            set {
                if ((this.AmountSubTypeByPurposeField.Equals(value) != true)) {
                    this.AmountSubTypeByPurposeField = value;
                    this.RaisePropertyChanged("AmountSubTypeByPurpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountSubTypeByPurposeDescription {
            get {
                return this.AmountSubTypeByPurposeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountSubTypeByPurposeDescriptionField, value) != true)) {
                    this.AmountSubTypeByPurposeDescriptionField = value;
                    this.RaisePropertyChanged("AmountSubTypeByPurposeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeType {
            get {
                return this.ChargeTypeField;
            }
            set {
                if ((this.ChargeTypeField.Equals(value) != true)) {
                    this.ChargeTypeField = value;
                    this.RaisePropertyChanged("ChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeTypeDescription {
            get {
                return this.ChargeTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeTypeDescriptionField, value) != true)) {
                    this.ChargeTypeDescriptionField = value;
                    this.RaisePropertyChanged("ChargeTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CheckDaysCount {
            get {
                return this.CheckDaysCountField;
            }
            set {
                if ((this.CheckDaysCountField.Equals(value) != true)) {
                    this.CheckDaysCountField = value;
                    this.RaisePropertyChanged("CheckDaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrediAccountDescription {
            get {
                return this.CrediAccountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CrediAccountDescriptionField, value) != true)) {
                    this.CrediAccountDescriptionField = value;
                    this.RaisePropertyChanged("CrediAccountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account CreditInternalAccount {
            get {
                return this.CreditInternalAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditInternalAccountField, value) != true)) {
                    this.CreditInternalAccountField = value;
                    this.RaisePropertyChanged("CreditInternalAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account DebitAccount {
            get {
                return this.DebitAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DebitAccountField, value) != true)) {
                    this.DebitAccountField = value;
                    this.RaisePropertyChanged("DebitAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((this.DocumentNumberField.Equals(value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DurationType {
            get {
                return this.DurationTypeField;
            }
            set {
                if ((this.DurationTypeField.Equals(value) != true)) {
                    this.DurationTypeField = value;
                    this.RaisePropertyChanged("DurationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationTypeDescription {
            get {
                return this.DurationTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationTypeDescriptionField, value) != true)) {
                    this.DurationTypeDescriptionField = value;
                    this.RaisePropertyChanged("DurationTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((this.FeeAmountField.Equals(value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstTransferDate {
            get {
                return this.FirstTransferDateField;
            }
            set {
                if ((this.FirstTransferDateField.Equals(value) != true)) {
                    this.FirstTransferDateField = value;
                    this.RaisePropertyChanged("FirstTransferDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong HBDocID {
            get {
                return this.HBDocIDField;
            }
            set {
                if ((this.HBDocIDField.Equals(value) != true)) {
                    this.HBDocIDField = value;
                    this.RaisePropertyChanged("HBDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastOperationDate {
            get {
                return this.LastOperationDateField;
            }
            set {
                if ((this.LastOperationDateField.Equals(value) != true)) {
                    this.LastOperationDateField = value;
                    this.RaisePropertyChanged("LastOperationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxAmountLevel {
            get {
                return this.MaxAmountLevelField;
            }
            set {
                if ((this.MaxAmountLevelField.Equals(value) != true)) {
                    this.MaxAmountLevelField = value;
                    this.RaisePropertyChanged("MaxAmountLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinAmountLevel {
            get {
                return this.MinAmountLevelField;
            }
            set {
                if ((this.MinAmountLevelField.Equals(value) != true)) {
                    this.MinAmountLevelField = value;
                    this.RaisePropertyChanged("MinAmountLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinDebetAccountRest {
            get {
                return this.MinDebetAccountRestField;
            }
            set {
                if ((this.MinDebetAccountRestField.Equals(value) != true)) {
                    this.MinDebetAccountRestField = value;
                    this.RaisePropertyChanged("MinDebetAccountRest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte PartialPaymentSign {
            get {
                return this.PartialPaymentSignField;
            }
            set {
                if ((this.PartialPaymentSignField.Equals(value) != true)) {
                    this.PartialPaymentSignField = value;
                    this.RaisePropertyChanged("PartialPaymentSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort PayIfNoDebt {
            get {
                return this.PayIfNoDebtField;
            }
            set {
                if ((this.PayIfNoDebtField.Equals(value) != true)) {
                    this.PayIfNoDebtField = value;
                    this.RaisePropertyChanged("PayIfNoDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Periodicity {
            get {
                return this.PeriodicityField;
            }
            set {
                if ((this.PeriodicityField.Equals(value) != true)) {
                    this.PeriodicityField = value;
                    this.RaisePropertyChanged("Periodicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ReceiverBankCode {
            get {
                return this.ReceiverBankCodeField;
            }
            set {
                if ((this.ReceiverBankCodeField.Equals(value) != true)) {
                    this.ReceiverBankCodeField = value;
                    this.RaisePropertyChanged("ReceiverBankCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverBankSwiftCode {
            get {
                return this.ReceiverBankSwiftCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverBankSwiftCodeField, value) != true)) {
                    this.ReceiverBankSwiftCodeField = value;
                    this.RaisePropertyChanged("ReceiverBankSwiftCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverCodeOfTax {
            get {
                return this.ReceiverCodeOfTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverCodeOfTaxField, value) != true)) {
                    this.ReceiverCodeOfTaxField = value;
                    this.RaisePropertyChanged("ReceiverCodeOfTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverName {
            get {
                return this.ReceiverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverNameField, value) != true)) {
                    this.ReceiverNameField = value;
                    this.RaisePropertyChanged("ReceiverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderCodeOfTax {
            get {
                return this.SenderCodeOfTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderCodeOfTaxField, value) != true)) {
                    this.SenderCodeOfTaxField = value;
                    this.RaisePropertyChanged("SenderCodeOfTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong SenderRegionCode {
            get {
                return this.SenderRegionCodeField;
            }
            set {
                if ((this.SenderRegionCodeField.Equals(value) != true)) {
                    this.SenderRegionCodeField = value;
                    this.RaisePropertyChanged("SenderRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TerminationHBDocID {
            get {
                return this.TerminationHBDocIDField;
            }
            set {
                if ((this.TerminationHBDocIDField.Equals(value) != true)) {
                    this.TerminationHBDocIDField = value;
                    this.RaisePropertyChanged("TerminationHBDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferPoliceCode {
            get {
                return this.TransferPoliceCodeField;
            }
            set {
                if ((this.TransferPoliceCodeField.Equals(value) != true)) {
                    this.TransferPoliceCodeField = value;
                    this.RaisePropertyChanged("TransferPoliceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferPurposeCode {
            get {
                return this.TransferPurposeCodeField;
            }
            set {
                if ((this.TransferPurposeCodeField.Equals(value) != true)) {
                    this.TransferPurposeCodeField = value;
                    this.RaisePropertyChanged("TransferPurposeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferPurposeDescription {
            get {
                return this.TransferPurposeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPurposeDescriptionField, value) != true)) {
                    this.TransferPurposeDescriptionField = value;
                    this.RaisePropertyChanged("TransferPurposeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDescription {
            get {
                return this.TypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescriptionField, value) != true)) {
                    this.TypeDescriptionField = value;
                    this.RaisePropertyChanged("TypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum MessageType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SentFromClient = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransactionRefusal = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reminder = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.ContactAccount> ContactAccountListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.ContactAccount> ContactAccountList {
            get {
                return this.ContactAccountListField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactAccountListField, value) != true)) {
                    this.ContactAccountListField = value;
                    this.RaisePropertyChanged("ContactAccountList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactAccount", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ContactAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Communal", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class Communal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbonentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.CommunalTypes ComunalTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.PrepaidSign PrepaidSignField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentFilialCode {
            get {
                return this.AbonentFilialCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentFilialCodeField, value) != true)) {
                    this.AbonentFilialCodeField = value;
                    this.RaisePropertyChanged("AbonentFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbonentNumber {
            get {
                return this.AbonentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AbonentNumberField, value) != true)) {
                    this.AbonentNumberField = value;
                    this.RaisePropertyChanged("AbonentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchCodeField, value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.CommunalTypes ComunalType {
            get {
                return this.ComunalTypeField;
            }
            set {
                if ((this.ComunalTypeField.Equals(value) != true)) {
                    this.ComunalTypeField = value;
                    this.RaisePropertyChanged("ComunalType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Debt {
            get {
                return this.DebtField;
            }
            set {
                if ((this.DebtField.Equals(value) != true)) {
                    this.DebtField = value;
                    this.RaisePropertyChanged("Debt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.PrepaidSign PrepaidSign {
            get {
                return this.PrepaidSignField;
            }
            set {
                if ((this.PrepaidSignField.Equals(value) != true)) {
                    this.PrepaidSignField = value;
                    this.RaisePropertyChanged("PrepaidSign");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrepaidSign", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum PrepaidSign : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotDefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prepaid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotPrepaid = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunalDetails", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CommunalDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceivedBankMailTransfer", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class ReceivedBankMailTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccDebetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccDebetCBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddInfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AmlCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AmlCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AmlCheckSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CardFilialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ConfirmationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> ConfirmationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateGetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTransField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrDebetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrDebetCBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrPoxancymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EditingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileForBranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ForPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ListCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NotAutomatTransField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentOrderReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SocialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrFirstLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeGetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte TransOKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransactionsGroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnknownReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short UnknownTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short UnknownTransferSendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValutaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifiedAMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VerifierSetDateAMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifierSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifierSetNumber_AMLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccCredit {
            get {
                return this.AccCreditField;
            }
            set {
                if ((object.ReferenceEquals(this.AccCreditField, value) != true)) {
                    this.AccCreditField = value;
                    this.RaisePropertyChanged("AccCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccDebet {
            get {
                return this.AccDebetField;
            }
            set {
                if ((object.ReferenceEquals(this.AccDebetField, value) != true)) {
                    this.AccDebetField = value;
                    this.RaisePropertyChanged("AccDebet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccDebetCB {
            get {
                return this.AccDebetCBField;
            }
            set {
                if ((object.ReferenceEquals(this.AccDebetCBField, value) != true)) {
                    this.AccDebetCBField = value;
                    this.RaisePropertyChanged("AccDebetCB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddInf {
            get {
                return this.AddInfField;
            }
            set {
                if ((object.ReferenceEquals(this.AddInfField, value) != true)) {
                    this.AddInfField = value;
                    this.RaisePropertyChanged("AddInf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AmlCheck {
            get {
                return this.AmlCheckField;
            }
            set {
                if ((this.AmlCheckField.Equals(value) != true)) {
                    this.AmlCheckField = value;
                    this.RaisePropertyChanged("AmlCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AmlCheckDate {
            get {
                return this.AmlCheckDateField;
            }
            set {
                if ((this.AmlCheckDateField.Equals(value) != true)) {
                    this.AmlCheckDateField = value;
                    this.RaisePropertyChanged("AmlCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AmlCheckSetNumber {
            get {
                return this.AmlCheckSetNumberField;
            }
            set {
                if ((this.AmlCheckSetNumberField.Equals(value) != true)) {
                    this.AmlCheckSetNumberField = value;
                    this.RaisePropertyChanged("AmlCheckSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CardFilial {
            get {
                return this.CardFilialField;
            }
            set {
                if ((this.CardFilialField.Equals(value) != true)) {
                    this.CardFilialField = value;
                    this.RaisePropertyChanged("CardFilial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ConfirmationSetNumber {
            get {
                return this.ConfirmationSetNumberField;
            }
            set {
                if ((this.ConfirmationSetNumberField.Equals(value) != true)) {
                    this.ConfirmationSetNumberField = value;
                    this.RaisePropertyChanged("ConfirmationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> ConfirmationTime {
            get {
                return this.ConfirmationTimeField;
            }
            set {
                if ((this.ConfirmationTimeField.Equals(value) != true)) {
                    this.ConfirmationTimeField = value;
                    this.RaisePropertyChanged("ConfirmationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateGet {
            get {
                return this.DateGetField;
            }
            set {
                if ((this.DateGetField.Equals(value) != true)) {
                    this.DateGetField = value;
                    this.RaisePropertyChanged("DateGet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTrans {
            get {
                return this.DateTransField;
            }
            set {
                if ((this.DateTransField.Equals(value) != true)) {
                    this.DateTransField = value;
                    this.RaisePropertyChanged("DateTrans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTransfer {
            get {
                return this.DateTransferField;
            }
            set {
                if ((this.DateTransferField.Equals(value) != true)) {
                    this.DateTransferField = value;
                    this.RaisePropertyChanged("DateTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescrCredit {
            get {
                return this.DescrCreditField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrCreditField, value) != true)) {
                    this.DescrCreditField = value;
                    this.RaisePropertyChanged("DescrCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescrDebet {
            get {
                return this.DescrDebetField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrDebetField, value) != true)) {
                    this.DescrDebetField = value;
                    this.RaisePropertyChanged("DescrDebet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescrDebetCB {
            get {
                return this.DescrDebetCBField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrDebetCBField, value) != true)) {
                    this.DescrDebetCBField = value;
                    this.RaisePropertyChanged("DescrDebetCB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescrPoxancym {
            get {
                return this.DescrPoxancymField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrPoxancymField, value) != true)) {
                    this.DescrPoxancymField = value;
                    this.RaisePropertyChanged("DescrPoxancym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Editing {
            get {
                return this.EditingField;
            }
            set {
                if ((this.EditingField.Equals(value) != true)) {
                    this.EditingField = value;
                    this.RaisePropertyChanged("Editing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileForBranch {
            get {
                return this.FileForBranchField;
            }
            set {
                if ((object.ReferenceEquals(this.FileForBranchField, value) != true)) {
                    this.FileForBranchField = value;
                    this.RaisePropertyChanged("FileForBranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ForPrint {
            get {
                return this.ForPrintField;
            }
            set {
                if ((this.ForPrintField.Equals(value) != true)) {
                    this.ForPrintField = value;
                    this.RaisePropertyChanged("ForPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ident {
            get {
                return this.IdentField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentField, value) != true)) {
                    this.IdentField = value;
                    this.RaisePropertyChanged("Ident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint ListCount {
            get {
                return this.ListCountField;
            }
            set {
                if ((this.ListCountField.Equals(value) != true)) {
                    this.ListCountField = value;
                    this.RaisePropertyChanged("ListCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short NotAutomatTrans {
            get {
                return this.NotAutomatTransField;
            }
            set {
                if ((this.NotAutomatTransField.Equals(value) != true)) {
                    this.NotAutomatTransField = value;
                    this.RaisePropertyChanged("NotAutomatTrans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentCode {
            get {
                return this.PaymentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentCodeField, value) != true)) {
                    this.PaymentCodeField = value;
                    this.RaisePropertyChanged("PaymentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentOrderReferenceNumber {
            get {
                return this.PaymentOrderReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentOrderReferenceNumberField, value) != true)) {
                    this.PaymentOrderReferenceNumberField = value;
                    this.RaisePropertyChanged("PaymentOrderReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverType {
            get {
                return this.ReceiverTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverTypeField, value) != true)) {
                    this.ReceiverTypeField = value;
                    this.RaisePropertyChanged("ReceiverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderType {
            get {
                return this.SenderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderTypeField, value) != true)) {
                    this.SenderTypeField = value;
                    this.RaisePropertyChanged("SenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SocialNumber {
            get {
                return this.SocialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SocialNumberField, value) != true)) {
                    this.SocialNumberField = value;
                    this.RaisePropertyChanged("SocialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrFirstLine {
            get {
                return this.StrFirstLineField;
            }
            set {
                if ((object.ReferenceEquals(this.StrFirstLineField, value) != true)) {
                    this.StrFirstLineField = value;
                    this.RaisePropertyChanged("StrFirstLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeGet {
            get {
                return this.TimeGetField;
            }
            set {
                if ((this.TimeGetField.Equals(value) != true)) {
                    this.TimeGetField = value;
                    this.RaisePropertyChanged("TimeGet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte TransOK {
            get {
                return this.TransOKField;
            }
            set {
                if ((this.TransOKField.Equals(value) != true)) {
                    this.TransOKField = value;
                    this.RaisePropertyChanged("TransOK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransactionsGroupNumber {
            get {
                return this.TransactionsGroupNumberField;
            }
            set {
                if ((this.TransactionsGroupNumberField.Equals(value) != true)) {
                    this.TransactionsGroupNumberField = value;
                    this.RaisePropertyChanged("TransactionsGroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnknownReason {
            get {
                return this.UnknownReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.UnknownReasonField, value) != true)) {
                    this.UnknownReasonField = value;
                    this.RaisePropertyChanged("UnknownReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short UnknownTransfer {
            get {
                return this.UnknownTransferField;
            }
            set {
                if ((this.UnknownTransferField.Equals(value) != true)) {
                    this.UnknownTransferField = value;
                    this.RaisePropertyChanged("UnknownTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short UnknownTransferSend {
            get {
                return this.UnknownTransferSendField;
            }
            set {
                if ((this.UnknownTransferSendField.Equals(value) != true)) {
                    this.UnknownTransferSendField = value;
                    this.RaisePropertyChanged("UnknownTransferSend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((this.UserCodeField.Equals(value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valuta {
            get {
                return this.ValutaField;
            }
            set {
                if ((object.ReferenceEquals(this.ValutaField, value) != true)) {
                    this.ValutaField = value;
                    this.RaisePropertyChanged("Valuta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short VerifiedAML {
            get {
                return this.VerifiedAMLField;
            }
            set {
                if ((this.VerifiedAMLField.Equals(value) != true)) {
                    this.VerifiedAMLField = value;
                    this.RaisePropertyChanged("VerifiedAML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VerifierSetDateAML {
            get {
                return this.VerifierSetDateAMLField;
            }
            set {
                if ((this.VerifierSetDateAMLField.Equals(value) != true)) {
                    this.VerifierSetDateAMLField = value;
                    this.RaisePropertyChanged("VerifierSetDateAML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short VerifierSetNumber {
            get {
                return this.VerifierSetNumberField;
            }
            set {
                if ((this.VerifierSetNumberField.Equals(value) != true)) {
                    this.VerifierSetNumberField = value;
                    this.RaisePropertyChanged("VerifierSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short VerifierSetNumber_AML {
            get {
                return this.VerifierSetNumber_AMLField;
            }
            set {
                if ((this.VerifierSetNumber_AMLField.Equals(value) != true)) {
                    this.VerifierSetNumber_AMLField = value;
                    this.RaisePropertyChanged("VerifierSetNumber_AML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RateType", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum RateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonCash = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cash = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cross = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transfer = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExchangeDirection", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum ExchangeDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sell = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buy = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentOrderFutureBalance", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PaymentOrderFutureBalance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.FutureBalance CreditAccountFutureBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.FutureBalance DebitAccountFutureBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.FutureBalance FeeAccountFutureBalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.FutureBalance CreditAccountFutureBalance {
            get {
                return this.CreditAccountFutureBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountFutureBalanceField, value) != true)) {
                    this.CreditAccountFutureBalanceField = value;
                    this.RaisePropertyChanged("CreditAccountFutureBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.FutureBalance DebitAccountFutureBalance {
            get {
                return this.DebitAccountFutureBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.DebitAccountFutureBalanceField, value) != true)) {
                    this.DebitAccountFutureBalanceField = value;
                    this.RaisePropertyChanged("DebitAccountFutureBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.FutureBalance FeeAccountFutureBalance {
            get {
                return this.FeeAccountFutureBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountFutureBalanceField, value) != true)) {
                    this.FeeAccountFutureBalanceField = value;
                    this.RaisePropertyChanged("FeeAccountFutureBalance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FutureBalance", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class FutureBalance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceAfterFullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceBeforeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BalanceAfter {
            get {
                return this.BalanceAfterField;
            }
            set {
                if ((this.BalanceAfterField.Equals(value) != true)) {
                    this.BalanceAfterField = value;
                    this.RaisePropertyChanged("BalanceAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BalanceAfterFull {
            get {
                return this.BalanceAfterFullField;
            }
            set {
                if ((this.BalanceAfterFullField.Equals(value) != true)) {
                    this.BalanceAfterFullField = value;
                    this.RaisePropertyChanged("BalanceAfterFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BalanceBefore {
            get {
                return this.BalanceBeforeField;
            }
            set {
                if ((this.BalanceBeforeField.Equals(value) != true)) {
                    this.BalanceBeforeField = value;
                    this.RaisePropertyChanged("BalanceBefore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositOrderCondition", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositOrderCondition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateVariationFromOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MaxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MinDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NominalRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRateVariationFromOption {
            get {
                return this.InterestRateVariationFromOptionField;
            }
            set {
                if ((this.InterestRateVariationFromOptionField.Equals(value) != true)) {
                    this.InterestRateVariationFromOptionField = value;
                    this.RaisePropertyChanged("InterestRateVariationFromOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaxDate {
            get {
                return this.MaxDateField;
            }
            set {
                if ((this.MaxDateField.Equals(value) != true)) {
                    this.MaxDateField = value;
                    this.RaisePropertyChanged("MaxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinAmount {
            get {
                return this.MinAmountField;
            }
            set {
                if ((this.MinAmountField.Equals(value) != true)) {
                    this.MinAmountField = value;
                    this.RaisePropertyChanged("MinAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MinDate {
            get {
                return this.MinDateField;
            }
            set {
                if ((this.MinDateField.Equals(value) != true)) {
                    this.MinDateField = value;
                    this.RaisePropertyChanged("MinDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NominalRate {
            get {
                return this.NominalRateField;
            }
            set {
                if ((this.NominalRateField.Equals(value) != true)) {
                    this.NominalRateField = value;
                    this.RaisePropertyChanged("NominalRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferByCallFilter", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferByCallFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FilialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.TransferCallQuality QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RegisteredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegistrationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Filial {
            get {
                return this.FilialField;
            }
            set {
                if ((this.FilialField.Equals(value) != true)) {
                    this.FilialField = value;
                    this.RaisePropertyChanged("Filial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.TransferCallQuality Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegisteredBy {
            get {
                return this.RegisteredByField;
            }
            set {
                if ((this.RegisteredByField.Equals(value) != true)) {
                    this.RegisteredByField = value;
                    this.RaisePropertyChanged("RegisteredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegistrationSetNumber {
            get {
                return this.RegistrationSetNumberField;
            }
            set {
                if ((this.RegistrationSetNumberField.Equals(value) != true)) {
                    this.RegistrationSetNumberField = value;
                    this.RaisePropertyChanged("RegistrationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferSystem {
            get {
                return this.TransferSystemField;
            }
            set {
                if ((this.TransferSystemField.Equals(value) != true)) {
                    this.TransferSystemField = value;
                    this.RaisePropertyChanged("TransferSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferCallQuality", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum TransferCallQuality : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotConfirmed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Denied = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinallyConfirmed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToPayment = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paied = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneTimeConfirmed = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferByCallList", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferByCallList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransferCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Test.ServiceReference1.TransferByCall> TransferListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransferCount {
            get {
                return this.TransferCountField;
            }
            set {
                if ((this.TransferCountField.Equals(value) != true)) {
                    this.TransferCountField = value;
                    this.RaisePropertyChanged("TransferCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Test.ServiceReference1.TransferByCall> TransferList {
            get {
                return this.TransferListField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferListField, value) != true)) {
                    this.TransferListField = value;
                    this.RaisePropertyChanged("TransferList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferByCall", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferByCall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountForPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CallTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmationDate2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ConfirmationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ConfirmationSetNumber2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ContractFilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CustomerAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateSellField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RegisteredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RegistrationSetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransferConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferQualityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferSystemDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCurrency {
            get {
                return this.AccountCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCurrencyField, value) != true)) {
                    this.AccountCurrencyField = value;
                    this.RaisePropertyChanged("AccountCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountDescription {
            get {
                return this.AccountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDescriptionField, value) != true)) {
                    this.AccountDescriptionField = value;
                    this.RaisePropertyChanged("AccountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AmountForPayment {
            get {
                return this.AmountForPaymentField;
            }
            set {
                if ((this.AmountForPaymentField.Equals(value) != true)) {
                    this.AmountForPaymentField = value;
                    this.RaisePropertyChanged("AmountForPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CallTime {
            get {
                return this.CallTimeField;
            }
            set {
                if ((this.CallTimeField.Equals(value) != true)) {
                    this.CallTimeField = value;
                    this.RaisePropertyChanged("CallTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmationDate2 {
            get {
                return this.ConfirmationDate2Field;
            }
            set {
                if ((this.ConfirmationDate2Field.Equals(value) != true)) {
                    this.ConfirmationDate2Field = value;
                    this.RaisePropertyChanged("ConfirmationDate2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConfirmationSetNumber {
            get {
                return this.ConfirmationSetNumberField;
            }
            set {
                if ((this.ConfirmationSetNumberField.Equals(value) != true)) {
                    this.ConfirmationSetNumberField = value;
                    this.RaisePropertyChanged("ConfirmationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ConfirmationSetNumber2 {
            get {
                return this.ConfirmationSetNumber2Field;
            }
            set {
                if ((this.ConfirmationSetNumber2Field.Equals(value) != true)) {
                    this.ConfirmationSetNumber2Field = value;
                    this.RaisePropertyChanged("ConfirmationSetNumber2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ContractFilialCode {
            get {
                return this.ContractFilialCodeField;
            }
            set {
                if ((this.ContractFilialCodeField.Equals(value) != true)) {
                    this.ContractFilialCodeField = value;
                    this.RaisePropertyChanged("ContractFilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((this.ContractIDField.Equals(value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CustomerAmount {
            get {
                return this.CustomerAmountField;
            }
            set {
                if ((this.CustomerAmountField.Equals(value) != true)) {
                    this.CustomerAmountField = value;
                    this.RaisePropertyChanged("CustomerAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateBuy {
            get {
                return this.RateBuyField;
            }
            set {
                if ((this.RateBuyField.Equals(value) != true)) {
                    this.RateBuyField = value;
                    this.RaisePropertyChanged("RateBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateSell {
            get {
                return this.RateSellField;
            }
            set {
                if ((this.RateSellField.Equals(value) != true)) {
                    this.RateSellField = value;
                    this.RaisePropertyChanged("RateSell");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegectDescription {
            get {
                return this.RegectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegectDescriptionField, value) != true)) {
                    this.RegectDescriptionField = value;
                    this.RaisePropertyChanged("RegectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegisteredBy {
            get {
                return this.RegisteredByField;
            }
            set {
                if ((this.RegisteredByField.Equals(value) != true)) {
                    this.RegisteredByField = value;
                    this.RaisePropertyChanged("RegisteredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RegistrationSetNumber {
            get {
                return this.RegistrationSetNumberField;
            }
            set {
                if ((this.RegistrationSetNumberField.Equals(value) != true)) {
                    this.RegistrationSetNumberField = value;
                    this.RaisePropertyChanged("RegistrationSetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransferConfirmationDate {
            get {
                return this.TransferConfirmationDateField;
            }
            set {
                if ((this.TransferConfirmationDateField.Equals(value) != true)) {
                    this.TransferConfirmationDateField = value;
                    this.RaisePropertyChanged("TransferConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferQualityDescription {
            get {
                return this.TransferQualityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferQualityDescriptionField, value) != true)) {
                    this.TransferQualityDescriptionField = value;
                    this.RaisePropertyChanged("TransferQualityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferSystem {
            get {
                return this.TransferSystemField;
            }
            set {
                if ((this.TransferSystemField.Equals(value) != true)) {
                    this.TransferSystemField = value;
                    this.RaisePropertyChanged("TransferSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferSystemDescription {
            get {
                return this.TransferSystemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferSystemDescriptionField, value) != true)) {
                    this.TransferSystemDescriptionField = value;
                    this.RaisePropertyChanged("TransferSystemDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferFilter", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class TransferFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AMLCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebetAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebetBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrOKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IsCallTranasferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IsHBTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte IsPayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RegisteredByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RegisteredUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SendOrReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferRequestStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferRequestStepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TransferTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte UnknownTransferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short VerifiedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AMLCheck {
            get {
                return this.AMLCheckField;
            }
            set {
                if ((this.AMLCheckField.Equals(value) != true)) {
                    this.AMLCheckField = value;
                    this.RaisePropertyChanged("AMLCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditAccount {
            get {
                return this.CreditAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditAccountField, value) != true)) {
                    this.CreditAccountField = value;
                    this.RaisePropertyChanged("CreditAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebetAccount {
            get {
                return this.DebetAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DebetAccountField, value) != true)) {
                    this.DebetAccountField = value;
                    this.RaisePropertyChanged("DebetAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebetBank {
            get {
                return this.DebetBankField;
            }
            set {
                if ((object.ReferenceEquals(this.DebetBankField, value) != true)) {
                    this.DebetBankField = value;
                    this.RaisePropertyChanged("DebetBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescrOK {
            get {
                return this.DescrOKField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrOKField, value) != true)) {
                    this.DescrOKField = value;
                    this.RaisePropertyChanged("DescrOK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((this.DocumentNumberField.Equals(value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filial {
            get {
                return this.FilialField;
            }
            set {
                if ((object.ReferenceEquals(this.FilialField, value) != true)) {
                    this.FilialField = value;
                    this.RaisePropertyChanged("Filial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ident {
            get {
                return this.IdentField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentField, value) != true)) {
                    this.IdentField = value;
                    this.RaisePropertyChanged("Ident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IsCallTranasfer {
            get {
                return this.IsCallTranasferField;
            }
            set {
                if ((this.IsCallTranasferField.Equals(value) != true)) {
                    this.IsCallTranasferField = value;
                    this.RaisePropertyChanged("IsCallTranasfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IsHBTransfer {
            get {
                return this.IsHBTransferField;
            }
            set {
                if ((this.IsHBTransferField.Equals(value) != true)) {
                    this.IsHBTransferField = value;
                    this.RaisePropertyChanged("IsHBTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte IsPayed {
            get {
                return this.IsPayedField;
            }
            set {
                if ((this.IsPayedField.Equals(value) != true)) {
                    this.IsPayedField = value;
                    this.RaisePropertyChanged("IsPayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxAmount {
            get {
                return this.MaxAmountField;
            }
            set {
                if ((this.MaxAmountField.Equals(value) != true)) {
                    this.MaxAmountField = value;
                    this.RaisePropertyChanged("MaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegisteredBy {
            get {
                return this.RegisteredByField;
            }
            set {
                if ((this.RegisteredByField.Equals(value) != true)) {
                    this.RegisteredByField = value;
                    this.RaisePropertyChanged("RegisteredBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegisteredUserID {
            get {
                return this.RegisteredUserIDField;
            }
            set {
                if ((this.RegisteredUserIDField.Equals(value) != true)) {
                    this.RegisteredUserIDField = value;
                    this.RaisePropertyChanged("RegisteredUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SendOrReceived {
            get {
                return this.SendOrReceivedField;
            }
            set {
                if ((this.SendOrReceivedField.Equals(value) != true)) {
                    this.SendOrReceivedField = value;
                    this.RaisePropertyChanged("SendOrReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Session {
            get {
                return this.SessionField;
            }
            set {
                if ((this.SessionField.Equals(value) != true)) {
                    this.SessionField = value;
                    this.RaisePropertyChanged("Session");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferGroup {
            get {
                return this.TransferGroupField;
            }
            set {
                if ((this.TransferGroupField.Equals(value) != true)) {
                    this.TransferGroupField = value;
                    this.RaisePropertyChanged("TransferGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferRequestStatus {
            get {
                return this.TransferRequestStatusField;
            }
            set {
                if ((this.TransferRequestStatusField.Equals(value) != true)) {
                    this.TransferRequestStatusField = value;
                    this.RaisePropertyChanged("TransferRequestStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferRequestStep {
            get {
                return this.TransferRequestStepField;
            }
            set {
                if ((this.TransferRequestStepField.Equals(value) != true)) {
                    this.TransferRequestStepField = value;
                    this.RaisePropertyChanged("TransferRequestStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferSystem {
            get {
                return this.TransferSystemField;
            }
            set {
                if ((this.TransferSystemField.Equals(value) != true)) {
                    this.TransferSystemField = value;
                    this.RaisePropertyChanged("TransferSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferType {
            get {
                return this.TransferTypeField;
            }
            set {
                if ((this.TransferTypeField.Equals(value) != true)) {
                    this.TransferTypeField = value;
                    this.RaisePropertyChanged("TransferType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte UnknownTransfer {
            get {
                return this.UnknownTransferField;
            }
            set {
                if ((this.UnknownTransferField.Equals(value) != true)) {
                    this.UnknownTransferField = value;
                    this.RaisePropertyChanged("UnknownTransfer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Verified {
            get {
                return this.VerifiedField;
            }
            set {
                if ((this.VerifiedField.Equals(value) != true)) {
                    this.VerifiedField = value;
                    this.RaisePropertyChanged("Verified");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepositRepayment", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class DepositRepayment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CapitalRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfRepaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProfitTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateRepaymentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CapitalRepayment {
            get {
                return this.CapitalRepaymentField;
            }
            set {
                if ((this.CapitalRepaymentField.Equals(value) != true)) {
                    this.CapitalRepaymentField = value;
                    this.RaisePropertyChanged("CapitalRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfRepayment {
            get {
                return this.DateOfRepaymentField;
            }
            set {
                if ((this.DateOfRepaymentField.Equals(value) != true)) {
                    this.DateOfRepaymentField = value;
                    this.RaisePropertyChanged("DateOfRepayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProfitTax {
            get {
                return this.ProfitTaxField;
            }
            set {
                if ((this.ProfitTaxField.Equals(value) != true)) {
                    this.ProfitTaxField = value;
                    this.RaisePropertyChanged("ProfitTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RateRepayment {
            get {
                return this.RateRepaymentField;
            }
            set {
                if ((this.RateRepaymentField.Equals(value) != true)) {
                    this.RateRepaymentField = value;
                    this.RaisePropertyChanged("RateRepayment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeriodicTransferHistory", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class PeriodicTransferHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationResultDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationResult {
            get {
                return this.OperationResultField;
            }
            set {
                if ((this.OperationResultField.Equals(value) != true)) {
                    this.OperationResultField = value;
                    this.RaisePropertyChanged("OperationResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationResultDescription {
            get {
                return this.OperationResultDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationResultDescriptionField, value) != true)) {
                    this.OperationResultDescriptionField = value;
                    this.RaisePropertyChanged("OperationResultDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditLineGrafik", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CreditLineGrafik : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaturedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte OverdueSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PlannedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaturedAmount {
            get {
                return this.MaturedAmountField;
            }
            set {
                if ((this.MaturedAmountField.Equals(value) != true)) {
                    this.MaturedAmountField = value;
                    this.RaisePropertyChanged("MaturedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte OverdueSign {
            get {
                return this.OverdueSignField;
            }
            set {
                if ((this.OverdueSignField.Equals(value) != true)) {
                    this.OverdueSignField = value;
                    this.RaisePropertyChanged("OverdueSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PlannedAmount {
            get {
                return this.PlannedAmountField;
            }
            set {
                if ((this.PlannedAmountField.Equals(value) != true)) {
                    this.PlannedAmountField = value;
                    this.RaisePropertyChanged("PlannedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwiftMessage", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class SwiftMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float CustomerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.Account FeeAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FeeAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong FilialCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InputOutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SWIFTCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.Account FeeAccount {
            get {
                return this.FeeAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeAccountField, value) != true)) {
                    this.FeeAccountField = value;
                    this.RaisePropertyChanged("FeeAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FeeAmount {
            get {
                return this.FeeAmountField;
            }
            set {
                if ((this.FeeAmountField.Equals(value) != true)) {
                    this.FeeAmountField = value;
                    this.RaisePropertyChanged("FeeAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong FilialCode {
            get {
                return this.FilialCodeField;
            }
            set {
                if ((this.FilialCodeField.Equals(value) != true)) {
                    this.FilialCodeField = value;
                    this.RaisePropertyChanged("FilialCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InputOutput {
            get {
                return this.InputOutputField;
            }
            set {
                if ((this.InputOutputField.Equals(value) != true)) {
                    this.InputOutputField = value;
                    this.RaisePropertyChanged("InputOutput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtCode {
            get {
                return this.MtCodeField;
            }
            set {
                if ((this.MtCodeField.Equals(value) != true)) {
                    this.MtCodeField = value;
                    this.RaisePropertyChanged("MtCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SWIFTCode {
            get {
                return this.SWIFTCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SWIFTCodeField, value) != true)) {
                    this.SWIFTCodeField = value;
                    this.RaisePropertyChanged("SWIFTCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderHistory", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class OrderHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ChangeUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.OrderQuality QualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ReasonIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ChangeUserId {
            get {
                return this.ChangeUserIdField;
            }
            set {
                if ((this.ChangeUserIdField.Equals(value) != true)) {
                    this.ChangeUserIdField = value;
                    this.RaisePropertyChanged("ChangeUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeUserName {
            get {
                return this.ChangeUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeUserNameField, value) != true)) {
                    this.ChangeUserNameField = value;
                    this.RaisePropertyChanged("ChangeUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.OrderQuality Quality {
            get {
                return this.QualityField;
            }
            set {
                if ((this.QualityField.Equals(value) != true)) {
                    this.QualityField = value;
                    this.RaisePropertyChanged("Quality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonDescription {
            get {
                return this.ReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonDescriptionField, value) != true)) {
                    this.ReasonDescriptionField = value;
                    this.RaisePropertyChanged("ReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ReasonId {
            get {
                return this.ReasonIdField;
            }
            set {
                if ((this.ReasonIdField.Equals(value) != true)) {
                    this.ReasonIdField = value;
                    this.RaisePropertyChanged("ReasonId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDebts", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    [System.SerializableAttribute()]
    public partial class CustomerDebts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AlowTransactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Test.ServiceReference1.DebtTypes DebtTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjectNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AlowTransaction {
            get {
                return this.AlowTransactionField;
            }
            set {
                if ((this.AlowTransactionField.Equals(value) != true)) {
                    this.AlowTransactionField = value;
                    this.RaisePropertyChanged("AlowTransaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountDescription {
            get {
                return this.AmountDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountDescriptionField, value) != true)) {
                    this.AmountDescriptionField = value;
                    this.RaisePropertyChanged("AmountDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebtDescription {
            get {
                return this.DebtDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtDescriptionField, value) != true)) {
                    this.DebtDescriptionField = value;
                    this.RaisePropertyChanged("DebtDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Test.ServiceReference1.DebtTypes DebtType {
            get {
                return this.DebtTypeField;
            }
            set {
                if ((this.DebtTypeField.Equals(value) != true)) {
                    this.DebtTypeField = value;
                    this.RaisePropertyChanged("DebtType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectNumber {
            get {
                return this.ObjectNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectNumberField, value) != true)) {
                    this.ObjectNumberField = value;
                    this.RaisePropertyChanged("ObjectNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DebtTypes", Namespace="http://schemas.datacontract.org/2004/07/ExternalBanking")]
    public enum DebtTypes : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentAccount = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HomeBanking = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Card = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overdraft = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provision = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loan = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditLine = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GivenGuarantee = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dahk = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PEK = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IXBService")]
    public interface IXBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseStoppingPenaltyCalculationOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseStoppingPenaltyCalculationOrderRespon" +
            "se")]
        Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder GetDepositCaseStoppingPenaltyCalculationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseStoppingPenaltyCalculationOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseStoppingPenaltyCalculationOrderRespon" +
            "se")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder> GetDepositCaseStoppingPenaltyCalculationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCTPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetCTPaymentOrderResponse")]
        Test.ServiceReference1.CTPaymentOrder GetCTPaymentOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCTPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetCTPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CTPaymentOrder> GetCTPaymentOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCTLoanMatureOrder", ReplyAction="http://tempuri.org/IXBService/GetCTLoanMatureOrderResponse")]
        Test.ServiceReference1.CTLoanMatureOrder GetCTLoanMatureOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCTLoanMatureOrder", ReplyAction="http://tempuri.org/IXBService/GetCTLoanMatureOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CTLoanMatureOrder> GetCTLoanMatureOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/SaveLoanMonitoringConclusionResponse")]
        Test.ServiceReference1.ActionResult SaveLoanMonitoringConclusion(Test.ServiceReference1.LoanMonitoringConclusion monitoring);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/SaveLoanMonitoringConclusionResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanMonitoringConclusionAsync(Test.ServiceReference1.LoanMonitoringConclusion monitoring);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/ApproveLoanMonitoringConclusionResponse")]
        Test.ServiceReference1.ActionResult ApproveLoanMonitoringConclusion(long monitoringId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/ApproveLoanMonitoringConclusionResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanMonitoringConclusionAsync(long monitoringId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/DeleteLoanMonitoringConclusionResponse")]
        Test.ServiceReference1.ActionResult DeleteLoanMonitoringConclusion(long monitoringId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/DeleteLoanMonitoringConclusionResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> DeleteLoanMonitoringConclusionAsync(long monitoringId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMonitoringConclusions", ReplyAction="http://tempuri.org/IXBService/GetLoanMonitoringConclusionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanMonitoringConclusion> GetLoanMonitoringConclusions(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMonitoringConclusions", ReplyAction="http://tempuri.org/IXBService/GetLoanMonitoringConclusionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanMonitoringConclusion>> GetLoanMonitoringConclusionsAsync(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/GetLoanMonitoringConclusionResponse")]
        Test.ServiceReference1.LoanMonitoringConclusion GetLoanMonitoringConclusion(long monitoringId, long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMonitoringConclusion", ReplyAction="http://tempuri.org/IXBService/GetLoanMonitoringConclusionResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanMonitoringConclusion> GetLoanMonitoringConclusionAsync(long monitoringId, long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLinkedLoans", ReplyAction="http://tempuri.org/IXBService/GetLinkedLoansResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionLinkedLoan> GetLinkedLoans(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLinkedLoans", ReplyAction="http://tempuri.org/IXBService/GetLinkedLoansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionLinkedLoan>> GetLinkedLoansAsync(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProvisionCoverCoefficient", ReplyAction="http://tempuri.org/IXBService/GetProvisionCoverCoefficientResponse")]
        float GetProvisionCoverCoefficient(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProvisionCoverCoefficient", ReplyAction="http://tempuri.org/IXBService/GetProvisionCoverCoefficientResponse")]
        System.Threading.Tasks.Task<float> GetProvisionCoverCoefficientAsync(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMonitoringType", ReplyAction="http://tempuri.org/IXBService/GetLoanMonitoringTypeResponse")]
        short GetLoanMonitoringType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMonitoringType", ReplyAction="http://tempuri.org/IXBService/GetLoanMonitoringTypeResponse")]
        System.Threading.Tasks.Task<short> GetLoanMonitoringTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/InitUserPagePermissions", ReplyAction="http://tempuri.org/IXBService/InitUserPagePermissionsResponse")]
        System.Collections.Generic.Dictionary<string, string> InitUserPagePermissions(string userSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/InitUserPagePermissions", ReplyAction="http://tempuri.org/IXBService/InitUserPagePermissionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> InitUserPagePermissionsAsync(string userSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountDescription", ReplyAction="http://tempuri.org/IXBService/GetAccountDescriptionResponse")]
        string GetAccountDescription(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountDescription", ReplyAction="http://tempuri.org/IXBService/GetAccountDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetAccountDescriptionAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCredentialActivationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCredentialActivationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCredentialActivationOrder(Test.ServiceReference1.CredentialActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCredentialActivationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCredentialActivationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCredentialActivationOrderAsync(Test.ServiceReference1.CredentialActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentialActivationOrder", ReplyAction="http://tempuri.org/IXBService/GetCredentialActivationOrderResponse")]
        Test.ServiceReference1.CredentialActivationOrder GetCredentialActivationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentialActivationOrder", ReplyAction="http://tempuri.org/IXBService/GetCredentialActivationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CredentialActivationOrder> GetCredentialActivationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditsHereAndNow", ReplyAction="http://tempuri.org/IXBService/GetCreditsHereAndNowResponse")]
        Test.ServiceReference1.GetCreditsHereAndNowResponse GetCreditsHereAndNow(Test.ServiceReference1.GetCreditsHereAndNowRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditsHereAndNow", ReplyAction="http://tempuri.org/IXBService/GetCreditsHereAndNowResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.GetCreditsHereAndNowResponse> GetCreditsHereAndNowAsync(Test.ServiceReference1.GetCreditsHereAndNowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCreditHereAndNowActivationOrders", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCreditHereAndNowActivationOrdersRespo" +
            "nse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCreditHereAndNowActivationOrders(Test.ServiceReference1.CreditHereAndNowActivationOrders creditHereAndNowActivationOrders);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCreditHereAndNowActivationOrders", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCreditHereAndNowActivationOrdersRespo" +
            "nse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCreditHereAndNowActivationOrdersAsync(Test.ServiceReference1.CreditHereAndNowActivationOrders creditHereAndNowActivationOrders);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedPreOrderDetails", ReplyAction="http://tempuri.org/IXBService/GetSearchedPreOrderDetailsResponse")]
        Test.ServiceReference1.GetSearchedPreOrderDetailsResponse GetSearchedPreOrderDetails(Test.ServiceReference1.GetSearchedPreOrderDetailsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedPreOrderDetails", ReplyAction="http://tempuri.org/IXBService/GetSearchedPreOrderDetailsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.GetSearchedPreOrderDetailsResponse> GetSearchedPreOrderDetailsAsync(Test.ServiceReference1.GetSearchedPreOrderDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAutomaticGenaratedPreOrders", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAutomaticGenaratedPreOrdersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ActionResult> SaveAndApproveAutomaticGenaratedPreOrders(long preOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAutomaticGenaratedPreOrders", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAutomaticGenaratedPreOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ActionResult>> SaveAndApproveAutomaticGenaratedPreOrdersAsync(long preOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AuthorizeCustomerByLoanApp", ReplyAction="http://tempuri.org/IXBService/AuthorizeCustomerByLoanAppResponse")]
        ulong AuthorizeCustomerByLoanApp(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AuthorizeCustomerByLoanApp", ReplyAction="http://tempuri.org/IXBService/AuthorizeCustomerByLoanAppResponse")]
        System.Threading.Tasks.Task<ulong> AuthorizeCustomerByLoanAppAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasPropertyProvision", ReplyAction="http://tempuri.org/IXBService/HasPropertyProvisionResponse")]
        bool HasPropertyProvision(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasPropertyProvision", ReplyAction="http://tempuri.org/IXBService/HasPropertyProvisionResponse")]
        System.Threading.Tasks.Task<bool> HasPropertyProvisionAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractTerminationOrderR" +
            "esponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveTransferCallContractTerminationOrder(Test.ServiceReference1.TransferCallContractTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractTerminationOrderR" +
            "esponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransferCallContractTerminationOrderAsync(Test.ServiceReference1.TransferCallContractTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractTerminationOrderResponse")]
        Test.ServiceReference1.TransferCallContractTerminationOrder GetTransferCallContractTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContractTerminationOrder> GetTransferCallContractTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrder", ReplyAction="http://tempuri.org/IXBService/GetOrderResponse")]
        Test.ServiceReference1.Order GetOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrder", ReplyAction="http://tempuri.org/IXBService/GetOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Order> GetOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AccountAccessible", ReplyAction="http://tempuri.org/IXBService/AccountAccessibleResponse")]
        bool AccountAccessible(string accountNumber, long accountGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AccountAccessible", ReplyAction="http://tempuri.org/IXBService/AccountAccessibleResponse")]
        System.Threading.Tasks.Task<bool> AccountAccessibleAsync(string accountNumber, long accountGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRejectedMessages", ReplyAction="http://tempuri.org/IXBService/GetRejectedMessagesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.RejectedOrderMessage> GetRejectedMessages(int filter, int start, int end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRejectedMessages", ReplyAction="http://tempuri.org/IXBService/GetRejectedMessagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.RejectedOrderMessage>> GetRejectedMessagesAsync(int filter, int start, int end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CloseRejectedMessage", ReplyAction="http://tempuri.org/IXBService/CloseRejectedMessageResponse")]
        void CloseRejectedMessage(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CloseRejectedMessage", ReplyAction="http://tempuri.org/IXBService/CloseRejectedMessageResponse")]
        System.Threading.Tasks.Task CloseRejectedMessageAsync(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositCaseOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositCaseOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveDepositCaseOrder(Test.ServiceReference1.DepositCaseOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositCaseOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositCaseOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositCaseOrderAsync(Test.ServiceReference1.DepositCaseOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseOrderContractNumber", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseOrderContractNumberResponse")]
        ulong GetDepositCaseOrderContractNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseOrderContractNumber", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseOrderContractNumberResponse")]
        System.Threading.Tasks.Task<ulong> GetDepositCaseOrderContractNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTotalRejectedUserMessages", ReplyAction="http://tempuri.org/IXBService/GetTotalRejectedUserMessagesResponse")]
        int GetTotalRejectedUserMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTotalRejectedUserMessages", ReplyAction="http://tempuri.org/IXBService/GetTotalRejectedUserMessagesResponse")]
        System.Threading.Tasks.Task<int> GetTotalRejectedUserMessagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTotalNotConfirmedOrder", ReplyAction="http://tempuri.org/IXBService/GetTotalNotConfirmedOrderResponse")]
        int GetTotalNotConfirmedOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTotalNotConfirmedOrder", ReplyAction="http://tempuri.org/IXBService/GetTotalNotConfirmedOrderResponse")]
        System.Threading.Tasks.Task<int> GetTotalNotConfirmedOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseMap", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseMapResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DepositCaseMap> GetDepositCaseMap(short caseSide);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseMap", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseMapResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositCaseMap>> GetDepositCaseMapAsync(short caseSide);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCasePrice", ReplyAction="http://tempuri.org/IXBService/GetDepositCasePriceResponse")]
        double GetDepositCasePrice(string caseNumber, int filialCode, short contractDuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCasePrice", ReplyAction="http://tempuri.org/IXBService/GetDepositCasePriceResponse")]
        System.Threading.Tasks.Task<double> GetDepositCasePriceAsync(string caseNumber, int filialCode, short contractDuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseOrderResponse")]
        Test.ServiceReference1.DepositCaseOrder GetDepositCaseOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCaseOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositCaseOrder> GetDepositCaseOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerCardTariffContracts", ReplyAction="http://tempuri.org/IXBService/GetCustomerCardTariffContractsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract> GetCustomerCardTariffContracts(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerCardTariffContracts", ReplyAction="http://tempuri.org/IXBService/GetCustomerCardTariffContractsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract>> GetCustomerCardTariffContractsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasCardTariffContract", ReplyAction="http://tempuri.org/IXBService/HasCardTariffContractResponse")]
        bool HasCardTariffContract();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasCardTariffContract", ReplyAction="http://tempuri.org/IXBService/HasCardTariffContractResponse")]
        System.Threading.Tasks.Task<bool> HasCardTariffContractAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariffContractActiveCardsCount", ReplyAction="http://tempuri.org/IXBService/GetCardTariffContractActiveCardsCountResponse")]
        int GetCardTariffContractActiveCardsCount(int contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariffContractActiveCardsCount", ReplyAction="http://tempuri.org/IXBService/GetCardTariffContractActiveCardsCountResponse")]
        System.Threading.Tasks.Task<int> GetCardTariffContractActiveCardsCountAsync(int contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasPosTerminal", ReplyAction="http://tempuri.org/IXBService/HasPosTerminalResponse")]
        bool HasPosTerminal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasPosTerminal", ReplyAction="http://tempuri.org/IXBService/HasPosTerminalResponse")]
        System.Threading.Tasks.Task<bool> HasPosTerminalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerPosLocations", ReplyAction="http://tempuri.org/IXBService/GetCustomerPosLocationsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PosLocation> GetCustomerPosLocations(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerPosLocations", ReplyAction="http://tempuri.org/IXBService/GetCustomerPosLocationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PosLocation>> GetCustomerPosLocationsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPosLocation", ReplyAction="http://tempuri.org/IXBService/GetPosLocationResponse")]
        Test.ServiceReference1.PosLocation GetPosLocation(int posLocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPosLocation", ReplyAction="http://tempuri.org/IXBService/GetPosLocationResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PosLocation> GetPosLocationAsync(int posLocationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPosRates", ReplyAction="http://tempuri.org/IXBService/GetPosRatesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PosRate> GetPosRates(int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPosRates", ReplyAction="http://tempuri.org/IXBService/GetPosRatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PosRate>> GetPosRatesAsync(int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetApproveReqOrder", ReplyAction="http://tempuri.org/IXBService/GetApproveReqOrderResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Order> GetApproveReqOrder(System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetApproveReqOrder", ReplyAction="http://tempuri.org/IXBService/GetApproveReqOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetApproveReqOrderAsync(System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPosCashbackRates", ReplyAction="http://tempuri.org/IXBService/GetPosCashbackRatesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PosCashbackRate> GetPosCashbackRates(int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPosCashbackRates", ReplyAction="http://tempuri.org/IXBService/GetPosCashbackRatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PosCashbackRate>> GetPosCashbackRatesAsync(int terminalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsCustomerSwiftTransferVerified", ReplyAction="http://tempuri.org/IXBService/IsCustomerSwiftTransferVerifiedResponse")]
        short IsCustomerSwiftTransferVerified(ulong customerNummber, string swiftCode, string receiverAaccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsCustomerSwiftTransferVerified", ReplyAction="http://tempuri.org/IXBService/IsCustomerSwiftTransferVerifiedResponse")]
        System.Threading.Tasks.Task<short> IsCustomerSwiftTransferVerifiedAsync(ulong customerNummber, string swiftCode, string receiverAaccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsExistingTransferByCall", ReplyAction="http://tempuri.org/IXBService/IsExistingTransferByCallResponse")]
        bool IsExistingTransferByCall(short transferSystem, string code, long transferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsExistingTransferByCall", ReplyAction="http://tempuri.org/IXBService/IsExistingTransferByCallResponse")]
        System.Threading.Tasks.Task<bool> IsExistingTransferByCallAsync(short transferSystem, string code, long transferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardsForRegistration", ReplyAction="http://tempuri.org/IXBService/GetCardsForRegistrationResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PlasticCard> GetCardsForRegistration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardsForRegistration", ReplyAction="http://tempuri.org/IXBService/GetCardsForRegistrationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PlasticCard>> GetCardsForRegistrationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositCasePenaltyMatureOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositCasePenaltyMatureOrderResponse" +
            "")]
        Test.ServiceReference1.ActionResult SaveAndApproveDepositCasePenaltyMatureOrder(Test.ServiceReference1.DepositCasePenaltyMatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositCasePenaltyMatureOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositCasePenaltyMatureOrderResponse" +
            "")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositCasePenaltyMatureOrderAsync(Test.ServiceReference1.DepositCasePenaltyMatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCasePenaltyMatureOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositCasePenaltyMatureOrderResponse")]
        Test.ServiceReference1.DepositCasePenaltyMatureOrder GetDepositCasePenaltyMatureOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCasePenaltyMatureOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositCasePenaltyMatureOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositCasePenaltyMatureOrder> GetDepositCasePenaltyMatureOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicSwiftStatementOrderResponse")]
        Test.ServiceReference1.ActionResult SavePeriodicSwiftStatementOrder(Test.ServiceReference1.PeriodicSwiftStatementOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicSwiftStatementOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicSwiftStatementOrderAsync(Test.ServiceReference1.PeriodicSwiftStatementOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicSwiftStatementOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndAprovePeriodicSwiftStatementOrder(Test.ServiceReference1.PeriodicSwiftStatementOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicSwiftStatementOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicSwiftStatementOrderAsync(Test.ServiceReference1.PeriodicSwiftStatementOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardRegistrationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardRegistrationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardRegistrationOrder(Test.ServiceReference1.CardRegistrationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardRegistrationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardRegistrationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardRegistrationOrderAsync(Test.ServiceReference1.CardRegistrationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountListForCardRegistration", ReplyAction="http://tempuri.org/IXBService/GetAccountListForCardRegistrationResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountListForCardRegistration(string cardCurrency, int cardFililal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountListForCardRegistration", ReplyAction="http://tempuri.org/IXBService/GetAccountListForCardRegistrationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountListForCardRegistrationAsync(string cardCurrency, int cardFililal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOverdraftAccountsForCardRegistration", ReplyAction="http://tempuri.org/IXBService/GetOverdraftAccountsForCardRegistrationResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetOverdraftAccountsForCardRegistration(string cardCurrency, int cardFililal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOverdraftAccountsForCardRegistration", ReplyAction="http://tempuri.org/IXBService/GetOverdraftAccountsForCardRegistrationResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetOverdraftAccountsForCardRegistrationAsync(string cardCurrency, int cardFililal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardRegistrationOrder", ReplyAction="http://tempuri.org/IXBService/GetCardRegistrationOrderResponse")]
        Test.ServiceReference1.CardRegistrationOrder GetCardRegistrationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardRegistrationOrder", ReplyAction="http://tempuri.org/IXBService/GetCardRegistrationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardRegistrationOrder> GetCardRegistrationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicSwiftStatementOrderResponse")]
        Test.ServiceReference1.ActionResult ApprovePeriodicSwiftStatementOrder(Test.ServiceReference1.PeriodicSwiftStatementOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicSwiftStatementOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicSwiftStatementOrderAsync(Test.ServiceReference1.PeriodicSwiftStatementOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrderFee", ReplyAction="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrderFeeResponse")]
        double GetPeriodicSwiftStatementOrderFee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrderFee", ReplyAction="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrderFeeResponse")]
        System.Threading.Tasks.Task<double> GetPeriodicSwiftStatementOrderFeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrderResponse")]
        Test.ServiceReference1.PeriodicSwiftStatementOrder GetPeriodicSwiftStatementOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicSwiftStatementOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicSwiftStatementOrder> GetPeriodicSwiftStatementOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckTransferToShopPayment", ReplyAction="http://tempuri.org/IXBService/CheckTransferToShopPaymentResponse")]
        bool CheckTransferToShopPayment(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckTransferToShopPayment", ReplyAction="http://tempuri.org/IXBService/CheckTransferToShopPaymentResponse")]
        System.Threading.Tasks.Task<bool> CheckTransferToShopPaymentAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransferToShopOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransferToShopOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveTransferToShopOrder(Test.ServiceReference1.TransferToShopOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransferToShopOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransferToShopOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransferToShopOrderAsync(Test.ServiceReference1.TransferToShopOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetShopAccount", ReplyAction="http://tempuri.org/IXBService/GetShopAccountResponse")]
        Test.ServiceReference1.Account GetShopAccount(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetShopAccount", ReplyAction="http://tempuri.org/IXBService/GetShopAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetShopAccountAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferToShopOrder", ReplyAction="http://tempuri.org/IXBService/GetTransferToShopOrderResponse")]
        Test.ServiceReference1.TransferToShopOrder GetTransferToShopOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferToShopOrder", ReplyAction="http://tempuri.org/IXBService/GetTransferToShopOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferToShopOrder> GetTransferToShopOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCOWaterOrderAmount", ReplyAction="http://tempuri.org/IXBService/GetCOWaterOrderAmountResponse")]
        double GetCOWaterOrderAmount(string abonentNumber, string branchCode, ushort paymentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCOWaterOrderAmount", ReplyAction="http://tempuri.org/IXBService/GetCOWaterOrderAmountResponse")]
        System.Threading.Tasks.Task<double> GetCOWaterOrderAmountAsync(string abonentNumber, string branchCode, ushort paymentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardRegistrationWarnings", ReplyAction="http://tempuri.org/IXBService/GetCardRegistrationWarningsResponse")]
        System.Collections.Generic.List<string> GetCardRegistrationWarnings(Test.ServiceReference1.PlasticCard plasticCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardRegistrationWarnings", ReplyAction="http://tempuri.org/IXBService/GetCardRegistrationWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCardRegistrationWarningsAsync(Test.ServiceReference1.PlasticCard plasticCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerProvisions", ReplyAction="http://tempuri.org/IXBService/GetCustomerProvisionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Provision> GetCustomerProvisions(string currency, ushort type, ushort quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerProvisions", ReplyAction="http://tempuri.org/IXBService/GetCustomerProvisionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Provision>> GetCustomerProvisionsAsync(string currency, ushort type, ushort quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProvisionLoans", ReplyAction="http://tempuri.org/IXBService/GetProvisionLoansResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ProvisionLoan> GetProvisionLoans(ulong provisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProvisionLoans", ReplyAction="http://tempuri.org/IXBService/GetProvisionLoansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ProvisionLoan>> GetProvisionLoansAsync(ulong provisionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsurance", ReplyAction="http://tempuri.org/IXBService/GetInsuranceResponse")]
        Test.ServiceReference1.Insurance GetInsurance(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsurance", ReplyAction="http://tempuri.org/IXBService/GetInsuranceResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Insurance> GetInsuranceAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsurances", ReplyAction="http://tempuri.org/IXBService/GetInsurancesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Insurance> GetInsurances(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsurances", ReplyAction="http://tempuri.org/IXBService/GetInsurancesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Insurance>> GetInsurancesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidInsurance", ReplyAction="http://tempuri.org/IXBService/GetPaidInsuranceResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Insurance> GetPaidInsurance(ulong loanProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidInsurance", ReplyAction="http://tempuri.org/IXBService/GetPaidInsuranceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Insurance>> GetPaidInsuranceAsync(ulong loanProductId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsuranceOrder", ReplyAction="http://tempuri.org/IXBService/GetInsuranceOrderResponse")]
        Test.ServiceReference1.InsuranceOrder GetInsuranceOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsuranceOrder", ReplyAction="http://tempuri.org/IXBService/GetInsuranceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.InsuranceOrder> GetInsuranceOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveInsuranceOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveInsuranceOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveInsuranceOrder(Test.ServiceReference1.InsuranceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveInsuranceOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveInsuranceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveInsuranceOrderAsync(Test.ServiceReference1.InsuranceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsuraceCompanySystemAccount", ReplyAction="http://tempuri.org/IXBService/GetInsuraceCompanySystemAccountResponse")]
        Test.ServiceReference1.Account GetInsuraceCompanySystemAccount(ushort companyID, ushort insuranceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsuraceCompanySystemAccount", ReplyAction="http://tempuri.org/IXBService/GetInsuraceCompanySystemAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetInsuraceCompanySystemAccountAsync(ushort companyID, ushort insuranceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsuranceCompanySystemAccountNumber", ReplyAction="http://tempuri.org/IXBService/GetInsuranceCompanySystemAccountNumberResponse")]
        uint GetInsuranceCompanySystemAccountNumber(ushort companyID, ushort insuranceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInsuranceCompanySystemAccountNumber", ReplyAction="http://tempuri.org/IXBService/GetInsuranceCompanySystemAccountNumberResponse")]
        System.Threading.Tasks.Task<uint> GetInsuranceCompanySystemAccountNumberAsync(ushort companyID, ushort insuranceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckAccountForDAHK", ReplyAction="http://tempuri.org/IXBService/CheckAccountForDAHKResponse")]
        bool CheckAccountForDAHK(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckAccountForDAHK", ReplyAction="http://tempuri.org/IXBService/CheckAccountForDAHKResponse")]
        System.Threading.Tasks.Task<bool> CheckAccountForDAHKAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardDataChangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardDataChangeOrder(Test.ServiceReference1.CardDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardDataChangeOrderAsync(Test.ServiceReference1.CardDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardDataChangeOrderResponse")]
        Test.ServiceReference1.CardDataChangeOrder GetCardDataChangeOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardDataChangeOrder> GetCardDataChangeOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckCardDataChangeOrderFieldTypeIsRequaried", ReplyAction="http://tempuri.org/IXBService/CheckCardDataChangeOrderFieldTypeIsRequariedRespons" +
            "e")]
        bool CheckCardDataChangeOrderFieldTypeIsRequaried(short fieldType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckCardDataChangeOrderFieldTypeIsRequaried", ReplyAction="http://tempuri.org/IXBService/CheckCardDataChangeOrderFieldTypeIsRequariedRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> CheckCardDataChangeOrderFieldTypeIsRequariedAsync(short fieldType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardServiceFeeGrafikDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardServiceFeeGrafikDataChangeOrderRe" +
            "sponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardServiceFeeGrafikDataChangeOrder(Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardServiceFeeGrafikDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardServiceFeeGrafikDataChangeOrderRe" +
            "sponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardServiceFeeGrafikDataChangeOrderAsync(Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardServiceFeeGrafikDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardServiceFeeGrafikDataChangeOrderResponse")]
        Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder GetCardServiceFeeGrafikDataChangeOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardServiceFeeGrafikDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardServiceFeeGrafikDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder> GetCardServiceFeeGrafikDataChangeOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SetNewCardServiceFeeGrafik", ReplyAction="http://tempuri.org/IXBService/SetNewCardServiceFeeGrafikResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik> SetNewCardServiceFeeGrafik(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SetNewCardServiceFeeGrafik", ReplyAction="http://tempuri.org/IXBService/SetNewCardServiceFeeGrafikResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik>> SetNewCardServiceFeeGrafikAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGivenGuaranteeReductions", ReplyAction="http://tempuri.org/IXBService/GetGivenGuaranteeReductionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.GivenGuaranteeReduction> GetGivenGuaranteeReductions(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGivenGuaranteeReductions", ReplyAction="http://tempuri.org/IXBService/GetGivenGuaranteeReductionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.GivenGuaranteeReduction>> GetGivenGuaranteeReductionsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReestrUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReestrUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveReestrUtilityPaymentOrder(Test.ServiceReference1.ReestrUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReestrUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReestrUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReestrUtilityPaymentOrderAsync(Test.ServiceReference1.ReestrUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReestrUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetReestrUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ReestrUtilityPaymentOrder GetReestrUtilityPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReestrUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetReestrUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ReestrUtilityPaymentOrder> GetReestrUtilityPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountAdditionalDataRemovableOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountAdditionalDataRemovableOrderRe" +
            "sponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountAdditionalDataRemovableOrder(Test.ServiceReference1.AccountAdditionalDataRemovableOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountAdditionalDataRemovableOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountAdditionalDataRemovableOrderRe" +
            "sponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountAdditionalDataRemovableOrderAsync(Test.ServiceReference1.AccountAdditionalDataRemovableOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardDAHKDetails", ReplyAction="http://tempuri.org/IXBService/GetCardDAHKDetailsResponse")]
        Test.ServiceReference1.DAHKDetail GetCardDAHKDetails(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardDAHKDetails", ReplyAction="http://tempuri.org/IXBService/GetCardDAHKDetailsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DAHKDetail> GetCardDAHKDetailsAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsDAHKAvailability", ReplyAction="http://tempuri.org/IXBService/IsDAHKAvailabilityResponse")]
        bool IsDAHKAvailability(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsDAHKAvailability", ReplyAction="http://tempuri.org/IXBService/IsDAHKAvailabilityResponse")]
        System.Threading.Tasks.Task<bool> IsDAHKAvailabilityAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPlasticCard", ReplyAction="http://tempuri.org/IXBService/GetPlasticCardResponse")]
        Test.ServiceReference1.PlasticCard GetPlasticCard(ulong productId, bool productIdType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPlasticCard", ReplyAction="http://tempuri.org/IXBService/GetPlasticCardResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PlasticCard> GetPlasticCardAsync(ulong productId, bool productIdType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardAccountsForCardReNewRePlace", ReplyAction="http://tempuri.org/IXBService/GetCardAccountsForCardReNewRePlaceResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetCardAccountsForCardReNewRePlace(string cardCurrency, int cardFililal, ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardAccountsForCardReNewRePlace", ReplyAction="http://tempuri.org/IXBService/GetCardAccountsForCardReNewRePlaceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetCardAccountsForCardReNewRePlaceAsync(string cardCurrency, int cardFililal, ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOverdraftAccountsForCardReNewRePlace", ReplyAction="http://tempuri.org/IXBService/GetOverdraftAccountsForCardReNewRePlaceResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetOverdraftAccountsForCardReNewRePlace(string cardCurrency, int cardFililal, ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOverdraftAccountsForCardReNewRePlace", ReplyAction="http://tempuri.org/IXBService/GetOverdraftAccountsForCardReNewRePlaceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetOverdraftAccountsForCardReNewRePlaceAsync(string cardCurrency, int cardFililal, ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardReNewOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardReNewOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardReNewOrder(Test.ServiceReference1.CardReNewOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardReNewOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardReNewOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardReNewOrderAsync(Test.ServiceReference1.CardReNewOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardReNewRePlaceWarnings", ReplyAction="http://tempuri.org/IXBService/GetCardReNewRePlaceWarningsResponse")]
        System.Collections.Generic.List<string> GetCardReNewRePlaceWarnings(Test.ServiceReference1.Card oldCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardReNewRePlaceWarnings", ReplyAction="http://tempuri.org/IXBService/GetCardReNewRePlaceWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCardReNewRePlaceWarningsAsync(Test.ServiceReference1.Card oldCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPoliceResponseDetailsIDWithoutRequest", ReplyAction="http://tempuri.org/IXBService/GetPoliceResponseDetailsIDWithoutRequestResponse")]
        int GetPoliceResponseDetailsIDWithoutRequest(string violationID, System.DateTime violationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPoliceResponseDetailsIDWithoutRequest", ReplyAction="http://tempuri.org/IXBService/GetPoliceResponseDetailsIDWithoutRequestResponse")]
        System.Threading.Tasks.Task<int> GetPoliceResponseDetailsIDWithoutRequestAsync(string violationID, System.DateTime violationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardReNewOrder", ReplyAction="http://tempuri.org/IXBService/GetCardReNewOrderResponse")]
        Test.ServiceReference1.CardReNewOrder GetCardReNewOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardReNewOrder", ReplyAction="http://tempuri.org/IXBService/GetCardReNewOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardReNewOrder> GetCardReNewOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardRePlaceOrder", ReplyAction="http://tempuri.org/IXBService/GetCardRePlaceOrderResponse")]
        Test.ServiceReference1.CardRePlaceOrder GetCardRePlaceOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardRePlaceOrder", ReplyAction="http://tempuri.org/IXBService/GetCardRePlaceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardRePlaceOrder> GetCardRePlaceOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardRePlaceOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardRePlaceOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardRePlaceOrder(Test.ServiceReference1.CardRePlaceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardRePlaceOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardRePlaceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardRePlaceOrderAsync(Test.ServiceReference1.CardRePlaceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderTransactionsGroupNumber", ReplyAction="http://tempuri.org/IXBService/GetOrderTransactionsGroupNumberResponse")]
        ulong GetOrderTransactionsGroupNumber(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderTransactionsGroupNumber", ReplyAction="http://tempuri.org/IXBService/GetOrderTransactionsGroupNumberResponse")]
        System.Threading.Tasks.Task<ulong> GetOrderTransactionsGroupNumberAsync(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetATSSystemAccounts", ReplyAction="http://tempuri.org/IXBService/GetATSSystemAccountsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetATSSystemAccounts(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetATSSystemAccounts", ReplyAction="http://tempuri.org/IXBService/GetATSSystemAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetATSSystemAccountsAsync(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetArCaBalanceResponseData", ReplyAction="http://tempuri.org/IXBService/GetArCaBalanceResponseDataResponse")]
        Test.ServiceReference1.ArcaBalanceResponseData GetArCaBalanceResponseData(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetArCaBalanceResponseData", ReplyAction="http://tempuri.org/IXBService/GetArCaBalanceResponseDataResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ArcaBalanceResponseData> GetArCaBalanceResponseDataAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasATSSystemAccountInFilial", ReplyAction="http://tempuri.org/IXBService/HasATSSystemAccountInFilialResponse")]
        bool HasATSSystemAccountInFilial();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasATSSystemAccountInFilial", ReplyAction="http://tempuri.org/IXBService/HasATSSystemAccountInFilialResponse")]
        System.Threading.Tasks.Task<bool> HasATSSystemAccountInFilialAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductClassifications", ReplyAction="http://tempuri.org/IXBService/GetLoanProductClassificationsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanProductClassification> GetLoanProductClassifications(ulong productId, System.DateTime dateFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductClassifications", ReplyAction="http://tempuri.org/IXBService/GetLoanProductClassificationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanProductClassification>> GetLoanProductClassificationsAsync(ulong productId, System.DateTime dateFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSafekeepingItems", ReplyAction="http://tempuri.org/IXBService/GetSafekeepingItemsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SafekeepingItem> GetSafekeepingItems(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSafekeepingItems", ReplyAction="http://tempuri.org/IXBService/GetSafekeepingItemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SafekeepingItem>> GetSafekeepingItemsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSafekeepingItem", ReplyAction="http://tempuri.org/IXBService/GetSafekeepingItemResponse")]
        Test.ServiceReference1.SafekeepingItem GetSafekeepingItem(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSafekeepingItem", ReplyAction="http://tempuri.org/IXBService/GetSafekeepingItemResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.SafekeepingItem> GetSafekeepingItemAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetExchangeRatesHistory", ReplyAction="http://tempuri.org/IXBService/GetExchangeRatesHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate> GetExchangeRatesHistory(int filialCode, string currency, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetExchangeRatesHistory", ReplyAction="http://tempuri.org/IXBService/GetExchangeRatesHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate>> GetExchangeRatesHistoryAsync(int filialCode, string currency, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCrossExchangeRatesHistory", ReplyAction="http://tempuri.org/IXBService/GetCrossExchangeRatesHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CrossExchangeRate> GetCrossExchangeRatesHistory(int filialCode, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCrossExchangeRatesHistory", ReplyAction="http://tempuri.org/IXBService/GetCrossExchangeRatesHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CrossExchangeRate>> GetCrossExchangeRatesHistoryAsync(int filialCode, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitAccountsForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/GetTransitAccountsForDebitTransactionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetTransitAccountsForDebitTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitAccountsForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/GetTransitAccountsForDebitTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetTransitAccountsForDebitTransactionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAllTransitAccountsForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/GetAllTransitAccountsForDebitTransactionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.TransitAccountForDebitTransactions> GetAllTransitAccountsForDebitTransactions(Test.ServiceReference1.ProductQualityFilter quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAllTransitAccountsForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/GetAllTransitAccountsForDebitTransactionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TransitAccountForDebitTransactions>> GetAllTransitAccountsForDebitTransactionsAsync(Test.ServiceReference1.ProductQualityFilter quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardCashbackAccount", ReplyAction="http://tempuri.org/IXBService/GetCardCashbackAccountResponse")]
        Test.ServiceReference1.Account GetCardCashbackAccount(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardCashbackAccount", ReplyAction="http://tempuri.org/IXBService/GetCardCashbackAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetCardCashbackAccountAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardMotherName", ReplyAction="http://tempuri.org/IXBService/GetCardMotherNameResponse")]
        string GetCardMotherName(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardMotherName", ReplyAction="http://tempuri.org/IXBService/GetCardMotherNameResponse")]
        System.Threading.Tasks.Task<string> GetCardMotherNameAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCBExchangeRatesHistory", ReplyAction="http://tempuri.org/IXBService/GetCBExchangeRatesHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate> GetCBExchangeRatesHistory(string currency, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCBExchangeRatesHistory", ReplyAction="http://tempuri.org/IXBService/GetCBExchangeRatesHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate>> GetCBExchangeRatesHistoryAsync(string currency, System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCorrespondentBankAccounts", ReplyAction="http://tempuri.org/IXBService/GetCorrespondentBankAccountsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CorrespondentBankAccount> GetCorrespondentBankAccounts(Test.ServiceReference1.CorrespondentBankAccount filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCorrespondentBankAccounts", ReplyAction="http://tempuri.org/IXBService/GetCorrespondentBankAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CorrespondentBankAccount>> GetCorrespondentBankAccountsAsync(Test.ServiceReference1.CorrespondentBankAccount filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardStatusChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardStatusChangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardStatusChangeOrder(Test.ServiceReference1.CardStatusChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardStatusChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardStatusChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardStatusChangeOrderAsync(Test.ServiceReference1.CardStatusChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardStatusChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardStatusChangeOrderResponse")]
        Test.ServiceReference1.CardStatusChangeOrder GetCardStatusChangeOrder(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardStatusChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardStatusChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardStatusChangeOrder> GetCardStatusChangeOrderAsync(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveTransitAccountForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/SaveTransitAccountForDebitTransactionsResponse")]
        Test.ServiceReference1.ActionResult SaveTransitAccountForDebitTransactions(Test.ServiceReference1.TransitAccountForDebitTransactions account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveTransitAccountForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/SaveTransitAccountForDebitTransactionsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveTransitAccountForDebitTransactionsAsync(Test.ServiceReference1.TransitAccountForDebitTransactions account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CloseTransitAccountForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/CloseTransitAccountForDebitTransactionsResponse")]
        Test.ServiceReference1.ActionResult CloseTransitAccountForDebitTransactions(Test.ServiceReference1.TransitAccountForDebitTransactions account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CloseTransitAccountForDebitTransactions", ReplyAction="http://tempuri.org/IXBService/CloseTransitAccountForDebitTransactionsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CloseTransitAccountForDebitTransactionsAsync(Test.ServiceReference1.TransitAccountForDebitTransactions account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetBusinesDepositOptionRate", ReplyAction="http://tempuri.org/IXBService/GetBusinesDepositOptionRateResponse")]
        double GetBusinesDepositOptionRate(ushort depositOption, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetBusinesDepositOptionRate", ReplyAction="http://tempuri.org/IXBService/GetBusinesDepositOptionRateResponse")]
        System.Threading.Tasks.Task<double> GetBusinesDepositOptionRateAsync(ushort depositOption, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardActivationInArCa", ReplyAction="http://tempuri.org/IXBService/GetCardActivationInArCaResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCa> GetCardActivationInArCa(string cardNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardActivationInArCa", ReplyAction="http://tempuri.org/IXBService/GetCardActivationInArCaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCa>> GetCardActivationInArCaAsync(string cardNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLastSendedPaymentFileDate", ReplyAction="http://tempuri.org/IXBService/GetLastSendedPaymentFileDateResponse")]
        System.Nullable<System.DateTime> GetLastSendedPaymentFileDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLastSendedPaymentFileDate", ReplyAction="http://tempuri.org/IXBService/GetLastSendedPaymentFileDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetLastSendedPaymentFileDateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardActivationInArCaApigateDetail", ReplyAction="http://tempuri.org/IXBService/GetCardActivationInArCaApigateDetailResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCaApigateDetails> GetCardActivationInArCaApigateDetail(ulong Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardActivationInArCaApigateDetail", ReplyAction="http://tempuri.org/IXBService/GetCardActivationInArCaApigateDetailResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCaApigateDetails>> GetCardActivationInArCaApigateDetailAsync(ulong Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCustomerCommunalCard", ReplyAction="http://tempuri.org/IXBService/SaveCustomerCommunalCardResponse")]
        Test.ServiceReference1.ActionResult SaveCustomerCommunalCard(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCustomerCommunalCard", ReplyAction="http://tempuri.org/IXBService/SaveCustomerCommunalCardResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCustomerCommunalCardAsync(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ChangeCustomerCommunalCardQuality", ReplyAction="http://tempuri.org/IXBService/ChangeCustomerCommunalCardQualityResponse")]
        Test.ServiceReference1.ActionResult ChangeCustomerCommunalCardQuality(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ChangeCustomerCommunalCardQuality", ReplyAction="http://tempuri.org/IXBService/ChangeCustomerCommunalCardQualityResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ChangeCustomerCommunalCardQualityAsync(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerCommunalCards", ReplyAction="http://tempuri.org/IXBService/GetCustomerCommunalCardsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CustomerCommunalCard> GetCustomerCommunalCards();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerCommunalCards", ReplyAction="http://tempuri.org/IXBService/GetCustomerCommunalCardsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CustomerCommunalCard>> GetCustomerCommunalCardsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetComunalAmountPaidThisMonth", ReplyAction="http://tempuri.org/IXBService/GetComunalAmountPaidThisMonthResponse")]
        System.Collections.Generic.List<double> GetComunalAmountPaidThisMonth(string code, short comunalType, short abonentType, System.DateTime DebtListDate, string texCode, int waterCoPaymentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetComunalAmountPaidThisMonth", ReplyAction="http://tempuri.org/IXBService/GetComunalAmountPaidThisMonthResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<double>> GetComunalAmountPaidThisMonthAsync(string code, short comunalType, short abonentType, System.DateTime DebtListDate, string texCode, int waterCoPaymentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveFactoringTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveFactoringTerminationOrder(Test.ServiceReference1.FactoringTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveFactoringTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveFactoringTerminationOrderAsync(Test.ServiceReference1.FactoringTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetFactoringTerminationOrderResponse")]
        Test.ServiceReference1.FactoringTerminationOrder GetFactoringTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetFactoringTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.FactoringTerminationOrder> GetFactoringTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveFactoringTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveFactoringTerminationOrder(Test.ServiceReference1.FactoringTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveFactoringTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveFactoringTerminationOrderAsync(Test.ServiceReference1.FactoringTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveFactoringTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveFactoringTerminationOrder(Test.ServiceReference1.FactoringTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveFactoringTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveFactoringTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveFactoringTerminationOrderAsync(Test.ServiceReference1.FactoringTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveLoanProductTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveLoanProductTerminationOrder(Test.ServiceReference1.LoanProductTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveLoanProductTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanProductTerminationOrderAsync(Test.ServiceReference1.LoanProductTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetLoanProductTerminationOrderResponse")]
        Test.ServiceReference1.LoanProductTerminationOrder GetLoanProductTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetLoanProductTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductTerminationOrder> GetLoanProductTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveLoanProductTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveLoanProductTerminationOrder(Test.ServiceReference1.LoanProductTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveLoanProductTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveLoanProductTerminationOrderAsync(Test.ServiceReference1.LoanProductTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveLoanProductTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveLoanProductTerminationOrder(Test.ServiceReference1.LoanProductTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanProductTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveLoanProductTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanProductTerminationOrderAsync(Test.ServiceReference1.LoanProductTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetShopTransferAmount", ReplyAction="http://tempuri.org/IXBService/GetShopTransferAmountResponse")]
        double GetShopTransferAmount(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetShopTransferAmount", ReplyAction="http://tempuri.org/IXBService/GetShopTransferAmountResponse")]
        System.Threading.Tasks.Task<double> GetShopTransferAmountAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveDepositDataChangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveDepositDataChangeOrder(Test.ServiceReference1.DepositDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveDepositDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveDepositDataChangeOrderAsync(Test.ServiceReference1.DepositDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositDataChangeOrderResponse")]
        Test.ServiceReference1.DepositDataChangeOrder GetDepositDataChangeOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositDataChangeOrder> GetDepositDataChangeOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/ApproveDepositDataChangeOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveDepositDataChangeOrder(Test.ServiceReference1.DepositDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/ApproveDepositDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveDepositDataChangeOrderAsync(Test.ServiceReference1.DepositDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositDataChangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveDepositDataChangeOrder(Test.ServiceReference1.DepositDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositDataChangeOrderAsync(Test.ServiceReference1.DepositDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositActions", ReplyAction="http://tempuri.org/IXBService/GetDepositActionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DepositAction> GetDepositActions(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositActions", ReplyAction="http://tempuri.org/IXBService/GetDepositActionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositAction>> GetDepositActionsAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetENAPayments", ReplyAction="http://tempuri.org/IXBService/GetENAPaymentsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ENAPayments> GetENAPayments(string abonentNumber, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetENAPayments", ReplyAction="http://tempuri.org/IXBService/GetENAPaymentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ENAPayments>> GetENAPaymentsAsync(string abonentNumber, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetENAPaymentDates", ReplyAction="http://tempuri.org/IXBService/GetENAPaymentDatesResponse")]
        System.Collections.Generic.List<System.DateTime> GetENAPaymentDates(string abonentNumber, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetENAPaymentDates", ReplyAction="http://tempuri.org/IXBService/GetENAPaymentDatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.DateTime>> GetENAPaymentDatesAsync(string abonentNumber, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanTotalInsuranceAmount", ReplyAction="http://tempuri.org/IXBService/GetLoanTotalInsuranceAmountResponse")]
        double GetLoanTotalInsuranceAmount(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanTotalInsuranceAmount", ReplyAction="http://tempuri.org/IXBService/GetLoanTotalInsuranceAmountResponse")]
        System.Threading.Tasks.Task<double> GetLoanTotalInsuranceAmountAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductAccount", ReplyAction="http://tempuri.org/IXBService/GetProductAccountResponse")]
        Test.ServiceReference1.Account GetProductAccount(ulong productId, ushort productType, ushort accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductAccount", ReplyAction="http://tempuri.org/IXBService/GetProductAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetProductAccountAsync(ulong productId, ushort productType, ushort accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductAccountFromCreditCode", ReplyAction="http://tempuri.org/IXBService/GetProductAccountFromCreditCodeResponse")]
        Test.ServiceReference1.Account GetProductAccountFromCreditCode(string creditCode, ushort productType, ushort accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductAccountFromCreditCode", ReplyAction="http://tempuri.org/IXBService/GetProductAccountFromCreditCodeResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetProductAccountFromCreditCodeAsync(string creditCode, ushort productType, ushort accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashBookOrder", ReplyAction="http://tempuri.org/IXBService/GetCashBookOrderResponse")]
        Test.ServiceReference1.CashBookOrder GetCashBookOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashBookOrder", ReplyAction="http://tempuri.org/IXBService/GetCashBookOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CashBookOrder> GetCashBookOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashBookOperationSystemAccount", ReplyAction="http://tempuri.org/IXBService/GetCashBookOperationSystemAccountResponse")]
        Test.ServiceReference1.Account GetCashBookOperationSystemAccount(Test.ServiceReference1.CashBookOrder order, Test.ServiceReference1.OrderAccountType accountType, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashBookOperationSystemAccount", ReplyAction="http://tempuri.org/IXBService/GetCashBookOperationSystemAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetCashBookOperationSystemAccountAsync(Test.ServiceReference1.CashBookOrder order, Test.ServiceReference1.OrderAccountType accountType, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplication", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationResponse")]
        Test.ServiceReference1.LoanApplication GetLoanApplication(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplication", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanApplication> GetLoanApplicationAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplications", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanApplication> GetLoanApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplications", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanApplication>> GetLoanApplicationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplicationFicoScoreResults", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationFicoScoreResultsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.FicoScoreResult> GetLoanApplicationFicoScoreResults(ulong productId, System.DateTime requestDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplicationFicoScoreResults", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationFicoScoreResultsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.FicoScoreResult>> GetLoanApplicationFicoScoreResultsAsync(ulong productId, System.DateTime requestDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/FastOverdraftValidations", ReplyAction="http://tempuri.org/IXBService/FastOverdraftValidationsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ActionError> FastOverdraftValidations(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/FastOverdraftValidations", ReplyAction="http://tempuri.org/IXBService/FastOverdraftValidationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ActionError>> FastOverdraftValidationsAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplicationByDocId", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationByDocIdResponse")]
        Test.ServiceReference1.LoanApplication GetLoanApplicationByDocId(long docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanApplicationByDocId", ReplyAction="http://tempuri.org/IXBService/GetLoanApplicationByDocIdResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanApplication> GetLoanApplicationByDocIdAsync(long docId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariffContracts", ReplyAction="http://tempuri.org/IXBService/GetCardTariffContractsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract> GetCardTariffContracts(Test.ServiceReference1.ProductQualityFilter filter, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariffContracts", ReplyAction="http://tempuri.org/IXBService/GetCardTariffContractsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract>> GetCardTariffContractsAsync(Test.ServiceReference1.ProductQualityFilter filter, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositCaseStoppingPenaltyCalculation" +
            "Order", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositCaseStoppingPenaltyCalculation" +
            "OrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveDepositCaseStoppingPenaltyCalculationOrder(Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositCaseStoppingPenaltyCalculation" +
            "Order", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositCaseStoppingPenaltyCalculation" +
            "OrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositCaseStoppingPenaltyCalculationOrderAsync(Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerAvailableAmount", ReplyAction="http://tempuri.org/IXBService/GetCustomerAvailableAmountResponse")]
        double GetCustomerAvailableAmount(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerAvailableAmount", ReplyAction="http://tempuri.org/IXBService/GetCustomerAvailableAmountResponse")]
        System.Threading.Tasks.Task<double> GetCustomerAvailableAmountAsync(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductInterestRate", ReplyAction="http://tempuri.org/IXBService/GetLoanProductInterestRateResponse")]
        double GetLoanProductInterestRate(Test.ServiceReference1.LoanProductOrder order, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductInterestRate", ReplyAction="http://tempuri.org/IXBService/GetLoanProductInterestRateResponse")]
        System.Threading.Tasks.Task<double> GetLoanProductInterestRateAsync(Test.ServiceReference1.LoanProductOrder order, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/SaveLoanProductActivationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveLoanProductActivationOrder(Test.ServiceReference1.LoanProductActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/SaveLoanProductActivationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanProductActivationOrderAsync(Test.ServiceReference1.LoanProductActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/GetLoanProductActivationOrderResponse")]
        Test.ServiceReference1.LoanProductActivationOrder GetLoanProductActivationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/GetLoanProductActivationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductActivationOrder> GetLoanProductActivationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveLoanProductActivationOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveLoanProductActivationOrder(Test.ServiceReference1.LoanProductActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveLoanProductActivationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanProductActivationOrderAsync(Test.ServiceReference1.LoanProductActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountFreezeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountFreezeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountFreezeOrder(Test.ServiceReference1.AccountFreezeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountFreezeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountFreezeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountFreezeOrderAsync(Test.ServiceReference1.AccountFreezeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFreezeOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountFreezeOrderResponse")]
        Test.ServiceReference1.AccountFreezeOrder GetAccountFreezeOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFreezeOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountFreezeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountFreezeOrder> GetAccountFreezeOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveLoanProductActivationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveLoanProductActivationOrder(Test.ServiceReference1.LoanProductActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveLoanProductActivationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveLoanProductActivationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveLoanProductActivationOrderAsync(Test.ServiceReference1.LoanProductActivationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountUnfreezeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountUnfreezeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountUnfreezeOrder(Test.ServiceReference1.AccountUnfreezeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountUnfreezeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountUnfreezeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountUnfreezeOrderAsync(Test.ServiceReference1.AccountUnfreezeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountUnfreezeOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountUnfreezeOrderResponse")]
        Test.ServiceReference1.AccountUnfreezeOrder GetAccountUnfreezeOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountUnfreezeOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountUnfreezeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountUnfreezeOrder> GetAccountUnfreezeOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetServiceProvidedOrderFee", ReplyAction="http://tempuri.org/IXBService/GetServiceProvidedOrderFeeResponse")]
        double GetServiceProvidedOrderFee(Test.ServiceReference1.OrderType orderType, ushort serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetServiceProvidedOrderFee", ReplyAction="http://tempuri.org/IXBService/GetServiceProvidedOrderFeeResponse")]
        System.Threading.Tasks.Task<double> GetServiceProvidedOrderFeeAsync(Test.ServiceReference1.OrderType orderType, ushort serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveFeeForServiceProvidedOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveFeeForServiceProvidedOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveFeeForServiceProvidedOrder(Test.ServiceReference1.FeeForServiceProvidedOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveFeeForServiceProvidedOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveFeeForServiceProvidedOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveFeeForServiceProvidedOrderAsync(Test.ServiceReference1.FeeForServiceProvidedOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrder", ReplyAction="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrderResponse")]
        Test.ServiceReference1.FeeForServiceProvidedOrder GetFeeForServiceProvidedOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrder", ReplyAction="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.FeeForServiceProvidedOrder> GetFeeForServiceProvidedOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashPosPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetCashPosPaymentOrderResponse")]
        Test.ServiceReference1.CashPosPaymentOrder GetCashPosPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashPosPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetCashPosPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CashPosPaymentOrder> GetCashPosPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasPhoneBanking", ReplyAction="http://tempuri.org/IXBService/HasPhoneBankingResponse")]
        Test.ServiceReference1.HasHB HasPhoneBanking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasPhoneBanking", ReplyAction="http://tempuri.org/IXBService/HasPhoneBankingResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.HasHB> HasPhoneBankingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardUnpaidPercentPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetCardUnpaidPercentPaymentOrderResponse")]
        Test.ServiceReference1.CardUnpaidPercentPaymentOrder GetCardUnpaidPercentPaymentOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardUnpaidPercentPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetCardUnpaidPercentPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardUnpaidPercentPaymentOrder> GetCardUnpaidPercentPaymentOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardUnpaidPercentPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardUnpaidPercentPaymentOrderResponse" +
            "")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardUnpaidPercentPaymentOrder(Test.ServiceReference1.CardUnpaidPercentPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardUnpaidPercentPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardUnpaidPercentPaymentOrderResponse" +
            "")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardUnpaidPercentPaymentOrderAsync(Test.ServiceReference1.CardUnpaidPercentPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductProvisions", ReplyAction="http://tempuri.org/IXBService/GetProductProvisionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Provision> GetProductProvisions(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductProvisions", ReplyAction="http://tempuri.org/IXBService/GetProductProvisionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Provision>> GetProductProvisionsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveRemovalOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveRemovalOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveRemovalOrder(Test.ServiceReference1.RemovalOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveRemovalOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveRemovalOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveRemovalOrderAsync(Test.ServiceReference1.RemovalOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRemovalOrder", ReplyAction="http://tempuri.org/IXBService/GetRemovalOrderResponse")]
        Test.ServiceReference1.RemovalOrder GetRemovalOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRemovalOrder", ReplyAction="http://tempuri.org/IXBService/GetRemovalOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.RemovalOrder> GetRemovalOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProvisionOwners", ReplyAction="http://tempuri.org/IXBService/GetProvisionOwnersResponse")]
        System.Collections.Generic.List<ulong> GetProvisionOwners(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProvisionOwners", ReplyAction="http://tempuri.org/IXBService/GetProvisionOwnersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ulong>> GetProvisionOwnersAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMainContract", ReplyAction="http://tempuri.org/IXBService/GetLoanMainContractResponse")]
        Test.ServiceReference1.LoanMainContract GetLoanMainContract(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMainContract", ReplyAction="http://tempuri.org/IXBService/GetLoanMainContractResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanMainContract> GetLoanMainContractAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsOurCard", ReplyAction="http://tempuri.org/IXBService/IsOurCardResponse")]
        bool IsOurCard(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsOurCard", ReplyAction="http://tempuri.org/IXBService/IsOurCardResponse")]
        System.Threading.Tasks.Task<bool> IsOurCardAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositSource", ReplyAction="http://tempuri.org/IXBService/GetDepositSourceResponse")]
        Test.ServiceReference1.SourceType GetDepositSource(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositSource", ReplyAction="http://tempuri.org/IXBService/GetDepositSourceResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.SourceType> GetDepositSourceAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountSource", ReplyAction="http://tempuri.org/IXBService/GetAccountSourceResponse")]
        Test.ServiceReference1.SourceType GetAccountSource(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountSource", ReplyAction="http://tempuri.org/IXBService/GetAccountSourceResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.SourceType> GetAccountSourceAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAcccountAvailableBalance", ReplyAction="http://tempuri.org/IXBService/GetAcccountAvailableBalanceResponse")]
        double GetAcccountAvailableBalance(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAcccountAvailableBalance", ReplyAction="http://tempuri.org/IXBService/GetAcccountAvailableBalanceResponse")]
        System.Threading.Tasks.Task<double> GetAcccountAvailableBalanceAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineMainContract", ReplyAction="http://tempuri.org/IXBService/GetCreditLineMainContractResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanMainContract> GetCreditLineMainContract();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineMainContract", ReplyAction="http://tempuri.org/IXBService/GetCreditLineMainContractResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanMainContract>> GetCreditLineMainContractAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductProlongations", ReplyAction="http://tempuri.org/IXBService/GetLoanProductProlongationsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanProductProlongation> GetLoanProductProlongations(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductProlongations", ReplyAction="http://tempuri.org/IXBService/GetLoanProductProlongationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanProductProlongation>> GetLoanProductProlongationsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductOtherFees", ReplyAction="http://tempuri.org/IXBService/GetProductOtherFeesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ProductOtherFee> GetProductOtherFees(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductOtherFees", ReplyAction="http://tempuri.org/IXBService/GetProductOtherFeesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ProductOtherFee>> GetProductOtherFeesAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductClaims", ReplyAction="http://tempuri.org/IXBService/GetProductClaimsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Claim> GetProductClaims(ulong productId, short productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductClaims", ReplyAction="http://tempuri.org/IXBService/GetProductClaimsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Claim>> GetProductClaimsAsync(ulong productId, short productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetClaimEvents", ReplyAction="http://tempuri.org/IXBService/GetClaimEventsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ClaimEvent> GetClaimEvents(int claimNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetClaimEvents", ReplyAction="http://tempuri.org/IXBService/GetClaimEventsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ClaimEvent>> GetClaimEventsAsync(int claimNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTax", ReplyAction="http://tempuri.org/IXBService/GetTaxResponse")]
        Test.ServiceReference1.Tax GetTax(int claimNumber, int eventNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTax", ReplyAction="http://tempuri.org/IXBService/GetTaxResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Tax> GetTaxAsync(int claimNumber, int eventNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardMembershipRewardsStatusHistory", ReplyAction="http://tempuri.org/IXBService/GetCardMembershipRewardsStatusHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.MembershipRewardsStatusHistory> GetCardMembershipRewardsStatusHistory(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardMembershipRewardsStatusHistory", ReplyAction="http://tempuri.org/IXBService/GetCardMembershipRewardsStatusHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.MembershipRewardsStatusHistory>> GetCardMembershipRewardsStatusHistoryAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveChequeBookReceiveOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveChequeBookReceiveOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveChequeBookReceiveOrder(Test.ServiceReference1.ChequeBookReceiveOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveChequeBookReceiveOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveChequeBookReceiveOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveChequeBookReceiveOrderAsync(Test.ServiceReference1.ChequeBookReceiveOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetChequeBookReceiveOrder", ReplyAction="http://tempuri.org/IXBService/GetChequeBookReceiveOrderResponse")]
        Test.ServiceReference1.ChequeBookReceiveOrder GetChequeBookReceiveOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetChequeBookReceiveOrder", ReplyAction="http://tempuri.org/IXBService/GetChequeBookReceiveOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ChequeBookReceiveOrder> GetChequeBookReceiveOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasAccountPensionApplication", ReplyAction="http://tempuri.org/IXBService/HasAccountPensionApplicationResponse")]
        bool HasAccountPensionApplication(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasAccountPensionApplication", ReplyAction="http://tempuri.org/IXBService/HasAccountPensionApplicationResponse")]
        System.Threading.Tasks.Task<bool> HasAccountPensionApplicationAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardServiceFeeGrafik", ReplyAction="http://tempuri.org/IXBService/GetCardServiceFeeGrafikResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik> GetCardServiceFeeGrafik(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardServiceFeeGrafik", ReplyAction="http://tempuri.org/IXBService/GetCardServiceFeeGrafikResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik>> GetCardServiceFeeGrafikAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariffContract", ReplyAction="http://tempuri.org/IXBService/GetCardTariffContractResponse")]
        Test.ServiceReference1.CardTariffContract GetCardTariffContract(long tariffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariffContract", ReplyAction="http://tempuri.org/IXBService/GetCardTariffContractResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardTariffContract> GetCardTariffContractAsync(long tariffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrderCreditAccount", ReplyAction="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrderCreditAccountResponse")]
        Test.ServiceReference1.Account GetFeeForServiceProvidedOrderCreditAccount(Test.ServiceReference1.FeeForServiceProvidedOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrderCreditAccount", ReplyAction="http://tempuri.org/IXBService/GetFeeForServiceProvidedOrderCreditAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetFeeForServiceProvidedOrderCreditAccountAsync(Test.ServiceReference1.FeeForServiceProvidedOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariff", ReplyAction="http://tempuri.org/IXBService/GetCardTariffResponse")]
        Test.ServiceReference1.CardTariff GetCardTariff(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTariff", ReplyAction="http://tempuri.org/IXBService/GetCardTariffResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardTariff> GetCardTariffAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedInternationalTransfers", ReplyAction="http://tempuri.org/IXBService/GetSearchedInternationalTransfersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchInternationalTransfer> GetSearchedInternationalTransfers(Test.ServiceReference1.SearchInternationalTransfer searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedInternationalTransfers", ReplyAction="http://tempuri.org/IXBService/GetSearchedInternationalTransfersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchInternationalTransfer>> GetSearchedInternationalTransfersAsync(Test.ServiceReference1.SearchInternationalTransfer searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedReceivedTransfers", ReplyAction="http://tempuri.org/IXBService/GetSearchedReceivedTransfersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchReceivedTransfer> GetSearchedReceivedTransfers(Test.ServiceReference1.SearchReceivedTransfer searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedReceivedTransfers", ReplyAction="http://tempuri.org/IXBService/GetSearchedReceivedTransfersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchReceivedTransfer>> GetSearchedReceivedTransfersAsync(Test.ServiceReference1.SearchReceivedTransfer searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedTransfersBankMail", ReplyAction="http://tempuri.org/IXBService/GetSearchedTransfersBankMailResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchTransferBankMail> GetSearchedTransfersBankMail(Test.ServiceReference1.SearchTransferBankMail searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedTransfersBankMail", ReplyAction="http://tempuri.org/IXBService/GetSearchedTransfersBankMailResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchTransferBankMail>> GetSearchedTransfersBankMailAsync(Test.ServiceReference1.SearchTransferBankMail searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedBudgetAccount", ReplyAction="http://tempuri.org/IXBService/GetSearchedBudgetAccountResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchBudgetAccount> GetSearchedBudgetAccount(Test.ServiceReference1.SearchBudgetAccount searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedBudgetAccount", ReplyAction="http://tempuri.org/IXBService/GetSearchedBudgetAccountResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchBudgetAccount>> GetSearchedBudgetAccountAsync(Test.ServiceReference1.SearchBudgetAccount searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardStatus", ReplyAction="http://tempuri.org/IXBService/GetCardStatusResponse")]
        Test.ServiceReference1.CardStatus GetCardStatus(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardStatus", ReplyAction="http://tempuri.org/IXBService/GetCardStatusResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardStatus> GetCardStatusAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOperationSystemAccountForFee", ReplyAction="http://tempuri.org/IXBService/GetOperationSystemAccountForFeeResponse")]
        Test.ServiceReference1.Account GetOperationSystemAccountForFee(Test.ServiceReference1.Order order, short feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOperationSystemAccountForFee", ReplyAction="http://tempuri.org/IXBService/GetOperationSystemAccountForFeeResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetOperationSystemAccountForFeeAsync(Test.ServiceReference1.Order order, short feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentOperDay", ReplyAction="http://tempuri.org/IXBService/GetCurrentOperDayResponse")]
        System.DateTime GetCurrentOperDay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentOperDay", ReplyAction="http://tempuri.org/IXBService/GetCurrentOperDayResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetCurrentOperDayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetConfirmRequiredOrders", ReplyAction="http://tempuri.org/IXBService/GetConfirmRequiredOrdersResponse")]
        System.Collections.Generic.List<int> GetConfirmRequiredOrders(ulong customerNumber, string userName, int subTypeId, System.DateTime startDate, System.DateTime endDate, string langId, string receiverName, string account, bool period, string groups, int quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetConfirmRequiredOrders", ReplyAction="http://tempuri.org/IXBService/GetConfirmRequiredOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetConfirmRequiredOrdersAsync(ulong customerNumber, string userName, int subTypeId, System.DateTime startDate, System.DateTime endDate, string langId, string receiverName, string account, bool period, string groups, int quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductActivationFee", ReplyAction="http://tempuri.org/IXBService/GetLoanProductActivationFeeResponse")]
        double GetLoanProductActivationFee(ulong productId, short withTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanProductActivationFee", ReplyAction="http://tempuri.org/IXBService/GetLoanProductActivationFeeResponse")]
        System.Threading.Tasks.Task<double> GetLoanProductActivationFeeAsync(ulong productId, short withTax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentials", ReplyAction="http://tempuri.org/IXBService/GetCredentialsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Credential> GetCredentials(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentials", ReplyAction="http://tempuri.org/IXBService/GetCredentialsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Credential>> GetCredentialsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsTransferFromBusinessmanToOwnerAccount", ReplyAction="http://tempuri.org/IXBService/IsTransferFromBusinessmanToOwnerAccountResponse")]
        bool IsTransferFromBusinessmanToOwnerAccount(string debitAccountNumber, string creditAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsTransferFromBusinessmanToOwnerAccount", ReplyAction="http://tempuri.org/IXBService/IsTransferFromBusinessmanToOwnerAccountResponse")]
        System.Threading.Tasks.Task<bool> IsTransferFromBusinessmanToOwnerAccountAsync(string debitAccountNumber, string creditAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUserAccessForCustomer", ReplyAction="http://tempuri.org/IXBService/GetUserAccessForCustomerResponse")]
        Test.ServiceReference1.UserAccessForCustomer GetUserAccessForCustomer(string userSessiobToken, string customerSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUserAccessForCustomer", ReplyAction="http://tempuri.org/IXBService/GetUserAccessForCustomerResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.UserAccessForCustomer> GetUserAccessForCustomerAsync(string userSessiobToken, string customerSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountsForCredential", ReplyAction="http://tempuri.org/IXBService/GetAccountsForCredentialResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountsForCredential(int operationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountsForCredential", ReplyAction="http://tempuri.org/IXBService/GetAccountsForCredentialResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsForCredentialAsync(int operationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCurrencyExchangeOrderResponse")]
        Test.ServiceReference1.CurrencyExchangeOrder GetCurrencyExchangeOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCurrencyExchangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CurrencyExchangeOrder> GetCurrencyExchangeOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateNextOrderNumber", ReplyAction="http://tempuri.org/IXBService/GenerateNextOrderNumberResponse")]
        string GenerateNextOrderNumber(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateNextOrderNumber", ReplyAction="http://tempuri.org/IXBService/GenerateNextOrderNumberResponse")]
        System.Threading.Tasks.Task<string> GenerateNextOrderNumberAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCredentialOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCredentialOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCredentialOrder(Test.ServiceReference1.CredentialOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCredentialOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCredentialOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCredentialOrderAsync(Test.ServiceReference1.CredentialOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCredentialOrder", ReplyAction="http://tempuri.org/IXBService/SaveCredentialOrderResponse")]
        Test.ServiceReference1.ActionResult SaveCredentialOrder(Test.ServiceReference1.CredentialOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCredentialOrder", ReplyAction="http://tempuri.org/IXBService/SaveCredentialOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCredentialOrderAsync(Test.ServiceReference1.CredentialOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCredentialOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCredentialOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveCredentialOrder(Test.ServiceReference1.CredentialOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCredentialOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCredentialOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCredentialOrderAsync(Test.ServiceReference1.CredentialOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCredentialTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCredentialTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCredentialTerminationOrder(Test.ServiceReference1.CredentialTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCredentialTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCredentialTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCredentialTerminationOrderAsync(Test.ServiceReference1.CredentialTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetChequeBookReceiveOrderWarnings", ReplyAction="http://tempuri.org/IXBService/GetChequeBookReceiveOrderWarningsResponse")]
        System.Collections.Generic.List<string> GetChequeBookReceiveOrderWarnings(ulong customerNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetChequeBookReceiveOrderWarnings", ReplyAction="http://tempuri.org/IXBService/GetChequeBookReceiveOrderWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetChequeBookReceiveOrderWarningsAsync(ulong customerNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentialOrder", ReplyAction="http://tempuri.org/IXBService/GetCredentialOrderResponse")]
        Test.ServiceReference1.CredentialOrder GetCredentialOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentialOrder", ReplyAction="http://tempuri.org/IXBService/GetCredentialOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CredentialOrder> GetCredentialOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAllOperations", ReplyAction="http://tempuri.org/IXBService/GetAllOperationsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.AssigneeOperation> GetAllOperations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAllOperations", ReplyAction="http://tempuri.org/IXBService/GetAllOperationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AssigneeOperation>> GetAllOperationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetTransitPaymentOrderFeeResponse")]
        double GetTransitPaymentOrderFee(Test.ServiceReference1.TransitPaymentOrder order, int feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetTransitPaymentOrderFeeResponse")]
        System.Threading.Tasks.Task<double> GetTransitPaymentOrderFeeAsync(Test.ServiceReference1.TransitPaymentOrder order, int feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ValidateRenewedOtherTypeCardApplicationForPrint", ReplyAction="http://tempuri.org/IXBService/ValidateRenewedOtherTypeCardApplicationForPrintResp" +
            "onse")]
        Test.ServiceReference1.ActionResult ValidateRenewedOtherTypeCardApplicationForPrint(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ValidateRenewedOtherTypeCardApplicationForPrint", ReplyAction="http://tempuri.org/IXBService/ValidateRenewedOtherTypeCardApplicationForPrintResp" +
            "onse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ValidateRenewedOtherTypeCardApplicationForPrintAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsNormCardStatus", ReplyAction="http://tempuri.org/IXBService/IsNormCardStatusResponse")]
        bool IsNormCardStatus(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsNormCardStatus", ReplyAction="http://tempuri.org/IXBService/IsNormCardStatusResponse")]
        System.Threading.Tasks.Task<bool> IsNormCardStatusAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsCardRegistered", ReplyAction="http://tempuri.org/IXBService/IsCardRegisteredResponse")]
        bool IsCardRegistered(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsCardRegistered", ReplyAction="http://tempuri.org/IXBService/IsCardRegisteredResponse")]
        System.Threading.Tasks.Task<bool> IsCardRegisteredAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountCustomerNumber", ReplyAction="http://tempuri.org/IXBService/GetAccountCustomerNumberResponse")]
        ulong GetAccountCustomerNumber(Test.ServiceReference1.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountCustomerNumber", ReplyAction="http://tempuri.org/IXBService/GetAccountCustomerNumberResponse")]
        System.Threading.Tasks.Task<ulong> GetAccountCustomerNumberAsync(Test.ServiceReference1.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSpesialPriceMessage", ReplyAction="http://tempuri.org/IXBService/GetSpesialPriceMessageResponse")]
        string GetSpesialPriceMessage(string accountNumber, short additionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSpesialPriceMessage", ReplyAction="http://tempuri.org/IXBService/GetSpesialPriceMessageResponse")]
        System.Threading.Tasks.Task<string> GetSpesialPriceMessageAsync(string accountNumber, short additionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardFeeForCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardFeeForCurrencyExchangeOrderResponse")]
        double GetCardFeeForCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardFeeForCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/GetCardFeeForCurrencyExchangeOrderResponse")]
        System.Threading.Tasks.Task<double> GetCardFeeForCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountReopenFee", ReplyAction="http://tempuri.org/IXBService/GetAccountReopenFeeResponse")]
        double GetAccountReopenFee(short customerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountReopenFee", ReplyAction="http://tempuri.org/IXBService/GetAccountReopenFeeResponse")]
        System.Threading.Tasks.Task<double> GetAccountReopenFeeAsync(short customerType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerSyntheticStatus", ReplyAction="http://tempuri.org/IXBService/GetCustomerSyntheticStatusResponse")]
        short GetCustomerSyntheticStatus(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerSyntheticStatus", ReplyAction="http://tempuri.org/IXBService/GetCustomerSyntheticStatusResponse")]
        System.Threading.Tasks.Task<short> GetCustomerSyntheticStatusAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetCreditLineTerminationOrderResponse")]
        Test.ServiceReference1.CreditLineTerminationOrder GetCreditLineTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetCreditLineTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CreditLineTerminationOrder> GetCreditLineTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositTerminationOrderResponse")]
        Test.ServiceReference1.DepositTerminationOrder GetDepositTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetDepositTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositTerminationOrder> GetDepositTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetClosedCreditLine", ReplyAction="http://tempuri.org/IXBService/GetClosedCreditLineResponse")]
        Test.ServiceReference1.CreditLine GetClosedCreditLine(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetClosedCreditLine", ReplyAction="http://tempuri.org/IXBService/GetClosedCreditLineResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CreditLine> GetClosedCreditLineAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanActivationWarnings", ReplyAction="http://tempuri.org/IXBService/GetLoanActivationWarningsResponse")]
        System.Collections.Generic.List<string> GetLoanActivationWarnings(long productId, short productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanActivationWarnings", ReplyAction="http://tempuri.org/IXBService/GetLoanActivationWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLoanActivationWarningsAsync(long productId, short productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDecreaseLoanGrafik", ReplyAction="http://tempuri.org/IXBService/GetDecreaseLoanGrafikResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik> GetDecreaseLoanGrafik(Test.ServiceReference1.CreditLine creditLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDecreaseLoanGrafik", ReplyAction="http://tempuri.org/IXBService/GetDecreaseLoanGrafikResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik>> GetDecreaseLoanGrafikAsync(Test.ServiceReference1.CreditLine creditLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashBooks", ReplyAction="http://tempuri.org/IXBService/GetCashBooksResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CashBook> GetCashBooks(Test.ServiceReference1.SearchCashBook searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashBooks", ReplyAction="http://tempuri.org/IXBService/GetCashBooksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CashBook>> GetCashBooksAsync(Test.ServiceReference1.SearchCashBook searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCashBookOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCashBookOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCashBookOrder(Test.ServiceReference1.CashBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCashBookOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCashBookOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCashBookOrderAsync(Test.ServiceReference1.CashBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCorrespondentSetNumber", ReplyAction="http://tempuri.org/IXBService/GetCorrespondentSetNumberResponse")]
        int GetCorrespondentSetNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCorrespondentSetNumber", ReplyAction="http://tempuri.org/IXBService/GetCorrespondentSetNumberResponse")]
        System.Threading.Tasks.Task<int> GetCorrespondentSetNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/RemoveCashBook", ReplyAction="http://tempuri.org/IXBService/RemoveCashBookResponse")]
        Test.ServiceReference1.ActionResult RemoveCashBook(int cashBookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/RemoveCashBook", ReplyAction="http://tempuri.org/IXBService/RemoveCashBookResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> RemoveCashBookAsync(int cashBookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerMainData", ReplyAction="http://tempuri.org/IXBService/GetCustomerMainDataResponse")]
        Test.ServiceReference1.CustomerMainData GetCustomerMainData(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerMainData", ReplyAction="http://tempuri.org/IXBService/GetCustomerMainDataResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CustomerMainData> GetCustomerMainDataAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRest", ReplyAction="http://tempuri.org/IXBService/GetRestResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfintdouble> GetRest(Test.ServiceReference1.SearchCashBook searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRest", ReplyAction="http://tempuri.org/IXBService/GetRestResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfintdouble>> GetRestAsync(Test.ServiceReference1.SearchCashBook searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedLeasingCustomers", ReplyAction="http://tempuri.org/IXBService/GetSearchedLeasingCustomersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchLeasingCustomer> GetSearchedLeasingCustomers(Test.ServiceReference1.SearchLeasingCustomer searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedLeasingCustomers", ReplyAction="http://tempuri.org/IXBService/GetSearchedLeasingCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchLeasingCustomer>> GetSearchedLeasingCustomersAsync(Test.ServiceReference1.SearchLeasingCustomer searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedLeasingLoans", ReplyAction="http://tempuri.org/IXBService/GetSearchedLeasingLoansResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LeasingLoan> GetSearchedLeasingLoans(Test.ServiceReference1.SearchLeasingLoan searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedLeasingLoans", ReplyAction="http://tempuri.org/IXBService/GetSearchedLeasingLoansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LeasingLoan>> GetSearchedLeasingLoansAsync(Test.ServiceReference1.SearchLeasingLoan searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransitCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransitCurrencyExchangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveTransitCurrencyExchangeOrder(Test.ServiceReference1.TransitCurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransitCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransitCurrencyExchangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransitCurrencyExchangeOrderAsync(Test.ServiceReference1.TransitCurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveOrder", ReplyAction="http://tempuri.org/IXBService/ApproveOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveOrder(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveOrder", ReplyAction="http://tempuri.org/IXBService/ApproveOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveOrderAsync(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveAccountReOpenOrder", ReplyAction="http://tempuri.org/IXBService/ApproveAccountReOpenOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveAccountReOpenOrder(Test.ServiceReference1.AccountReOpenOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveAccountReOpenOrder", ReplyAction="http://tempuri.org/IXBService/ApproveAccountReOpenOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveAccountReOpenOrderAsync(Test.ServiceReference1.AccountReOpenOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardReReleaseOrder", ReplyAction="http://tempuri.org/IXBService/GetCardReReleaseOrderResponse")]
        Test.ServiceReference1.CardReReleaseOrder GetCardReReleaseOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardReReleaseOrder", ReplyAction="http://tempuri.org/IXBService/GetCardReReleaseOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardReReleaseOrder> GetCardReReleaseOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCardReReleaseOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCardReReleaseOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveCardReReleaseOrder(Test.ServiceReference1.CardReReleaseOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCardReReleaseOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCardReReleaseOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCardReReleaseOrderAsync(Test.ServiceReference1.CardReReleaseOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCreditLineTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCreditLineTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveCreditLineTerminationOrder(Test.ServiceReference1.CreditLineTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCreditLineTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCreditLineTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCreditLineTerminationOrderAsync(Test.ServiceReference1.CreditLineTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveInternationalPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApproveInternationalPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveInternationalPaymentOrder(Test.ServiceReference1.InternationalPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveInternationalPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApproveInternationalPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveInternationalPaymentOrderAsync(Test.ServiceReference1.InternationalPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ChangeCashBookStatus", ReplyAction="http://tempuri.org/IXBService/ChangeCashBookStatusResponse")]
        Test.ServiceReference1.ActionResult ChangeCashBookStatus(int cashBookID, int newStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ChangeCashBookStatus", ReplyAction="http://tempuri.org/IXBService/ChangeCashBookStatusResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ChangeCashBookStatusAsync(int cashBookID, int newStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOperationSystemAccountForLeasing", ReplyAction="http://tempuri.org/IXBService/GetOperationSystemAccountForLeasingResponse")]
        Test.ServiceReference1.Account GetOperationSystemAccountForLeasing(string operationCurrency, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOperationSystemAccountForLeasing", ReplyAction="http://tempuri.org/IXBService/GetOperationSystemAccountForLeasingResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetOperationSystemAccountForLeasingAsync(string operationCurrency, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitCurrencyExchangeOrderSystemAccount", ReplyAction="http://tempuri.org/IXBService/GetTransitCurrencyExchangeOrderSystemAccountRespons" +
            "e")]
        Test.ServiceReference1.Account GetTransitCurrencyExchangeOrderSystemAccount(Test.ServiceReference1.TransitCurrencyExchangeOrder order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitCurrencyExchangeOrderSystemAccount", ReplyAction="http://tempuri.org/IXBService/GetTransitCurrencyExchangeOrderSystemAccountRespons" +
            "e")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetTransitCurrencyExchangeOrderSystemAccountAsync(Test.ServiceReference1.TransitCurrencyExchangeOrder order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReferenceOrderAccounts", ReplyAction="http://tempuri.org/IXBService/GetReferenceOrderAccountsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetReferenceOrderAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReferenceOrderAccounts", ReplyAction="http://tempuri.org/IXBService/GetReferenceOrderAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetReferenceOrderAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanNextRepayment", ReplyAction="http://tempuri.org/IXBService/GetLoanNextRepaymentResponse")]
        Test.ServiceReference1.LoanRepaymentGrafik GetLoanNextRepayment(Test.ServiceReference1.Loan loan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanNextRepayment", ReplyAction="http://tempuri.org/IXBService/GetLoanNextRepaymentResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanRepaymentGrafik> GetLoanNextRepaymentAsync(Test.ServiceReference1.Loan loan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountClosinghistory", ReplyAction="http://tempuri.org/IXBService/GetAccountClosinghistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.AccountClosingHistory> GetAccountClosinghistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountClosinghistory", ReplyAction="http://tempuri.org/IXBService/GetAccountClosinghistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AccountClosingHistory>> GetAccountClosinghistoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetVehicleViolationById", ReplyAction="http://tempuri.org/IXBService/GetVehicleViolationByIdResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse> GetVehicleViolationById(string violationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetVehicleViolationById", ReplyAction="http://tempuri.org/IXBService/GetVehicleViolationByIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse>> GetVehicleViolationByIdAsync(string violationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetVehicleViolationByPsnVehNum", ReplyAction="http://tempuri.org/IXBService/GetVehicleViolationByPsnVehNumResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse> GetVehicleViolationByPsnVehNum(string psn, string vehNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetVehicleViolationByPsnVehNum", ReplyAction="http://tempuri.org/IXBService/GetVehicleViolationByPsnVehNumResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse>> GetVehicleViolationByPsnVehNumAsync(string psn, string vehNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkBlockages", ReplyAction="http://tempuri.org/IXBService/GetDahkBlockagesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DahkDetails> GetDahkBlockages(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkBlockages", ReplyAction="http://tempuri.org/IXBService/GetDahkBlockagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkDetails>> GetDahkBlockagesAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkCollections", ReplyAction="http://tempuri.org/IXBService/GetDahkCollectionsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DahkDetails> GetDahkCollections(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkCollections", ReplyAction="http://tempuri.org/IXBService/GetDahkCollectionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkDetails>> GetDahkCollectionsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProblemLoanCalculationsDetail", ReplyAction="http://tempuri.org/IXBService/GetProblemLoanCalculationsDetailResponse")]
        Test.ServiceReference1.ProblemLoanCalculationsDetail GetProblemLoanCalculationsDetail(int claimNumber, int eventNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProblemLoanCalculationsDetail", ReplyAction="http://tempuri.org/IXBService/GetProblemLoanCalculationsDetailResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ProblemLoanCalculationsDetail> GetProblemLoanCalculationsDetailAsync(int claimNumber, int eventNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkEmployers", ReplyAction="http://tempuri.org/IXBService/GetDahkEmployersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DahkEmployer> GetDahkEmployers(ulong customerNumber, Test.ServiceReference1.ProductQualityFilter quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkEmployers", ReplyAction="http://tempuri.org/IXBService/GetDahkEmployersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkEmployer>> GetDahkEmployersAsync(ulong customerNumber, Test.ServiceReference1.ProductQualityFilter quality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkAmountTotals", ReplyAction="http://tempuri.org/IXBService/GetDahkAmountTotalsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DahkAmountTotals> GetDahkAmountTotals(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDahkAmountTotals", ReplyAction="http://tempuri.org/IXBService/GetDahkAmountTotalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkAmountTotals>> GetDahkAmountTotalsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTerm", ReplyAction="http://tempuri.org/IXBService/GetTermResponse")]
        string GetTerm(short id, System.Collections.Generic.List<string> param, Test.ServiceReference1.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTerm", ReplyAction="http://tempuri.org/IXBService/GetTermResponse")]
        System.Threading.Tasks.Task<string> GetTermAsync(short id, System.Collections.Generic.List<string> param, Test.ServiceReference1.Languages language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAparikTexumLoans", ReplyAction="http://tempuri.org/IXBService/GetAparikTexumLoansResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Loan> GetAparikTexumLoans();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAparikTexumLoans", ReplyAction="http://tempuri.org/IXBService/GetAparikTexumLoansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Loan>> GetAparikTexumLoansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGoodsDetails", ReplyAction="http://tempuri.org/IXBService/GetGoodsDetailsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.GoodsDetails> GetGoodsDetails(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGoodsDetails", ReplyAction="http://tempuri.org/IXBService/GetGoodsDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.GoodsDetails>> GetGoodsDetailsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFlowDetails", ReplyAction="http://tempuri.org/IXBService/GetAccountFlowDetailsResponse")]
        Test.ServiceReference1.AccountFlowDetails GetAccountFlowDetails(string accountNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFlowDetails", ReplyAction="http://tempuri.org/IXBService/GetAccountFlowDetailsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountFlowDetails> GetAccountFlowDetailsAsync(string accountNumber, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetServicePaymentNoteList", ReplyAction="http://tempuri.org/IXBService/GetServicePaymentNoteListResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ServicePaymentNote> GetServicePaymentNoteList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetServicePaymentNoteList", ReplyAction="http://tempuri.org/IXBService/GetServicePaymentNoteListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ServicePaymentNote>> GetServicePaymentNoteListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveServicePaymentNoteOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveServicePaymentNoteOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveServicePaymentNoteOrder(Test.ServiceReference1.ServicePaymentNoteOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveServicePaymentNoteOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveServicePaymentNoteOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveServicePaymentNoteOrderAsync(Test.ServiceReference1.ServicePaymentNoteOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetServicePaymentNoteOrder", ReplyAction="http://tempuri.org/IXBService/GetServicePaymentNoteOrderResponse")]
        Test.ServiceReference1.ServicePaymentNoteOrder GetServicePaymentNoteOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetServicePaymentNoteOrder", ReplyAction="http://tempuri.org/IXBService/GetServicePaymentNoteOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ServicePaymentNoteOrder> GetServicePaymentNoteOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDelatedServicePaymentNoteOrder", ReplyAction="http://tempuri.org/IXBService/GetDelatedServicePaymentNoteOrderResponse")]
        Test.ServiceReference1.ServicePaymentNoteOrder GetDelatedServicePaymentNoteOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDelatedServicePaymentNoteOrder", ReplyAction="http://tempuri.org/IXBService/GetDelatedServicePaymentNoteOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ServicePaymentNoteOrder> GetDelatedServicePaymentNoteOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositLoanAndProvisionCoefficent", ReplyAction="http://tempuri.org/IXBService/GetDepositLoanAndProvisionCoefficentResponse")]
        double GetDepositLoanAndProvisionCoefficent(string loanCurrency, string provisionCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositLoanAndProvisionCoefficent", ReplyAction="http://tempuri.org/IXBService/GetDepositLoanAndProvisionCoefficentResponse")]
        System.Threading.Tasks.Task<double> GetDepositLoanAndProvisionCoefficentAsync(string loanCurrency, string provisionCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApprovePensionApplicationOrder(Test.ServiceReference1.PensionApplicationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePensionApplicationOrderAsync(Test.ServiceReference1.PensionApplicationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPensionApplicationHistory", ReplyAction="http://tempuri.org/IXBService/GetPensionApplicationHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PensionApplication> GetPensionApplicationHistory(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPensionApplicationHistory", ReplyAction="http://tempuri.org/IXBService/GetPensionApplicationHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PensionApplication>> GetPensionApplicationHistoryAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationTerminationOrderRes" +
            "ponse")]
        Test.ServiceReference1.ActionResult SaveAndApprovePensionApplicationTerminationOrder(Test.ServiceReference1.PensionApplicationTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePensionApplicationTerminationOrderRes" +
            "ponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePensionApplicationTerminationOrderAsync(Test.ServiceReference1.PensionApplicationTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPensionApplicationTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetPensionApplicationTerminationOrderResponse")]
        Test.ServiceReference1.PensionApplicationTerminationOrder GetPensionApplicationTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPensionApplicationTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetPensionApplicationTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PensionApplicationTerminationOrder> GetPensionApplicationTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPensionApplicationOrder", ReplyAction="http://tempuri.org/IXBService/GetPensionApplicationOrderResponse")]
        Test.ServiceReference1.PensionApplicationOrder GetPensionApplicationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPensionApplicationOrder", ReplyAction="http://tempuri.org/IXBService/GetPensionApplicationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PensionApplicationOrder> GetPensionApplicationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetClosedDepositAccountList", ReplyAction="http://tempuri.org/IXBService/GetClosedDepositAccountListResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetClosedDepositAccountList(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetClosedDepositAccountList", ReplyAction="http://tempuri.org/IXBService/GetClosedDepositAccountListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetClosedDepositAccountListAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveTransferCallContractOrder(Test.ServiceReference1.TransferCallContractOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransferCallContractOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransferCallContractOrderAsync(Test.ServiceReference1.TransferCallContractOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractOrder", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractOrderResponse")]
        Test.ServiceReference1.TransferCallContractOrder GetTransferCallContractOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractOrder", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContractOrder> GetTransferCallContractOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractsDetails", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractsDetailsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.TransferCallContractDetails> GetTransferCallContractsDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractsDetails", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractsDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TransferCallContractDetails>> GetTransferCallContractsDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCriminalLogId", ReplyAction="http://tempuri.org/IXBService/GetTransferCriminalLogIdResponse")]
        System.Collections.Generic.List<int> GetTransferCriminalLogId(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCriminalLogId", ReplyAction="http://tempuri.org/IXBService/GetTransferCriminalLogIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetTransferCriminalLogIdAsync(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/UpdateTransferVerifiedStatus", ReplyAction="http://tempuri.org/IXBService/UpdateTransferVerifiedStatusResponse")]
        Test.ServiceReference1.ActionResult UpdateTransferVerifiedStatus(ulong transferId, int verified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/UpdateTransferVerifiedStatus", ReplyAction="http://tempuri.org/IXBService/UpdateTransferVerifiedStatusResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> UpdateTransferVerifiedStatusAsync(ulong transferId, int verified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReestrTransferOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReestrTransferOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveReestrTransferOrder(Test.ServiceReference1.ReestrTransferOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReestrTransferOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReestrTransferOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReestrTransferOrderAsync(Test.ServiceReference1.ReestrTransferOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReestrTransferOrder", ReplyAction="http://tempuri.org/IXBService/GetReestrTransferOrderResponse")]
        Test.ServiceReference1.ReestrTransferOrder GetReestrTransferOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReestrTransferOrder", ReplyAction="http://tempuri.org/IXBService/GetReestrTransferOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ReestrTransferOrder> GetReestrTransferOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetNotConfirmedOrders", ReplyAction="http://tempuri.org/IXBService/GetNotConfirmedOrdersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Order> GetNotConfirmedOrders(int start, int end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetNotConfirmedOrders", ReplyAction="http://tempuri.org/IXBService/GetNotConfirmedOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetNotConfirmedOrdersAsync(int start, int end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractDetails", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractDetailsResponse")]
        Test.ServiceReference1.TransferCallContractDetails GetTransferCallContractDetails(long contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferCallContractDetails", ReplyAction="http://tempuri.org/IXBService/GetTransferCallContractDetailsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContractDetails> GetTransferCallContractDetailsAsync(long contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountJointCustomers", ReplyAction="http://tempuri.org/IXBService/GetAccountJointCustomersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongdouble> GetAccountJointCustomers(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountJointCustomers", ReplyAction="http://tempuri.org/IXBService/GetAccountJointCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongdouble>> GetAccountJointCustomersAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateAndMakeSwitMessageByPeriodicTransfer", ReplyAction="http://tempuri.org/IXBService/GenerateAndMakeSwitMessageByPeriodicTransferRespons" +
            "e")]
        Test.ServiceReference1.ActionResult GenerateAndMakeSwitMessageByPeriodicTransfer(System.DateTime statementDate, System.DateTime dateFrom, System.DateTime dateTo, ulong periodicTransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateAndMakeSwitMessageByPeriodicTransfer", ReplyAction="http://tempuri.org/IXBService/GenerateAndMakeSwitMessageByPeriodicTransferRespons" +
            "e")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> GenerateAndMakeSwitMessageByPeriodicTransferAsync(System.DateTime statementDate, System.DateTime dateFrom, System.DateTime dateTo, ulong periodicTransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContractsForTransfersCall", ReplyAction="http://tempuri.org/IXBService/GetContractsForTransfersCallResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.TransferCallContract> GetContractsForTransfersCall(string customerNumber, string accountNumber, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContractsForTransfersCall", ReplyAction="http://tempuri.org/IXBService/GetContractsForTransfersCallResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TransferCallContract>> GetContractsForTransfersCallAsync(string customerNumber, string accountNumber, string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerAuthorizationData", ReplyAction="http://tempuri.org/IXBService/GetCustomerAuthorizationDataResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.TupleOfstringstring> GetCustomerAuthorizationData(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerAuthorizationData", ReplyAction="http://tempuri.org/IXBService/GetCustomerAuthorizationDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TupleOfstringstring>> GetCustomerAuthorizationDataAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AuthorizeCustomer", ReplyAction="http://tempuri.org/IXBService/AuthorizeCustomerResponse")]
        Test.ServiceReference1.AuthorizedCustomer AuthorizeCustomer(ulong customerNumber, string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AuthorizeCustomer", ReplyAction="http://tempuri.org/IXBService/AuthorizeCustomerResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AuthorizedCustomer> AuthorizeCustomerAsync(ulong customerNumber, string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOverdueDetails", ReplyAction="http://tempuri.org/IXBService/GetOverdueDetailsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail> GetOverdueDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOverdueDetails", ReplyAction="http://tempuri.org/IXBService/GetOverdueDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail>> GetOverdueDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentProductOverdueDetails", ReplyAction="http://tempuri.org/IXBService/GetCurrentProductOverdueDetailsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail> GetCurrentProductOverdueDetails(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentProductOverdueDetails", ReplyAction="http://tempuri.org/IXBService/GetCurrentProductOverdueDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail>> GetCurrentProductOverdueDetailsAsync(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/Init", ReplyAction="http://tempuri.org/IXBService/InitResponse")]
        bool Init(string authorizedCustomerSessionID, byte language, string clientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source, Test.ServiceReference1.ServiceType serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/Init", ReplyAction="http://tempuri.org/IXBService/InitResponse")]
        System.Threading.Tasks.Task<bool> InitAsync(string authorizedCustomerSessionID, byte language, string clientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source, Test.ServiceReference1.ServiceType serviceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAuthorizedCustomerNumber", ReplyAction="http://tempuri.org/IXBService/GetAuthorizedCustomerNumberResponse")]
        ulong GetAuthorizedCustomerNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAuthorizedCustomerNumber", ReplyAction="http://tempuri.org/IXBService/GetAuthorizedCustomerNumberResponse")]
        System.Threading.Tasks.Task<ulong> GetAuthorizedCustomerNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContractDetails", ReplyAction="http://tempuri.org/IXBService/GetContractDetailsResponse")]
        Test.ServiceReference1.TransferCallContract GetContractDetails(long contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContractDetails", ReplyAction="http://tempuri.org/IXBService/GetContractDetailsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContract> GetContractDetailsAsync(long contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveExternalBankingLogOutHistory", ReplyAction="http://tempuri.org/IXBService/SaveExternalBankingLogOutHistoryResponse")]
        void SaveExternalBankingLogOutHistory(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveExternalBankingLogOutHistory", ReplyAction="http://tempuri.org/IXBService/SaveExternalBankingLogOutHistoryResponse")]
        System.Threading.Tasks.Task SaveExternalBankingLogOutHistoryAsync(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SendAutorizationSMS", ReplyAction="http://tempuri.org/IXBService/SendAutorizationSMSResponse")]
        Test.ServiceReference1.ActionResult SendAutorizationSMS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SendAutorizationSMS", ReplyAction="http://tempuri.org/IXBService/SendAutorizationSMSResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SendAutorizationSMSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/VerifyAuthorizationSMS", ReplyAction="http://tempuri.org/IXBService/VerifyAuthorizationSMSResponse")]
        Test.ServiceReference1.ActionResult VerifyAuthorizationSMS(string smsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/VerifyAuthorizationSMS", ReplyAction="http://tempuri.org/IXBService/VerifyAuthorizationSMSResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> VerifyAuthorizationSMSAsync(string smsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetExchangeRates", ReplyAction="http://tempuri.org/IXBService/GetExchangeRatesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate> GetExchangeRates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetExchangeRates", ReplyAction="http://tempuri.org/IXBService/GetExchangeRatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate>> GetExchangeRatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetHBAttachmentsInfo", ReplyAction="http://tempuri.org/IXBService/GetHBAttachmentsInfoResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.AttachmentDocument> GetHBAttachmentsInfo(ulong documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetHBAttachmentsInfo", ReplyAction="http://tempuri.org/IXBService/GetHBAttachmentsInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AttachmentDocument>> GetHBAttachmentsInfoAsync(ulong documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductDocuments", ReplyAction="http://tempuri.org/IXBService/GetProductDocumentsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ProductDocument> GetProductDocuments(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetProductDocuments", ReplyAction="http://tempuri.org/IXBService/GetProductDocumentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ProductDocument>> GetProductDocumentsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOneHBAttachment", ReplyAction="http://tempuri.org/IXBService/GetOneHBAttachmentResponse")]
        byte[] GetOneHBAttachment(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOneHBAttachment", ReplyAction="http://tempuri.org/IXBService/GetOneHBAttachmentResponse")]
        System.Threading.Tasks.Task<byte[]> GetOneHBAttachmentAsync(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCBKursForDate", ReplyAction="http://tempuri.org/IXBService/GetCBKursForDateResponse")]
        double GetCBKursForDate(System.DateTime date, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCBKursForDate", ReplyAction="http://tempuri.org/IXBService/GetCBKursForDateResponse")]
        System.Threading.Tasks.Task<double> GetCBKursForDateAsync(System.DateTime date, string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetMRFeeAMD", ReplyAction="http://tempuri.org/IXBService/GetMRFeeAMDResponse")]
        double GetMRFeeAMD(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetMRFeeAMD", ReplyAction="http://tempuri.org/IXBService/GetMRFeeAMDResponse")]
        System.Threading.Tasks.Task<double> GetMRFeeAMDAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTotalDebt", ReplyAction="http://tempuri.org/IXBService/GetCardTotalDebtResponse")]
        double GetCardTotalDebt(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardTotalDebt", ReplyAction="http://tempuri.org/IXBService/GetCardTotalDebtResponse")]
        System.Threading.Tasks.Task<double> GetCardTotalDebtAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPetTurk", ReplyAction="http://tempuri.org/IXBService/GetPetTurkResponse")]
        double GetPetTurk(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPetTurk", ReplyAction="http://tempuri.org/IXBService/GetPetTurkResponse")]
        System.Threading.Tasks.Task<double> GetPetTurkAsync(long productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetNextOperDay", ReplyAction="http://tempuri.org/IXBService/GetNextOperDayResponse")]
        System.DateTime GetNextOperDay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetNextOperDay", ReplyAction="http://tempuri.org/IXBService/GetNextOperDayResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetNextOperDayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveMatureOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveMatureOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveMatureOrder(Test.ServiceReference1.MatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveMatureOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveMatureOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveMatureOrderAsync(Test.ServiceReference1.MatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetMatureOrder", ReplyAction="http://tempuri.org/IXBService/GetMatureOrderResponse")]
        Test.ServiceReference1.MatureOrder GetMatureOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetMatureOrder", ReplyAction="http://tempuri.org/IXBService/GetMatureOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.MatureOrder> GetMatureOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAccountOrder", ReplyAction="http://tempuri.org/IXBService/SaveAccountOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAccountOrder(Test.ServiceReference1.AccountOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAccountOrder", ReplyAction="http://tempuri.org/IXBService/SaveAccountOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAccountOrderAsync(Test.ServiceReference1.AccountOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountOrderResponse")]
        Test.ServiceReference1.AccountOrder GetAccountOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountOrder> GetAccountOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveAccountOrder", ReplyAction="http://tempuri.org/IXBService/ApproveAccountOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveAccountOrder(Test.ServiceReference1.AccountOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveAccountOrder", ReplyAction="http://tempuri.org/IXBService/ApproveAccountOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveAccountOrderAsync(Test.ServiceReference1.AccountOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountOrder(Test.ServiceReference1.AccountOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountOrderAsync(Test.ServiceReference1.AccountOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SavePeriodicUtilityPaymentOrder(Test.ServiceReference1.PeriodicUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicUtilityPaymentOrderAsync(Test.ServiceReference1.PeriodicUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SavePeriodicPaymentOrder(Test.ServiceReference1.PeriodicPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicPaymentOrderAsync(Test.ServiceReference1.PeriodicPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndAprovePeriodicUtilityPaymentOrder(Test.ServiceReference1.PeriodicUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicUtilityPaymentOrderAsync(Test.ServiceReference1.PeriodicUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndAprovePeriodicPaymentOrder(Test.ServiceReference1.PeriodicPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicPaymentOrderAsync(Test.ServiceReference1.PeriodicPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveMatureOrder", ReplyAction="http://tempuri.org/IXBService/SaveMatureOrderResponse")]
        Test.ServiceReference1.ActionResult SaveMatureOrder(Test.ServiceReference1.MatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveMatureOrder", ReplyAction="http://tempuri.org/IXBService/SaveMatureOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveMatureOrderAsync(Test.ServiceReference1.MatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveMatureOrder", ReplyAction="http://tempuri.org/IXBService/ApproveMatureOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveMatureOrder(Test.ServiceReference1.MatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveMatureOrder", ReplyAction="http://tempuri.org/IXBService/ApproveMatureOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveMatureOrderAsync(Test.ServiceReference1.MatureOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsPoliceAccount", ReplyAction="http://tempuri.org/IXBService/IsPoliceAccountResponse")]
        bool IsPoliceAccount(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsPoliceAccount", ReplyAction="http://tempuri.org/IXBService/IsPoliceAccountResponse")]
        System.Threading.Tasks.Task<bool> IsPoliceAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckAccountForPSN", ReplyAction="http://tempuri.org/IXBService/CheckAccountForPSNResponse")]
        bool CheckAccountForPSN(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckAccountForPSN", ReplyAction="http://tempuri.org/IXBService/CheckAccountForPSNResponse")]
        System.Threading.Tasks.Task<bool> CheckAccountForPSNAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardMembershipRewards", ReplyAction="http://tempuri.org/IXBService/GetCardMembershipRewardsResponse")]
        Test.ServiceReference1.MembershipRewards GetCardMembershipRewards(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardMembershipRewards", ReplyAction="http://tempuri.org/IXBService/GetCardMembershipRewardsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.MembershipRewards> GetCardMembershipRewardsAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGuarantee", ReplyAction="http://tempuri.org/IXBService/GetGuaranteeResponse")]
        Test.ServiceReference1.Guarantee GetGuarantee(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGuarantee", ReplyAction="http://tempuri.org/IXBService/GetGuaranteeResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Guarantee> GetGuaranteeAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGuarantees", ReplyAction="http://tempuri.org/IXBService/GetGuaranteesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Guarantee> GetGuarantees(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetGuarantees", ReplyAction="http://tempuri.org/IXBService/GetGuaranteesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Guarantee>> GetGuaranteesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccreditive", ReplyAction="http://tempuri.org/IXBService/GetAccreditiveResponse")]
        Test.ServiceReference1.Accreditive GetAccreditive(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccreditive", ReplyAction="http://tempuri.org/IXBService/GetAccreditiveResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Accreditive> GetAccreditiveAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccreditives", ReplyAction="http://tempuri.org/IXBService/GetAccreditivesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Accreditive> GetAccreditives(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccreditives", ReplyAction="http://tempuri.org/IXBService/GetAccreditivesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Accreditive>> GetAccreditivesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidGuarantee", ReplyAction="http://tempuri.org/IXBService/GetPaidGuaranteeResponse")]
        Test.ServiceReference1.PaidGuarantee GetPaidGuarantee(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidGuarantee", ReplyAction="http://tempuri.org/IXBService/GetPaidGuaranteeResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PaidGuarantee> GetPaidGuaranteeAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidGuarantees", ReplyAction="http://tempuri.org/IXBService/GetPaidGuaranteesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PaidGuarantee> GetPaidGuarantees(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidGuarantees", ReplyAction="http://tempuri.org/IXBService/GetPaidGuaranteesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PaidGuarantee>> GetPaidGuaranteesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidAccreditive", ReplyAction="http://tempuri.org/IXBService/GetPaidAccreditiveResponse")]
        Test.ServiceReference1.PaidAccreditive GetPaidAccreditive(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidAccreditive", ReplyAction="http://tempuri.org/IXBService/GetPaidAccreditiveResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PaidAccreditive> GetPaidAccreditiveAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidAccreditives", ReplyAction="http://tempuri.org/IXBService/GetPaidAccreditivesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PaidAccreditive> GetPaidAccreditives(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidAccreditives", ReplyAction="http://tempuri.org/IXBService/GetPaidAccreditivesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PaidAccreditive>> GetPaidAccreditivesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFactoring", ReplyAction="http://tempuri.org/IXBService/GetFactoringResponse")]
        Test.ServiceReference1.Factoring GetFactoring(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFactoring", ReplyAction="http://tempuri.org/IXBService/GetFactoringResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Factoring> GetFactoringAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFactorings", ReplyAction="http://tempuri.org/IXBService/GetFactoringsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Factoring> GetFactorings(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFactorings", ReplyAction="http://tempuri.org/IXBService/GetFactoringsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Factoring>> GetFactoringsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidFactoring", ReplyAction="http://tempuri.org/IXBService/GetPaidFactoringResponse")]
        Test.ServiceReference1.PaidFactoring GetPaidFactoring(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidFactoring", ReplyAction="http://tempuri.org/IXBService/GetPaidFactoringResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PaidFactoring> GetPaidFactoringAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidFactorings", ReplyAction="http://tempuri.org/IXBService/GetPaidFactoringsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PaidFactoring> GetPaidFactorings(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaidFactorings", ReplyAction="http://tempuri.org/IXBService/GetPaidFactoringsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PaidFactoring>> GetPaidFactoringsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedAccounts", ReplyAction="http://tempuri.org/IXBService/GetSearchedAccountsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchAccountResult> GetSearchedAccounts(Test.ServiceReference1.SearchAccounts searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedAccounts", ReplyAction="http://tempuri.org/IXBService/GetSearchedAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchAccountResult>> GetSearchedAccountsAsync(Test.ServiceReference1.SearchAccounts searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CloseAccountOrder", ReplyAction="http://tempuri.org/IXBService/CloseAccountOrderResponse")]
        Test.ServiceReference1.ActionResult CloseAccountOrder(Test.ServiceReference1.AccountClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CloseAccountOrder", ReplyAction="http://tempuri.org/IXBService/CloseAccountOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CloseAccountOrderAsync(Test.ServiceReference1.AccountClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveAccountClosing", ReplyAction="http://tempuri.org/IXBService/ApproveAccountClosingResponse")]
        Test.ServiceReference1.ActionResult ApproveAccountClosing(Test.ServiceReference1.AccountClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveAccountClosing", ReplyAction="http://tempuri.org/IXBService/ApproveAccountClosingResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveAccountClosingAsync(Test.ServiceReference1.AccountClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountClosing", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountClosingResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountClosing(Test.ServiceReference1.AccountClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountClosing", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountClosingResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountClosingAsync(Test.ServiceReference1.AccountClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountClosingOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountClosingOrderResponse")]
        Test.ServiceReference1.AccountClosingOrder GetAccountClosingOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountClosingOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountClosingOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountClosingOrder> GetAccountClosingOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult ApprovePeriodicPaymentOrder(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicPaymentOrderAsync(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult ApprovePeriodicUtilityPaymentOrder(Test.ServiceReference1.PeriodicUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicUtilityPaymentOrderAsync(Test.ServiceReference1.PeriodicUtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicBudgetPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndAprovePeriodicBudgetPaymentOrder(Test.ServiceReference1.PeriodicBudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndAprovePeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndAprovePeriodicBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicBudgetPaymentOrderAsync(Test.ServiceReference1.PeriodicBudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicBudgetPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult ApprovePeriodicBudgetPaymentOrder(Test.ServiceReference1.PeriodicBudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicBudgetPaymentOrderAsync(Test.ServiceReference1.PeriodicBudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicBudgetPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SavePeriodicBudgetPaymentOrder(Test.ServiceReference1.PeriodicBudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicBudgetPaymentOrderAsync(Test.ServiceReference1.PeriodicBudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedCards", ReplyAction="http://tempuri.org/IXBService/GetSearchedCardsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchCardResult> GetSearchedCards(Test.ServiceReference1.SearchCards searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedCards", ReplyAction="http://tempuri.org/IXBService/GetSearchedCardsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchCardResult>> GetSearchedCardsAsync(Test.ServiceReference1.SearchCards searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedSwiftCodes", ReplyAction="http://tempuri.org/IXBService/GetSearchedSwiftCodesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.SearchSwiftCodes> GetSearchedSwiftCodes(Test.ServiceReference1.SearchSwiftCodes searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSearchedSwiftCodes", ReplyAction="http://tempuri.org/IXBService/GetSearchedSwiftCodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchSwiftCodes>> GetSearchedSwiftCodesAsync(Test.ServiceReference1.SearchSwiftCodes searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/SaveCardClosingOrderResponse")]
        Test.ServiceReference1.ActionResult SaveCardClosingOrder(Test.ServiceReference1.CardClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/SaveCardClosingOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCardClosingOrderAsync(Test.ServiceReference1.CardClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/GetCardClosingOrderResponse")]
        Test.ServiceReference1.CardClosingOrder GetCardClosingOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/GetCardClosingOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardClosingOrder> GetCardClosingOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCardClosingOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveCardClosingOrder(Test.ServiceReference1.CardClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCardClosingOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCardClosingOrderAsync(Test.ServiceReference1.CardClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardClosingOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCardClosingOrder(Test.ServiceReference1.CardClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCardClosingOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCardClosingOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardClosingOrderAsync(Test.ServiceReference1.CardClosingOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardClosingWarnings", ReplyAction="http://tempuri.org/IXBService/GetCardClosingWarningsResponse")]
        System.Collections.Generic.List<string> GetCardClosingWarnings(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardClosingWarnings", ReplyAction="http://tempuri.org/IXBService/GetCardClosingWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCardClosingWarningsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentialClosingWarnings", ReplyAction="http://tempuri.org/IXBService/GetCredentialClosingWarningsResponse")]
        System.Collections.Generic.List<string> GetCredentialClosingWarnings(ulong assignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCredentialClosingWarnings", ReplyAction="http://tempuri.org/IXBService/GetCredentialClosingWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCredentialClosingWarningsAsync(ulong assignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicBudgetPaymentOrderResponse")]
        Test.ServiceReference1.PeriodicBudgetPaymentOrder GetPeriodicBudgetPaymentOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicBudgetPaymentOrder> GetPeriodicBudgetPaymentOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicUtilityPaymentOrderResponse")]
        Test.ServiceReference1.PeriodicUtilityPaymentOrder GetPeriodicUtilityPaymentOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicUtilityPaymentOrder> GetPeriodicUtilityPaymentOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicPaymentOrderResponse")]
        Test.ServiceReference1.PeriodicPaymentOrder GetPeriodicPaymentOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicPaymentOrder> GetPeriodicPaymentOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceiverAccountWarnings", ReplyAction="http://tempuri.org/IXBService/GetReceiverAccountWarningsResponse")]
        System.Collections.Generic.List<string> GetReceiverAccountWarnings(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceiverAccountWarnings", ReplyAction="http://tempuri.org/IXBService/GetReceiverAccountWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetReceiverAccountWarningsAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTerminationOrderResponse")]
        Test.ServiceReference1.PeriodicTerminationOrder GetPeriodicTerminationOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicTerminationOrder> GetPeriodicTerminationOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult ApprovePeriodicTerminationOrder(Test.ServiceReference1.PeriodicTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePeriodicTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicTerminationOrderAsync(Test.ServiceReference1.PeriodicTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePeriodicTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApprovePeriodicTerminationOrder(Test.ServiceReference1.PeriodicTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePeriodicTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePeriodicTerminationOrderAsync(Test.ServiceReference1.PeriodicTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SavePeriodicTerminationOrder(Test.ServiceReference1.PeriodicTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePeriodicTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SavePeriodicTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicTerminationOrderAsync(Test.ServiceReference1.PeriodicTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountReOpenOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountReOpenOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountReOpenOrder(Test.ServiceReference1.AccountReOpenOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountReOpenOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountReOpenOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountReOpenOrderAsync(Test.ServiceReference1.AccountReOpenOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountReOpenOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountReOpenOrderResponse")]
        Test.ServiceReference1.AccountReOpenOrder GetAccountReOpenOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountReOpenOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountReOpenOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountReOpenOrder> GetAccountReOpenOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountsForNewDeposit", ReplyAction="http://tempuri.org/IXBService/GetAccountsForNewDepositResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountsForNewDeposit(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountsForNewDeposit", ReplyAction="http://tempuri.org/IXBService/GetAccountsForNewDepositResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsForNewDepositAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountAdditionalDetails", ReplyAction="http://tempuri.org/IXBService/GetAccountAdditionalDetailsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails> GetAccountAdditionalDetails(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountAdditionalDetails", ReplyAction="http://tempuri.org/IXBService/GetAccountAdditionalDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails>> GetAccountAdditionalDetailsAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountAdditionsTypes", ReplyAction="http://tempuri.org/IXBService/GetAccountAdditionsTypesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAccountAdditionsTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountAdditionsTypes", ReplyAction="http://tempuri.org/IXBService/GetAccountAdditionsTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountAdditionsTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CreateSerialNumber", ReplyAction="http://tempuri.org/IXBService/CreateSerialNumberResponse")]
        string CreateSerialNumber(int currencyCode, byte operationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CreateSerialNumber", ReplyAction="http://tempuri.org/IXBService/CreateSerialNumberResponse")]
        System.Threading.Tasks.Task<string> CreateSerialNumberAsync(int currencyCode, byte operationType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateNewOrderNumber", ReplyAction="http://tempuri.org/IXBService/GenerateNewOrderNumberResponse")]
        ulong GenerateNewOrderNumber(Test.ServiceReference1.OrderNumberTypes orderNumberType, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateNewOrderNumber", ReplyAction="http://tempuri.org/IXBService/GenerateNewOrderNumberResponse")]
        System.Threading.Tasks.Task<ulong> GenerateNewOrderNumberAsync(Test.ServiceReference1.OrderNumberTypes orderNumberType, ushort filialCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunalReportParameters", ReplyAction="http://tempuri.org/IXBService/GetCommunalReportParametersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfstringstring> GetCommunalReportParameters(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunalReportParameters", ReplyAction="http://tempuri.org/IXBService/GetCommunalReportParametersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfstringstring>> GetCommunalReportParametersAsync(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountOpenWarnings", ReplyAction="http://tempuri.org/IXBService/GetAccountOpenWarningsResponse")]
        System.Collections.Generic.List<string> GetAccountOpenWarnings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountOpenWarnings", ReplyAction="http://tempuri.org/IXBService/GetAccountOpenWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAccountOpenWarningsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountDataChangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveAccountDataChangeOrder(Test.ServiceReference1.AccountDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveAccountDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveAccountDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountDataChangeOrderAsync(Test.ServiceReference1.AccountDataChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunalPaymentDescription", ReplyAction="http://tempuri.org/IXBService/GetCommunalPaymentDescriptionResponse")]
        string GetCommunalPaymentDescription(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunalPaymentDescription", ReplyAction="http://tempuri.org/IXBService/GetCommunalPaymentDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetCommunalPaymentDescriptionAsync(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderOPPersons", ReplyAction="http://tempuri.org/IXBService/GetOrderOPPersonsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.OPPerson> GetOrderOPPersons(string accountNumber, Test.ServiceReference1.OrderType orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderOPPersons", ReplyAction="http://tempuri.org/IXBService/GetOrderOPPersonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OPPerson>> GetOrderOPPersonsAsync(string accountNumber, Test.ServiceReference1.OrderType orderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountStatementDeliveryType", ReplyAction="http://tempuri.org/IXBService/GetAccountStatementDeliveryTypeResponse")]
        int GetAccountStatementDeliveryType(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountStatementDeliveryType", ReplyAction="http://tempuri.org/IXBService/GetAccountStatementDeliveryTypeResponse")]
        System.Threading.Tasks.Task<int> GetAccountStatementDeliveryTypeAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsPrepaidArmenTell", ReplyAction="http://tempuri.org/IXBService/IsPrepaidArmenTellResponse")]
        bool IsPrepaidArmenTell(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsPrepaidArmenTell", ReplyAction="http://tempuri.org/IXBService/IsPrepaidArmenTellResponse")]
        System.Threading.Tasks.Task<bool> IsPrepaidArmenTellAsync(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerDocumentWarnings", ReplyAction="http://tempuri.org/IXBService/GetCustomerDocumentWarningsResponse")]
        System.Collections.Generic.List<string> GetCustomerDocumentWarnings(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerDocumentWarnings", ReplyAction="http://tempuri.org/IXBService/GetCustomerDocumentWarningsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCustomerDocumentWarningsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetThreeMonthLoanRate", ReplyAction="http://tempuri.org/IXBService/GetThreeMonthLoanRateResponse")]
        double GetThreeMonthLoanRate(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetThreeMonthLoanRate", ReplyAction="http://tempuri.org/IXBService/GetThreeMonthLoanRateResponse")]
        System.Threading.Tasks.Task<double> GetThreeMonthLoanRateAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMatureCapitalPenalty", ReplyAction="http://tempuri.org/IXBService/GetLoanMatureCapitalPenaltyResponse")]
        double GetLoanMatureCapitalPenalty(Test.ServiceReference1.MatureOrder order, Test.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanMatureCapitalPenalty", ReplyAction="http://tempuri.org/IXBService/GetLoanMatureCapitalPenaltyResponse")]
        System.Threading.Tasks.Task<double> GetLoanMatureCapitalPenaltyAsync(Test.ServiceReference1.MatureOrder order, Test.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderAttachments", ReplyAction="http://tempuri.org/IXBService/GetOrderAttachmentsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.OrderAttachment> GetOrderAttachments(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderAttachments", ReplyAction="http://tempuri.org/IXBService/GetOrderAttachmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OrderAttachment>> GetOrderAttachmentsAsync(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderAttachment", ReplyAction="http://tempuri.org/IXBService/GetOrderAttachmentResponse")]
        Test.ServiceReference1.OrderAttachment GetOrderAttachment(string attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderAttachment", ReplyAction="http://tempuri.org/IXBService/GetOrderAttachmentResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.OrderAttachment> GetOrderAttachmentAsync(string attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferAttachmentInfo", ReplyAction="http://tempuri.org/IXBService/GetTransferAttachmentInfoResponse")]
        Test.ServiceReference1.OrderAttachment GetTransferAttachmentInfo(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferAttachmentInfo", ReplyAction="http://tempuri.org/IXBService/GetTransferAttachmentInfoResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.OrderAttachment> GetTransferAttachmentInfoAsync(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferAttachment", ReplyAction="http://tempuri.org/IXBService/GetTransferAttachmentResponse")]
        Test.ServiceReference1.OrderAttachment GetTransferAttachment(ulong attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferAttachment", ReplyAction="http://tempuri.org/IXBService/GetTransferAttachmentResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.OrderAttachment> GetTransferAttachmentAsync(ulong attachmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountDataChangeOrderResponse")]
        Test.ServiceReference1.AccountDataChangeOrder GetAccountDataChangeOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountDataChangeOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountDataChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountDataChangeOrder> GetAccountDataChangeOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsBigAmountForPaymentOrder", ReplyAction="http://tempuri.org/IXBService/IsBigAmountForPaymentOrderResponse")]
        Test.ServiceReference1.TupleOfbooleanstring IsBigAmountForPaymentOrder(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsBigAmountForPaymentOrder", ReplyAction="http://tempuri.org/IXBService/IsBigAmountForPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TupleOfbooleanstring> IsBigAmountForPaymentOrderAsync(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsBigAmountForCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/IsBigAmountForCurrencyExchangeOrderResponse")]
        Test.ServiceReference1.TupleOfbooleanstring IsBigAmountForCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/IsBigAmountForCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/IsBigAmountForCurrencyExchangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TupleOfbooleanstring> IsBigAmountForCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderServiceFee", ReplyAction="http://tempuri.org/IXBService/GetOrderServiceFeeResponse")]
        double GetOrderServiceFee(Test.ServiceReference1.OrderType type, int urgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderServiceFee", ReplyAction="http://tempuri.org/IXBService/GetOrderServiceFeeResponse")]
        System.Threading.Tasks.Task<double> GetOrderServiceFeeAsync(Test.ServiceReference1.OrderType type, int urgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckForTransactionLimit", ReplyAction="http://tempuri.org/IXBService/CheckForTransactionLimitResponse")]
        Test.ServiceReference1.ActionResult CheckForTransactionLimit(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckForTransactionLimit", ReplyAction="http://tempuri.org/IXBService/CheckForTransactionLimitResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CheckForTransactionLimitAsync(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransitPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransitPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveTransitPaymentOrder(Test.ServiceReference1.TransitPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveTransitPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveTransitPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransitPaymentOrderAsync(Test.ServiceReference1.TransitPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetTransitPaymentOrderResponse")]
        Test.ServiceReference1.TransitPaymentOrder GetTransitPaymentOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransitPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetTransitPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransitPaymentOrder> GetTransitPaymentOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanCalculatedRest", ReplyAction="http://tempuri.org/IXBService/GetLoanCalculatedRestResponse")]
        double GetLoanCalculatedRest(Test.ServiceReference1.Loan loan, ulong customerNumber, short matureType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanCalculatedRest", ReplyAction="http://tempuri.org/IXBService/GetLoanCalculatedRestResponse")]
        System.Threading.Tasks.Task<double> GetLoanCalculatedRestAsync(Test.ServiceReference1.Loan loan, ulong customerNumber, short matureType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderDescription", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderDescriptionResponse")]
        string GetPaymentOrderDescription(Test.ServiceReference1.PaymentOrder order, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderDescription", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetPaymentOrderDescriptionAsync(Test.ServiceReference1.PaymentOrder order, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCurrencyExchangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCurrencyExchangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveCurrencyExchangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCurrencyExchangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveCurrencyExchangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveServicePaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveServicePaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveServicePaymentOrder(Test.ServiceReference1.ServicePaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveServicePaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveServicePaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveServicePaymentOrderAsync(Test.ServiceReference1.ServicePaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ConfirmOrder", ReplyAction="http://tempuri.org/IXBService/ConfirmOrderResponse")]
        Test.ServiceReference1.ActionResult ConfirmOrder(long orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ConfirmOrder", ReplyAction="http://tempuri.org/IXBService/ConfirmOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ConfirmOrderAsync(long orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerCashOuts", ReplyAction="http://tempuri.org/IXBService/GetCustomerCashOutsResponse")]
        double GetCustomerCashOuts(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerCashOuts", ReplyAction="http://tempuri.org/IXBService/GetCustomerCashOutsResponse")]
        System.Threading.Tasks.Task<double> GetCustomerCashOutsAsync(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrders", ReplyAction="http://tempuri.org/IXBService/GetOrdersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Order> GetOrders(Test.ServiceReference1.SearchOrders searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrders", ReplyAction="http://tempuri.org/IXBService/GetOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetOrdersAsync(Test.ServiceReference1.SearchOrders searchParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardServiceFee", ReplyAction="http://tempuri.org/IXBService/GetCardServiceFeeResponse")]
        Test.ServiceReference1.CardServiceFee GetCardServiceFee(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardServiceFee", ReplyAction="http://tempuri.org/IXBService/GetCardServiceFeeResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardServiceFee> GetCardServiceFeeAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFreezeHistory", ReplyAction="http://tempuri.org/IXBService/GetAccountFreezeHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.AccountFreezeDetails> GetAccountFreezeHistory(string accountNumber, ushort freezeStatus, ushort reasonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFreezeHistory", ReplyAction="http://tempuri.org/IXBService/GetAccountFreezeHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AccountFreezeDetails>> GetAccountFreezeHistoryAsync(string accountNumber, ushort freezeStatus, ushort reasonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFreezeDetails", ReplyAction="http://tempuri.org/IXBService/GetAccountFreezeDetailsResponse")]
        Test.ServiceReference1.AccountFreezeDetails GetAccountFreezeDetails(string freezeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountFreezeDetails", ReplyAction="http://tempuri.org/IXBService/GetAccountFreezeDetailsResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountFreezeDetails> GetAccountFreezeDetailsAsync(string freezeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOperationSystemAccount", ReplyAction="http://tempuri.org/IXBService/GetOperationSystemAccountResponse")]
        Test.ServiceReference1.Account GetOperationSystemAccount(Test.ServiceReference1.Order order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency, ushort filialCode, string utilityBranch, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOperationSystemAccount", ReplyAction="http://tempuri.org/IXBService/GetOperationSystemAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetOperationSystemAccountAsync(Test.ServiceReference1.Order order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency, ushort filialCode, string utilityBranch, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetShortChangeAmount", ReplyAction="http://tempuri.org/IXBService/GetShortChangeAmountResponse")]
        Test.ServiceReference1.CurrencyExchangeOrder GetShortChangeAmount(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetShortChangeAmount", ReplyAction="http://tempuri.org/IXBService/GetShortChangeAmountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CurrencyExchangeOrder> GetShortChangeAmountAsync(Test.ServiceReference1.CurrencyExchangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRAFoundAccount", ReplyAction="http://tempuri.org/IXBService/GetRAFoundAccountResponse")]
        Test.ServiceReference1.Account GetRAFoundAccount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetRAFoundAccount", ReplyAction="http://tempuri.org/IXBService/GetRAFoundAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetRAFoundAccountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AuthorizeUserBySessionToken", ReplyAction="http://tempuri.org/IXBService/AuthorizeUserBySessionTokenResponse")]
        Test.ServiceReference1.AuthorizedUser AuthorizeUserBySessionToken(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AuthorizeUserBySessionToken", ReplyAction="http://tempuri.org/IXBService/AuthorizeUserBySessionTokenResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AuthorizedUser> AuthorizeUserBySessionTokenAsync(string authorizedUserSessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/InitUser", ReplyAction="http://tempuri.org/IXBService/InitUserResponse")]
        Test.ServiceReference1.User InitUser(Test.ServiceReference1.AuthorizedUser authUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/InitUser", ReplyAction="http://tempuri.org/IXBService/InitUserResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.User> InitUserAsync(Test.ServiceReference1.AuthorizedUser authUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCrossConvertationVariant", ReplyAction="http://tempuri.org/IXBService/GetCrossConvertationVariantResponse")]
        ushort GetCrossConvertationVariant(string debitCurrency, string creditCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCrossConvertationVariant", ReplyAction="http://tempuri.org/IXBService/GetCrossConvertationVariantResponse")]
        System.Threading.Tasks.Task<ushort> GetCrossConvertationVariantAsync(string debitCurrency, string creditCurrency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardType", ReplyAction="http://tempuri.org/IXBService/GetCardTypeResponse")]
        int GetCardType(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardType", ReplyAction="http://tempuri.org/IXBService/GetCardTypeResponse")]
        System.Threading.Tasks.Task<int> GetCardTypeAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCashPosPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCashPosPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCashPosPaymentOrder(Test.ServiceReference1.CashPosPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCashPosPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCashPosPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCashPosPaymentOrderAsync(Test.ServiceReference1.CashPosPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashPosPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetCashPosPaymentOrderFeeResponse")]
        double GetCashPosPaymentOrderFee(Test.ServiceReference1.CashPosPaymentOrder order, int feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashPosPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetCashPosPaymentOrderFeeResponse")]
        System.Threading.Tasks.Task<double> GetCashPosPaymentOrderFeeAsync(Test.ServiceReference1.CashPosPaymentOrder order, int feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanProductOrder", ReplyAction="http://tempuri.org/IXBService/SaveLoanProductOrderResponse")]
        Test.ServiceReference1.ActionResult SaveLoanProductOrder(Test.ServiceReference1.LoanProductOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveLoanProductOrder", ReplyAction="http://tempuri.org/IXBService/SaveLoanProductOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanProductOrderAsync(Test.ServiceReference1.LoanProductOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanOrder", ReplyAction="http://tempuri.org/IXBService/GetLoanOrderResponse")]
        Test.ServiceReference1.LoanProductOrder GetLoanOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanOrder", ReplyAction="http://tempuri.org/IXBService/GetLoanOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductOrder> GetLoanOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineOrder", ReplyAction="http://tempuri.org/IXBService/GetCreditLineOrderResponse")]
        Test.ServiceReference1.LoanProductOrder GetCreditLineOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineOrder", ReplyAction="http://tempuri.org/IXBService/GetCreditLineOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductOrder> GetCreditLineOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanProductOrder", ReplyAction="http://tempuri.org/IXBService/ApproveLoanProductOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveLoanProductOrder(Test.ServiceReference1.LoanProductOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveLoanProductOrder", ReplyAction="http://tempuri.org/IXBService/ApproveLoanProductOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanProductOrderAsync(Test.ServiceReference1.LoanProductOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveLoanProductOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveLoanProductOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveLoanProductOrder(Test.ServiceReference1.LoanProductOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveLoanProductOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveLoanProductOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveLoanProductOrderAsync(Test.ServiceReference1.LoanProductOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccount", ReplyAction="http://tempuri.org/IXBService/GetAccountResponse")]
        Test.ServiceReference1.Account GetAccount(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccount", ReplyAction="http://tempuri.org/IXBService/GetAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccounts", ReplyAction="http://tempuri.org/IXBService/GetAccountsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccounts", ReplyAction="http://tempuri.org/IXBService/GetAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentAccounts", ReplyAction="http://tempuri.org/IXBService/GetCurrentAccountsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetCurrentAccounts(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentAccounts", ReplyAction="http://tempuri.org/IXBService/GetCurrentAccountsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetCurrentAccountsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AccountStatement", ReplyAction="http://tempuri.org/IXBService/AccountStatementResponse")]
        Test.ServiceReference1.AccountStatement AccountStatement(string accountNumber, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AccountStatement", ReplyAction="http://tempuri.org/IXBService/AccountStatementResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.AccountStatement> AccountStatementAsync(string accountNumber, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCard", ReplyAction="http://tempuri.org/IXBService/GetCardResponse")]
        Test.ServiceReference1.Card GetCard(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCard", ReplyAction="http://tempuri.org/IXBService/GetCardResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Card> GetCardAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCards", ReplyAction="http://tempuri.org/IXBService/GetCardsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Card> GetCards(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCards", ReplyAction="http://tempuri.org/IXBService/GetCardsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Card>> GetCardsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardStatement", ReplyAction="http://tempuri.org/IXBService/GetCardStatementResponse")]
        Test.ServiceReference1.CardStatement GetCardStatement(string cardNumber, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardStatement", ReplyAction="http://tempuri.org/IXBService/GetCardStatementResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CardStatement> GetCardStatementAsync(string cardNumber, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoan", ReplyAction="http://tempuri.org/IXBService/GetLoanResponse")]
        Test.ServiceReference1.Loan GetLoan(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoan", ReplyAction="http://tempuri.org/IXBService/GetLoanResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Loan> GetLoanAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoans", ReplyAction="http://tempuri.org/IXBService/GetLoansResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Loan> GetLoans(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoans", ReplyAction="http://tempuri.org/IXBService/GetLoansResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Loan>> GetLoansAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDeposit", ReplyAction="http://tempuri.org/IXBService/GetDepositResponse")]
        Test.ServiceReference1.Deposit GetDeposit(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDeposit", ReplyAction="http://tempuri.org/IXBService/GetDepositResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Deposit> GetDepositAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDeposits", ReplyAction="http://tempuri.org/IXBService/GetDepositsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Deposit> GetDeposits(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDeposits", ReplyAction="http://tempuri.org/IXBService/GetDepositsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Deposit>> GetDepositsAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTransfer", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTransferResponse")]
        Test.ServiceReference1.PeriodicTransfer GetPeriodicTransfer(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTransfer", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicTransfer> GetPeriodicTransferAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTransfers", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTransfersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransfer> GetPeriodicTransfers(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTransfers", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTransfersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransfer>> GetPeriodicTransfersAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetArCaBalance", ReplyAction="http://tempuri.org/IXBService/GetArCaBalanceResponse")]
        Test.ServiceReference1.KeyValuePairOfstringdouble GetArCaBalance(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetArCaBalance", ReplyAction="http://tempuri.org/IXBService/GetArCaBalanceResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.KeyValuePairOfstringdouble> GetArCaBalanceAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDraftOrders", ReplyAction="http://tempuri.org/IXBService/GetDraftOrdersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Order> GetDraftOrders(System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDraftOrders", ReplyAction="http://tempuri.org/IXBService/GetDraftOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetDraftOrdersAsync(System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetMessages", ReplyAction="http://tempuri.org/IXBService/GetMessagesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Message> GetMessages(System.DateTime dateFrom, System.DateTime dateTo, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetMessages", ReplyAction="http://tempuri.org/IXBService/GetMessagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Message>> GetMessagesAsync(System.DateTime dateFrom, System.DateTime dateTo, short type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetNumberOfMessages", ReplyAction="http://tempuri.org/IXBService/GetNumberOfMessagesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Message> GetNumberOfMessages(short messagesCount, Test.ServiceReference1.MessageType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetNumberOfMessages", ReplyAction="http://tempuri.org/IXBService/GetNumberOfMessagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Message>> GetNumberOfMessagesAsync(short messagesCount, Test.ServiceReference1.MessageType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSentOrders", ReplyAction="http://tempuri.org/IXBService/GetSentOrdersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Order> GetSentOrders(System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSentOrders", ReplyAction="http://tempuri.org/IXBService/GetSentOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetSentOrdersAsync(System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AddMessage", ReplyAction="http://tempuri.org/IXBService/AddMessageResponse")]
        void AddMessage(Test.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AddMessage", ReplyAction="http://tempuri.org/IXBService/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(Test.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteMessage", ReplyAction="http://tempuri.org/IXBService/DeleteMessageResponse")]
        void DeleteMessage(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteMessage", ReplyAction="http://tempuri.org/IXBService/DeleteMessageResponse")]
        System.Threading.Tasks.Task DeleteMessageAsync(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/MarkMessageReaded", ReplyAction="http://tempuri.org/IXBService/MarkMessageReadedResponse")]
        void MarkMessageReaded(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/MarkMessageReaded", ReplyAction="http://tempuri.org/IXBService/MarkMessageReadedResponse")]
        System.Threading.Tasks.Task MarkMessageReadedAsync(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContact", ReplyAction="http://tempuri.org/IXBService/GetContactResponse")]
        Test.ServiceReference1.Contact GetContact(ulong contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContact", ReplyAction="http://tempuri.org/IXBService/GetContactResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Contact> GetContactAsync(ulong contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContacts", ReplyAction="http://tempuri.org/IXBService/GetContactsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Contact> GetContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetContacts", ReplyAction="http://tempuri.org/IXBService/GetContactsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Contact>> GetContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AddContact", ReplyAction="http://tempuri.org/IXBService/AddContactResponse")]
        void AddContact(Test.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/AddContact", ReplyAction="http://tempuri.org/IXBService/AddContactResponse")]
        System.Threading.Tasks.Task AddContactAsync(Test.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/UpdateContact", ReplyAction="http://tempuri.org/IXBService/UpdateContactResponse")]
        void UpdateContact(Test.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/UpdateContact", ReplyAction="http://tempuri.org/IXBService/UpdateContactResponse")]
        System.Threading.Tasks.Task UpdateContactAsync(Test.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteContact", ReplyAction="http://tempuri.org/IXBService/DeleteContactResponse")]
        void DeleteContact(ulong contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteContact", ReplyAction="http://tempuri.org/IXBService/DeleteContactResponse")]
        System.Threading.Tasks.Task DeleteContactAsync(ulong contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunals", ReplyAction="http://tempuri.org/IXBService/GetCommunalsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Communal> GetCommunals(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunals", ReplyAction="http://tempuri.org/IXBService/GetCommunalsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Communal>> GetCommunalsAsync(Test.ServiceReference1.SearchCommunal searchCommunal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunalDetails", ReplyAction="http://tempuri.org/IXBService/GetCommunalDetailsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CommunalDetails> GetCommunalDetails(short communalType, string abonentNumber, short checkType, string branchCode, Test.ServiceReference1.AbonentTypes abonentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCommunalDetails", ReplyAction="http://tempuri.org/IXBService/GetCommunalDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CommunalDetails>> GetCommunalDetailsAsync(short communalType, string abonentNumber, short checkType, string branchCode, Test.ServiceReference1.AbonentTypes abonentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SavePaymentOrder(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SavePaymentOrder", ReplyAction="http://tempuri.org/IXBService/SavePaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePaymentOrderAsync(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveBudgetPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveBudgetPaymentOrder(Test.ServiceReference1.BudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveBudgetPaymentOrderAsync(Test.ServiceReference1.BudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderResponse")]
        Test.ServiceReference1.PaymentOrder GetPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PaymentOrder> GetPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetBudgetPaymentOrderResponse")]
        Test.ServiceReference1.BudgetPaymentOrder GetBudgetPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.BudgetPaymentOrder> GetBudgetPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInternationalPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetInternationalPaymentOrderResponse")]
        Test.ServiceReference1.InternationalPaymentOrder GetInternationalPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInternationalPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetInternationalPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.InternationalPaymentOrder> GetInternationalPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetFastTransferPaymentOrderResponse")]
        Test.ServiceReference1.FastTransferPaymentOrder GetFastTransferPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetFastTransferPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.FastTransferPaymentOrder> GetFastTransferPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetReceivedFastTransferPaymentOrderResponse")]
        Test.ServiceReference1.ReceivedFastTransferPaymentOrder GetReceivedFastTransferPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetReceivedFastTransferPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ReceivedFastTransferPaymentOrder> GetReceivedFastTransferPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransfer", ReplyAction="http://tempuri.org/IXBService/GetTransferResponse")]
        Test.ServiceReference1.Transfer GetTransfer(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransfer", ReplyAction="http://tempuri.org/IXBService/GetTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Transfer> GetTransferAsync(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetApprovedTransfer", ReplyAction="http://tempuri.org/IXBService/GetApprovedTransferResponse")]
        Test.ServiceReference1.Transfer GetApprovedTransfer(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetApprovedTransfer", ReplyAction="http://tempuri.org/IXBService/GetApprovedTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Transfer> GetApprovedTransferAsync(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedBankMailTransfer", ReplyAction="http://tempuri.org/IXBService/GetReceivedBankMailTransferResponse")]
        Test.ServiceReference1.ReceivedBankMailTransfer GetReceivedBankMailTransfer(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedBankMailTransfer", ReplyAction="http://tempuri.org/IXBService/GetReceivedBankMailTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ReceivedBankMailTransfer> GetReceivedBankMailTransferAsync(ulong id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ConfirmTransfer", ReplyAction="http://tempuri.org/IXBService/ConfirmTransferResponse")]
        Test.ServiceReference1.ActionResult ConfirmTransfer(ulong transferID, short allowTransferConfirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ConfirmTransfer", ReplyAction="http://tempuri.org/IXBService/ConfirmTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ConfirmTransferAsync(ulong transferID, short allowTransferConfirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteTransfer", ReplyAction="http://tempuri.org/IXBService/DeleteTransferResponse")]
        Test.ServiceReference1.ActionResult DeleteTransfer(ulong transferID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteTransfer", ReplyAction="http://tempuri.org/IXBService/DeleteTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> DeleteTransferAsync(ulong transferID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveTransfer", ReplyAction="http://tempuri.org/IXBService/ApproveTransferResponse")]
        Test.ServiceReference1.ActionResult ApproveTransfer(Test.ServiceReference1.TransferApproveOrder transferApproveOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveTransfer", ReplyAction="http://tempuri.org/IXBService/ApproveTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveTransferAsync(Test.ServiceReference1.TransferApproveOrder transferApproveOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLastExchangeRate", ReplyAction="http://tempuri.org/IXBService/GetLastExchangeRateResponse")]
        double GetLastExchangeRate(string currency, Test.ServiceReference1.RateType rateType, Test.ServiceReference1.ExchangeDirection direction, ushort filalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLastExchangeRate", ReplyAction="http://tempuri.org/IXBService/GetLastExchangeRateResponse")]
        System.Threading.Tasks.Task<double> GetLastExchangeRateAsync(string currency, Test.ServiceReference1.RateType rateType, Test.ServiceReference1.ExchangeDirection direction, ushort filalCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFastTransferFeeAcbaPercent", ReplyAction="http://tempuri.org/IXBService/GetFastTransferFeeAcbaPercentResponse")]
        double GetFastTransferFeeAcbaPercent(byte transferType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFastTransferFeeAcbaPercent", ReplyAction="http://tempuri.org/IXBService/GetFastTransferFeeAcbaPercentResponse")]
        System.Threading.Tasks.Task<double> GetFastTransferFeeAcbaPercentAsync(byte transferType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedFastTransferFeePercent", ReplyAction="http://tempuri.org/IXBService/GetReceivedFastTransferFeePercentResponse")]
        double GetReceivedFastTransferFeePercent(byte transferType, string code, string countryCode, double amount, string currency, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedFastTransferFeePercent", ReplyAction="http://tempuri.org/IXBService/GetReceivedFastTransferFeePercentResponse")]
        System.Threading.Tasks.Task<double> GetReceivedFastTransferFeePercentAsync(byte transferType, string code, string countryCode, double amount, string currency, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFastTransferAcbaCommisionType", ReplyAction="http://tempuri.org/IXBService/GetFastTransferAcbaCommisionTypeResponse")]
        byte GetFastTransferAcbaCommisionType(byte transferType, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetFastTransferAcbaCommisionType", ReplyAction="http://tempuri.org/IXBService/GetFastTransferAcbaCommisionTypeResponse")]
        System.Threading.Tasks.Task<byte> GetFastTransferAcbaCommisionTypeAsync(byte transferType, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderFeeResponse")]
        double GetPaymentOrderFee(Test.ServiceReference1.PaymentOrder order, int feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderFeeResponse")]
        System.Threading.Tasks.Task<double> GetPaymentOrderFeeAsync(Test.ServiceReference1.PaymentOrder order, int feeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInternationalPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetInternationalPaymentOrderFeeResponse")]
        double GetInternationalPaymentOrderFee(Test.ServiceReference1.InternationalPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetInternationalPaymentOrderFee", ReplyAction="http://tempuri.org/IXBService/GetInternationalPaymentOrderFeeResponse")]
        System.Threading.Tasks.Task<double> GetInternationalPaymentOrderFeeAsync(Test.ServiceReference1.InternationalPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardFee", ReplyAction="http://tempuri.org/IXBService/GetCardFeeResponse")]
        double GetCardFee(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardFee", ReplyAction="http://tempuri.org/IXBService/GetCardFeeResponse")]
        System.Threading.Tasks.Task<double> GetCardFeeAsync(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderFutureBalance", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderFutureBalanceResponse")]
        Test.ServiceReference1.PaymentOrderFutureBalance GetPaymentOrderFutureBalance(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderFutureBalance", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderFutureBalanceResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PaymentOrderFutureBalance> GetPaymentOrderFutureBalanceAsync(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderFutureBalanceById", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderFutureBalanceByIdResponse")]
        Test.ServiceReference1.PaymentOrderFutureBalance GetPaymentOrderFutureBalanceById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPaymentOrderFutureBalanceById", ReplyAction="http://tempuri.org/IXBService/GetPaymentOrderFutureBalanceByIdResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.PaymentOrderFutureBalance> GetPaymentOrderFutureBalanceByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveUtiliyPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveUtiliyPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveUtiliyPaymentOrder(Test.ServiceReference1.UtilityPaymentOrder utilityPaymentOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveUtiliyPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveUtiliyPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveUtiliyPaymentOrderAsync(Test.ServiceReference1.UtilityPaymentOrder utilityPaymentOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePaymentOrderResponse")]
        Test.ServiceReference1.ActionResult ApprovePaymentOrder(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApprovePaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApprovePaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePaymentOrderAsync(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetUtilityPaymentOrderResponse")]
        Test.ServiceReference1.UtilityPaymentOrder GetUtilityPaymentOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/GetUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.UtilityPaymentOrder> GetUtilityPaymentOrderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountsForOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountsForOrderResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountsForOrder(short orderType, byte orderSubType, byte accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetAccountsForOrder", ReplyAction="http://tempuri.org/IXBService/GetAccountsForOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsForOrderAsync(short orderType, byte orderSubType, byte accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerAccountsForOrder", ReplyAction="http://tempuri.org/IXBService/GetCustomerAccountsForOrderResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Account> GetCustomerAccountsForOrder(ulong CustomerNumber, short orderType, byte orderSubType, byte accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerAccountsForOrder", ReplyAction="http://tempuri.org/IXBService/GetCustomerAccountsForOrderResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetCustomerAccountsForOrderAsync(ulong CustomerNumber, short orderType, byte orderSubType, byte accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteOrder", ReplyAction="http://tempuri.org/IXBService/DeleteOrderResponse")]
        Test.ServiceReference1.ActionResult DeleteOrder(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/DeleteOrder", ReplyAction="http://tempuri.org/IXBService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> DeleteOrderAsync(Test.ServiceReference1.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUnreadedMessagesCount", ReplyAction="http://tempuri.org/IXBService/GetUnreadedMessagesCountResponse")]
        int GetUnreadedMessagesCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUnreadedMessagesCount", ReplyAction="http://tempuri.org/IXBService/GetUnreadedMessagesCountResponse")]
        System.Threading.Tasks.Task<int> GetUnreadedMessagesCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SetUser", ReplyAction="http://tempuri.org/IXBService/SetUserResponse")]
        void SetUser(Test.ServiceReference1.AuthorizedCustomer authorizedCustomer, byte language, string ClientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SetUser", ReplyAction="http://tempuri.org/IXBService/SetUserResponse")]
        System.Threading.Tasks.Task SetUserAsync(Test.ServiceReference1.AuthorizedCustomer authorizedCustomer, byte language, string ClientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApproveUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveUtilityPaymentOrder(Test.ServiceReference1.UtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/ApproveUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveUtilityPaymentOrderAsync(Test.ServiceReference1.UtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrencyCode", ReplyAction="http://tempuri.org/IXBService/GetCurrencyCodeResponse")]
        string GetCurrencyCode(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrencyCode", ReplyAction="http://tempuri.org/IXBService/GetCurrencyCodeResponse")]
        System.Threading.Tasks.Task<string> GetCurrencyCodeAsync(string currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUnreadMessagesCountByType", ReplyAction="http://tempuri.org/IXBService/GetUnreadMessagesCountByTypeResponse")]
        int GetUnreadMessagesCountByType(Test.ServiceReference1.MessageType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetUnreadMessagesCountByType", ReplyAction="http://tempuri.org/IXBService/GetUnreadMessagesCountByTypeResponse")]
        System.Threading.Tasks.Task<int> GetUnreadMessagesCountByTypeAsync(Test.ServiceReference1.MessageType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveDepositOrder", ReplyAction="http://tempuri.org/IXBService/SaveDepositOrderResponse")]
        Test.ServiceReference1.ActionResult SaveDepositOrder(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveDepositOrder", ReplyAction="http://tempuri.org/IXBService/SaveDepositOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveDepositOrderAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveDepositTermination", ReplyAction="http://tempuri.org/IXBService/SaveDepositTerminationResponse")]
        Test.ServiceReference1.ActionResult SaveDepositTermination(Test.ServiceReference1.DepositTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveDepositTermination", ReplyAction="http://tempuri.org/IXBService/SaveDepositTerminationResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveDepositTerminationAsync(Test.ServiceReference1.DepositTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCreditLineTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCreditLineTerminationOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCreditLineTerminationOrder(Test.ServiceReference1.CreditLineTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCreditLineTerminationOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCreditLineTerminationOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCreditLineTerminationOrderAsync(Test.ServiceReference1.CreditLineTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositorder", ReplyAction="http://tempuri.org/IXBService/GetDepositorderResponse")]
        Test.ServiceReference1.DepositOrder GetDepositorder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositorder", ReplyAction="http://tempuri.org/IXBService/GetDepositorderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositOrder> GetDepositorderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveDepositOrder", ReplyAction="http://tempuri.org/IXBService/ApproveDepositOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveDepositOrder(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveDepositOrder", ReplyAction="http://tempuri.org/IXBService/ApproveDepositOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveDepositOrderAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveReferenceOrder", ReplyAction="http://tempuri.org/IXBService/SaveReferenceOrderResponse")]
        Test.ServiceReference1.ActionResult SaveReferenceOrder(Test.ServiceReference1.ReferenceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveReferenceOrder", ReplyAction="http://tempuri.org/IXBService/SaveReferenceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveReferenceOrderAsync(Test.ServiceReference1.ReferenceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveReferenceOrder", ReplyAction="http://tempuri.org/IXBService/ApproveReferenceOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveReferenceOrder(Test.ServiceReference1.ReferenceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveReferenceOrder", ReplyAction="http://tempuri.org/IXBService/ApproveReferenceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveReferenceOrderAsync(Test.ServiceReference1.ReferenceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReferenceOrder", ReplyAction="http://tempuri.org/IXBService/GetReferenceOrderResponse")]
        Test.ServiceReference1.ReferenceOrder GetReferenceOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReferenceOrder", ReplyAction="http://tempuri.org/IXBService/GetReferenceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ReferenceOrder> GetReferenceOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/SaveChequeBookOrderResponse")]
        Test.ServiceReference1.ActionResult SaveChequeBookOrder(Test.ServiceReference1.ChequeBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/SaveChequeBookOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveChequeBookOrderAsync(Test.ServiceReference1.ChequeBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/ApproveChequeBookOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveChequeBookOrder(Test.ServiceReference1.ChequeBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/ApproveChequeBookOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveChequeBookOrderAsync(Test.ServiceReference1.ChequeBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/GetChequeBookOrderResponse")]
        Test.ServiceReference1.ChequeBookOrder GetChequeBookOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/GetChequeBookOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ChequeBookOrder> GetChequeBookOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCashOrder", ReplyAction="http://tempuri.org/IXBService/SaveCashOrderResponse")]
        Test.ServiceReference1.ActionResult SaveCashOrder(Test.ServiceReference1.CashOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCashOrder", ReplyAction="http://tempuri.org/IXBService/SaveCashOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCashOrderAsync(Test.ServiceReference1.CashOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCashOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCashOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveCashOrder(Test.ServiceReference1.CashOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCashOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCashOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCashOrderAsync(Test.ServiceReference1.CashOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashOrder", ReplyAction="http://tempuri.org/IXBService/GetCashOrderResponse")]
        Test.ServiceReference1.CashOrder GetCashOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCashOrder", ReplyAction="http://tempuri.org/IXBService/GetCashOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CashOrder> GetCashOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/SaveStatmentByEmailOrderResponse")]
        Test.ServiceReference1.ActionResult SaveStatmentByEmailOrder(Test.ServiceReference1.StatmentByEmailOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/SaveStatmentByEmailOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveStatmentByEmailOrderAsync(Test.ServiceReference1.StatmentByEmailOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/ApproveStatmentByEmailOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveStatmentByEmailOrder(Test.ServiceReference1.StatmentByEmailOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/ApproveStatmentByEmailOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveStatmentByEmailOrderAsync(Test.ServiceReference1.StatmentByEmailOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/GetStatmentByEmailOrderResponse")]
        Test.ServiceReference1.StatmentByEmailOrder GetStatmentByEmailOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/GetStatmentByEmailOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.StatmentByEmailOrder> GetStatmentByEmailOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/SaveSwiftCopyOrderResponse")]
        Test.ServiceReference1.ActionResult SaveSwiftCopyOrder(Test.ServiceReference1.SwiftCopyOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/SaveSwiftCopyOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveSwiftCopyOrderAsync(Test.ServiceReference1.SwiftCopyOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/ApproveSwiftCopyOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveSwiftCopyOrder(Test.ServiceReference1.SwiftCopyOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/ApproveSwiftCopyOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveSwiftCopyOrderAsync(Test.ServiceReference1.SwiftCopyOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/GetSwiftCopyOrderResponse")]
        Test.ServiceReference1.SwiftCopyOrder GetSwiftCopyOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/GetSwiftCopyOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.SwiftCopyOrder> GetSwiftCopyOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/SaveCustomerDataOrderResponse")]
        Test.ServiceReference1.ActionResult SaveCustomerDataOrder(Test.ServiceReference1.CustomerDataOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/SaveCustomerDataOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCustomerDataOrderAsync(Test.ServiceReference1.CustomerDataOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCustomerDataOrderResponse")]
        Test.ServiceReference1.ActionResult ApproveCustomerDataOrder(Test.ServiceReference1.CustomerDataOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/ApproveCustomerDataOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCustomerDataOrderAsync(Test.ServiceReference1.CustomerDataOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/GetCustomerDataOrderResponse")]
        Test.ServiceReference1.CustomerDataOrder GetCustomerDataOrder(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/GetCustomerDataOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CustomerDataOrder> GetCustomerDataOrderAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetThirdPersons", ReplyAction="http://tempuri.org/IXBService/GetThirdPersonsResponse")]
        System.Collections.Generic.Dictionary<ulong, string> GetThirdPersons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetThirdPersons", ReplyAction="http://tempuri.org/IXBService/GetThirdPersonsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<ulong, string>> GetThirdPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckDepositOrderCondition", ReplyAction="http://tempuri.org/IXBService/CheckDepositOrderConditionResponse")]
        Test.ServiceReference1.ActionResult CheckDepositOrderCondition(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/CheckDepositOrderCondition", ReplyAction="http://tempuri.org/IXBService/CheckDepositOrderConditionResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CheckDepositOrderConditionAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCondition", ReplyAction="http://tempuri.org/IXBService/GetDepositConditionResponse")]
        Test.ServiceReference1.DepositOrderCondition GetDepositCondition(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCondition", ReplyAction="http://tempuri.org/IXBService/GetDepositConditionResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositOrderCondition> GetDepositConditionAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveDepositTermination", ReplyAction="http://tempuri.org/IXBService/ApproveDepositTerminationResponse")]
        Test.ServiceReference1.ActionResult ApproveDepositTermination(Test.ServiceReference1.DepositTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ApproveDepositTermination", ReplyAction="http://tempuri.org/IXBService/ApproveDepositTerminationResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveDepositTerminationAsync(Test.ServiceReference1.DepositTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransfersbyCall", ReplyAction="http://tempuri.org/IXBService/GetTransfersbyCallResponse")]
        Test.ServiceReference1.TransferByCallList GetTransfersbyCall(Test.ServiceReference1.TransferByCallFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransfersbyCall", ReplyAction="http://tempuri.org/IXBService/GetTransfersbyCallResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferByCallList> GetTransfersbyCallAsync(Test.ServiceReference1.TransferByCallFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerTransfersbyCall", ReplyAction="http://tempuri.org/IXBService/GetCustomerTransfersbyCallResponse")]
        Test.ServiceReference1.TransferByCallList GetCustomerTransfersbyCall(Test.ServiceReference1.TransferByCallFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerTransfersbyCall", ReplyAction="http://tempuri.org/IXBService/GetCustomerTransfersbyCallResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferByCallList> GetCustomerTransfersbyCallAsync(Test.ServiceReference1.TransferByCallFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransfers", ReplyAction="http://tempuri.org/IXBService/GetTransfersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.Transfer> GetTransfers(Test.ServiceReference1.TransferFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransfers", ReplyAction="http://tempuri.org/IXBService/GetTransfersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Transfer>> GetTransfersAsync(Test.ServiceReference1.TransferFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedBankMailTransfers", ReplyAction="http://tempuri.org/IXBService/GetReceivedBankMailTransfersResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.ReceivedBankMailTransfer> GetReceivedBankMailTransfers(Test.ServiceReference1.TransferFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetReceivedBankMailTransfers", ReplyAction="http://tempuri.org/IXBService/GetReceivedBankMailTransfersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ReceivedBankMailTransfer>> GetReceivedBankMailTransfersAsync(Test.ServiceReference1.TransferFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveTransferbyCall", ReplyAction="http://tempuri.org/IXBService/SaveTransferbyCallResponse")]
        Test.ServiceReference1.ActionResult SaveTransferbyCall(Test.ServiceReference1.TransferByCall transfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveTransferbyCall", ReplyAction="http://tempuri.org/IXBService/SaveTransferbyCallResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveTransferbyCallAsync(Test.ServiceReference1.TransferByCall transfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SendTransfeerCallForPay", ReplyAction="http://tempuri.org/IXBService/SendTransfeerCallForPayResponse")]
        Test.ServiceReference1.ActionResult SendTransfeerCallForPay(ulong transferID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SendTransfeerCallForPay", ReplyAction="http://tempuri.org/IXBService/SendTransfeerCallForPayResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SendTransfeerCallForPayAsync(ulong transferID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferbyCall", ReplyAction="http://tempuri.org/IXBService/GetTransferbyCallResponse")]
        Test.ServiceReference1.TransferByCall GetTransferbyCall(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetTransferbyCall", ReplyAction="http://tempuri.org/IXBService/GetTransferbyCallResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.TransferByCall> GetTransferbyCallAsync(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositRepayments", ReplyAction="http://tempuri.org/IXBService/GetDepositRepaymentsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DepositRepayment> GetDepositRepayments(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositRepayments", ReplyAction="http://tempuri.org/IXBService/GetDepositRepaymentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositRepayment>> GetDepositRepaymentsAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ManuallyRateChangingAccess", ReplyAction="http://tempuri.org/IXBService/ManuallyRateChangingAccessResponse")]
        bool ManuallyRateChangingAccess(double amount, string currency, string convertationCurrency, Test.ServiceReference1.SourceType sourceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/ManuallyRateChangingAccess", ReplyAction="http://tempuri.org/IXBService/ManuallyRateChangingAccessResponse")]
        System.Threading.Tasks.Task<bool> ManuallyRateChangingAccessAsync(double amount, string currency, string convertationCurrency, Test.ServiceReference1.SourceType sourceType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanGrafik", ReplyAction="http://tempuri.org/IXBService/GetLoanGrafikResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik> GetLoanGrafik(Test.ServiceReference1.Loan loan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanGrafik", ReplyAction="http://tempuri.org/IXBService/GetLoanGrafikResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik>> GetLoanGrafikAsync(Test.ServiceReference1.Loan loan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanInceptiveGrafik", ReplyAction="http://tempuri.org/IXBService/GetLoanInceptiveGrafikResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik> GetLoanInceptiveGrafik(Test.ServiceReference1.Loan loan, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetLoanInceptiveGrafik", ReplyAction="http://tempuri.org/IXBService/GetLoanInceptiveGrafikResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik>> GetLoanInceptiveGrafikAsync(Test.ServiceReference1.Loan loan, ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositJointCustomers", ReplyAction="http://tempuri.org/IXBService/GetDepositJointCustomersResponse")]
        System.Collections.Generic.List<ulong> GetDepositJointCustomers(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositJointCustomers", ReplyAction="http://tempuri.org/IXBService/GetDepositJointCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ulong>> GetDepositJointCustomersAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTransferHistory", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTransferHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransferHistory> GetPeriodicTransferHistory(long ProductId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetPeriodicTransferHistory", ReplyAction="http://tempuri.org/IXBService/GetPeriodicTransferHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransferHistory>> GetPeriodicTransferHistoryAsync(long ProductId, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLine", ReplyAction="http://tempuri.org/IXBService/GetCreditLineResponse")]
        Test.ServiceReference1.CreditLine GetCreditLine(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLine", ReplyAction="http://tempuri.org/IXBService/GetCreditLineResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.CreditLine> GetCreditLineAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasACBAOnline", ReplyAction="http://tempuri.org/IXBService/HasACBAOnlineResponse")]
        Test.ServiceReference1.HasHB HasACBAOnline();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/HasACBAOnline", ReplyAction="http://tempuri.org/IXBService/HasACBAOnlineResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.HasHB> HasACBAOnlineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLines", ReplyAction="http://tempuri.org/IXBService/GetCreditLinesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CreditLine> GetCreditLines(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLines", ReplyAction="http://tempuri.org/IXBService/GetCreditLinesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CreditLine>> GetCreditLinesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardClosedCreditLines", ReplyAction="http://tempuri.org/IXBService/GetCardClosedCreditLinesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CreditLine> GetCardClosedCreditLines(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCardClosedCreditLines", ReplyAction="http://tempuri.org/IXBService/GetCardClosedCreditLinesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CreditLine>> GetCardClosedCreditLinesAsync(string cardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineGrafik", ReplyAction="http://tempuri.org/IXBService/GetCreditLineGrafikResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CreditLineGrafik> GetCreditLineGrafik(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCreditLineGrafik", ReplyAction="http://tempuri.org/IXBService/GetCreditLineGrafikResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CreditLineGrafik>> GetCreditLineGrafikAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCases", ReplyAction="http://tempuri.org/IXBService/GetDepositCasesResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.DepositCase> GetDepositCases(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCases", ReplyAction="http://tempuri.org/IXBService/GetDepositCasesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositCase>> GetDepositCasesAsync(Test.ServiceReference1.ProductQualityFilter filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCase", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseResponse")]
        Test.ServiceReference1.DepositCase GetDepositCase(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetDepositCase", ReplyAction="http://tempuri.org/IXBService/GetDepositCaseResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.DepositCase> GetDepositCaseAsync(ulong productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/MakeSwiftStatement", ReplyAction="http://tempuri.org/IXBService/MakeSwiftStatementResponse")]
        Test.ServiceReference1.ActionResult MakeSwiftStatement(ulong messageUnicNumber, System.DateTime dateStatement, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/MakeSwiftStatement", ReplyAction="http://tempuri.org/IXBService/MakeSwiftStatementResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> MakeSwiftStatementAsync(ulong messageUnicNumber, System.DateTime dateStatement, System.DateTime dateFrom, System.DateTime dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateNewSwiftMessageByPeriodicTransfer", ReplyAction="http://tempuri.org/IXBService/GenerateNewSwiftMessageByPeriodicTransferResponse")]
        Test.ServiceReference1.SwiftMessage GenerateNewSwiftMessageByPeriodicTransfer(System.DateTime registrationDate, ulong periodicTransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GenerateNewSwiftMessageByPeriodicTransfer", ReplyAction="http://tempuri.org/IXBService/GenerateNewSwiftMessageByPeriodicTransferResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.SwiftMessage> GenerateNewSwiftMessageByPeriodicTransferAsync(System.DateTime registrationDate, ulong periodicTransferId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderHistory", ReplyAction="http://tempuri.org/IXBService/GetOrderHistoryResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.OrderHistory> GetOrderHistory(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetOrderHistory", ReplyAction="http://tempuri.org/IXBService/GetOrderHistoryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OrderHistory>> GetOrderHistoryAsync(long orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerDebts", ReplyAction="http://tempuri.org/IXBService/GetCustomerDebtsResponse")]
        System.Collections.Generic.List<Test.ServiceReference1.CustomerDebts> GetCustomerDebts(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCustomerDebts", ReplyAction="http://tempuri.org/IXBService/GetCustomerDebtsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CustomerDebts>> GetCustomerDebtsAsync(ulong customerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentAccount", ReplyAction="http://tempuri.org/IXBService/GetCurrentAccountResponse")]
        Test.ServiceReference1.Account GetCurrentAccount(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/GetCurrentAccount", ReplyAction="http://tempuri.org/IXBService/GetCurrentAccountResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetCurrentAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveDepositOrder(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositOrderAsync(Test.ServiceReference1.DepositOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositTermination", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositTerminationResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveDepositTermination(Test.ServiceReference1.DepositTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveDepositTermination", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveDepositTerminationResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositTerminationAsync(Test.ServiceReference1.DepositTerminationOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApprovePaymentOrder(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApprovePaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApprovePaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePaymentOrderAsync(Test.ServiceReference1.PaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReferenceOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReferenceOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveReferenceOrder(Test.ServiceReference1.ReferenceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReferenceOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReferenceOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReferenceOrderAsync(Test.ServiceReference1.ReferenceOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveChequeBookOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveChequeBookOrder(Test.ServiceReference1.ChequeBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveChequeBookOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveChequeBookOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveChequeBookOrderAsync(Test.ServiceReference1.ChequeBookOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCashOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCashOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCashOrder(Test.ServiceReference1.CashOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCashOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCashOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCashOrderAsync(Test.ServiceReference1.CashOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveSwiftCopyOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveSwiftCopyOrder(Test.ServiceReference1.SwiftCopyOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveSwiftCopyOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveSwiftCopyOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveSwiftCopyOrderAsync(Test.ServiceReference1.SwiftCopyOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveStatmentByEmailOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveStatmentByEmailOrder(Test.ServiceReference1.StatmentByEmailOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveStatmentByEmailOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveStatmentByEmailOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveStatmentByEmailOrderAsync(Test.ServiceReference1.StatmentByEmailOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCustomerDataOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCustomerDataOrder(Test.ServiceReference1.CustomerDataOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCustomerDataOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCustomerDataOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCustomerDataOrderAsync(Test.ServiceReference1.CustomerDataOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveUtilityPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveUtilityPaymentOrder(Test.ServiceReference1.UtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveUtilityPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveUtilityPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveUtilityPaymentOrderAsync(Test.ServiceReference1.UtilityPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveBudgetPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveBudgetPaymentOrder(Test.ServiceReference1.BudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveBudgetPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveBudgetPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveBudgetPaymentOrderAsync(Test.ServiceReference1.BudgetPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveInternationalPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveInternationalPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveInternationalPaymentOrder(Test.ServiceReference1.InternationalPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveInternationalPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveInternationalPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveInternationalPaymentOrderAsync(Test.ServiceReference1.InternationalPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveFastTransferPaymentOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveFastTransferPaymentOrder(Test.ServiceReference1.FastTransferPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveFastTransferPaymentOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveFastTransferPaymentOrderAsync(Test.ServiceReference1.FastTransferPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReceivedFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReceivedFastTransferPaymentOrderRespo" +
            "nse")]
        Test.ServiceReference1.ActionResult SaveAndApproveReceivedFastTransferPaymentOrder(Test.ServiceReference1.ReceivedFastTransferPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveReceivedFastTransferPaymentOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveReceivedFastTransferPaymentOrderRespo" +
            "nse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReceivedFastTransferPaymentOrderAsync(Test.ServiceReference1.ReceivedFastTransferPaymentOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCallTransferChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCallTransferChangeOrderResponse")]
        Test.ServiceReference1.ActionResult SaveAndApproveCallTransferChangeOrder(Test.ServiceReference1.TransferByCallChangeOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXBService/SaveAndApproveCallTransferChangeOrder", ReplyAction="http://tempuri.org/IXBService/SaveAndApproveCallTransferChangeOrderResponse")]
        System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCallTransferChangeOrderAsync(Test.ServiceReference1.TransferByCallChangeOrder order);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCreditsHereAndNow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCreditsHereAndNowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Test.ServiceReference1.SearchCreditHereAndNow serachParameters;
        
        public GetCreditsHereAndNowRequest() {
        }
        
        public GetCreditsHereAndNowRequest(Test.ServiceReference1.SearchCreditHereAndNow serachParameters) {
            this.serachParameters = serachParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCreditsHereAndNowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCreditsHereAndNowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<Test.ServiceReference1.CreditHereAndNow> GetCreditsHereAndNowResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int RowCount;
        
        public GetCreditsHereAndNowResponse() {
        }
        
        public GetCreditsHereAndNowResponse(System.Collections.Generic.List<Test.ServiceReference1.CreditHereAndNow> GetCreditsHereAndNowResult, int RowCount) {
            this.GetCreditsHereAndNowResult = GetCreditsHereAndNowResult;
            this.RowCount = RowCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSearchedPreOrderDetails", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSearchedPreOrderDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Test.ServiceReference1.SearchPreOrderDetails serachParameters;
        
        public GetSearchedPreOrderDetailsRequest() {
        }
        
        public GetSearchedPreOrderDetailsRequest(Test.ServiceReference1.SearchPreOrderDetails serachParameters) {
            this.serachParameters = serachParameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSearchedPreOrderDetailsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSearchedPreOrderDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<Test.ServiceReference1.PreOrderDetails> GetSearchedPreOrderDetailsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int RowCount;
        
        public GetSearchedPreOrderDetailsResponse() {
        }
        
        public GetSearchedPreOrderDetailsResponse(System.Collections.Generic.List<Test.ServiceReference1.PreOrderDetails> GetSearchedPreOrderDetailsResult, int RowCount) {
            this.GetSearchedPreOrderDetailsResult = GetSearchedPreOrderDetailsResult;
            this.RowCount = RowCount;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXBServiceChannel : Test.ServiceReference1.IXBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XBServiceClient : System.ServiceModel.ClientBase<Test.ServiceReference1.IXBService>, Test.ServiceReference1.IXBService {
        
        public XBServiceClient() {
        }
        
        public XBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder GetDepositCaseStoppingPenaltyCalculationOrder(long ID) {
            return base.Channel.GetDepositCaseStoppingPenaltyCalculationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder> GetDepositCaseStoppingPenaltyCalculationOrderAsync(long ID) {
            return base.Channel.GetDepositCaseStoppingPenaltyCalculationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.CTPaymentOrder GetCTPaymentOrder(long ID) {
            return base.Channel.GetCTPaymentOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CTPaymentOrder> GetCTPaymentOrderAsync(long ID) {
            return base.Channel.GetCTPaymentOrderAsync(ID);
        }
        
        public Test.ServiceReference1.CTLoanMatureOrder GetCTLoanMatureOrder(long ID) {
            return base.Channel.GetCTLoanMatureOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CTLoanMatureOrder> GetCTLoanMatureOrderAsync(long ID) {
            return base.Channel.GetCTLoanMatureOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveLoanMonitoringConclusion(Test.ServiceReference1.LoanMonitoringConclusion monitoring) {
            return base.Channel.SaveLoanMonitoringConclusion(monitoring);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanMonitoringConclusionAsync(Test.ServiceReference1.LoanMonitoringConclusion monitoring) {
            return base.Channel.SaveLoanMonitoringConclusionAsync(monitoring);
        }
        
        public Test.ServiceReference1.ActionResult ApproveLoanMonitoringConclusion(long monitoringId) {
            return base.Channel.ApproveLoanMonitoringConclusion(monitoringId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanMonitoringConclusionAsync(long monitoringId) {
            return base.Channel.ApproveLoanMonitoringConclusionAsync(monitoringId);
        }
        
        public Test.ServiceReference1.ActionResult DeleteLoanMonitoringConclusion(long monitoringId) {
            return base.Channel.DeleteLoanMonitoringConclusion(monitoringId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> DeleteLoanMonitoringConclusionAsync(long monitoringId) {
            return base.Channel.DeleteLoanMonitoringConclusionAsync(monitoringId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanMonitoringConclusion> GetLoanMonitoringConclusions(long productId) {
            return base.Channel.GetLoanMonitoringConclusions(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanMonitoringConclusion>> GetLoanMonitoringConclusionsAsync(long productId) {
            return base.Channel.GetLoanMonitoringConclusionsAsync(productId);
        }
        
        public Test.ServiceReference1.LoanMonitoringConclusion GetLoanMonitoringConclusion(long monitoringId, long productId) {
            return base.Channel.GetLoanMonitoringConclusion(monitoringId, productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanMonitoringConclusion> GetLoanMonitoringConclusionAsync(long monitoringId, long productId) {
            return base.Channel.GetLoanMonitoringConclusionAsync(monitoringId, productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionLinkedLoan> GetLinkedLoans(long productId) {
            return base.Channel.GetLinkedLoans(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.MonitoringConclusionLinkedLoan>> GetLinkedLoansAsync(long productId) {
            return base.Channel.GetLinkedLoansAsync(productId);
        }
        
        public float GetProvisionCoverCoefficient(long productId) {
            return base.Channel.GetProvisionCoverCoefficient(productId);
        }
        
        public System.Threading.Tasks.Task<float> GetProvisionCoverCoefficientAsync(long productId) {
            return base.Channel.GetProvisionCoverCoefficientAsync(productId);
        }
        
        public short GetLoanMonitoringType() {
            return base.Channel.GetLoanMonitoringType();
        }
        
        public System.Threading.Tasks.Task<short> GetLoanMonitoringTypeAsync() {
            return base.Channel.GetLoanMonitoringTypeAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> InitUserPagePermissions(string userSessionToken) {
            return base.Channel.InitUserPagePermissions(userSessionToken);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> InitUserPagePermissionsAsync(string userSessionToken) {
            return base.Channel.InitUserPagePermissionsAsync(userSessionToken);
        }
        
        public string GetAccountDescription(string accountNumber) {
            return base.Channel.GetAccountDescription(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountDescriptionAsync(string accountNumber) {
            return base.Channel.GetAccountDescriptionAsync(accountNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCredentialActivationOrder(Test.ServiceReference1.CredentialActivationOrder order) {
            return base.Channel.SaveAndApproveCredentialActivationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCredentialActivationOrderAsync(Test.ServiceReference1.CredentialActivationOrder order) {
            return base.Channel.SaveAndApproveCredentialActivationOrderAsync(order);
        }
        
        public Test.ServiceReference1.CredentialActivationOrder GetCredentialActivationOrder(long ID) {
            return base.Channel.GetCredentialActivationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CredentialActivationOrder> GetCredentialActivationOrderAsync(long ID) {
            return base.Channel.GetCredentialActivationOrderAsync(ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Test.ServiceReference1.GetCreditsHereAndNowResponse Test.ServiceReference1.IXBService.GetCreditsHereAndNow(Test.ServiceReference1.GetCreditsHereAndNowRequest request) {
            return base.Channel.GetCreditsHereAndNow(request);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CreditHereAndNow> GetCreditsHereAndNow(Test.ServiceReference1.SearchCreditHereAndNow serachParameters, out int RowCount) {
            Test.ServiceReference1.GetCreditsHereAndNowRequest inValue = new Test.ServiceReference1.GetCreditsHereAndNowRequest();
            inValue.serachParameters = serachParameters;
            Test.ServiceReference1.GetCreditsHereAndNowResponse retVal = ((Test.ServiceReference1.IXBService)(this)).GetCreditsHereAndNow(inValue);
            RowCount = retVal.RowCount;
            return retVal.GetCreditsHereAndNowResult;
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.GetCreditsHereAndNowResponse> GetCreditsHereAndNowAsync(Test.ServiceReference1.GetCreditsHereAndNowRequest request) {
            return base.Channel.GetCreditsHereAndNowAsync(request);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCreditHereAndNowActivationOrders(Test.ServiceReference1.CreditHereAndNowActivationOrders creditHereAndNowActivationOrders) {
            return base.Channel.SaveAndApproveCreditHereAndNowActivationOrders(creditHereAndNowActivationOrders);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCreditHereAndNowActivationOrdersAsync(Test.ServiceReference1.CreditHereAndNowActivationOrders creditHereAndNowActivationOrders) {
            return base.Channel.SaveAndApproveCreditHereAndNowActivationOrdersAsync(creditHereAndNowActivationOrders);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Test.ServiceReference1.GetSearchedPreOrderDetailsResponse Test.ServiceReference1.IXBService.GetSearchedPreOrderDetails(Test.ServiceReference1.GetSearchedPreOrderDetailsRequest request) {
            return base.Channel.GetSearchedPreOrderDetails(request);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PreOrderDetails> GetSearchedPreOrderDetails(Test.ServiceReference1.SearchPreOrderDetails serachParameters, out int RowCount) {
            Test.ServiceReference1.GetSearchedPreOrderDetailsRequest inValue = new Test.ServiceReference1.GetSearchedPreOrderDetailsRequest();
            inValue.serachParameters = serachParameters;
            Test.ServiceReference1.GetSearchedPreOrderDetailsResponse retVal = ((Test.ServiceReference1.IXBService)(this)).GetSearchedPreOrderDetails(inValue);
            RowCount = retVal.RowCount;
            return retVal.GetSearchedPreOrderDetailsResult;
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.GetSearchedPreOrderDetailsResponse> GetSearchedPreOrderDetailsAsync(Test.ServiceReference1.GetSearchedPreOrderDetailsRequest request) {
            return base.Channel.GetSearchedPreOrderDetailsAsync(request);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ActionResult> SaveAndApproveAutomaticGenaratedPreOrders(long preOrderId) {
            return base.Channel.SaveAndApproveAutomaticGenaratedPreOrders(preOrderId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ActionResult>> SaveAndApproveAutomaticGenaratedPreOrdersAsync(long preOrderId) {
            return base.Channel.SaveAndApproveAutomaticGenaratedPreOrdersAsync(preOrderId);
        }
        
        public ulong AuthorizeCustomerByLoanApp(ulong productId) {
            return base.Channel.AuthorizeCustomerByLoanApp(productId);
        }
        
        public System.Threading.Tasks.Task<ulong> AuthorizeCustomerByLoanAppAsync(ulong productId) {
            return base.Channel.AuthorizeCustomerByLoanAppAsync(productId);
        }
        
        public bool HasPropertyProvision(ulong productId) {
            return base.Channel.HasPropertyProvision(productId);
        }
        
        public System.Threading.Tasks.Task<bool> HasPropertyProvisionAsync(ulong productId) {
            return base.Channel.HasPropertyProvisionAsync(productId);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveTransferCallContractTerminationOrder(Test.ServiceReference1.TransferCallContractTerminationOrder order) {
            return base.Channel.SaveAndApproveTransferCallContractTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransferCallContractTerminationOrderAsync(Test.ServiceReference1.TransferCallContractTerminationOrder order) {
            return base.Channel.SaveAndApproveTransferCallContractTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.TransferCallContractTerminationOrder GetTransferCallContractTerminationOrder(long ID) {
            return base.Channel.GetTransferCallContractTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContractTerminationOrder> GetTransferCallContractTerminationOrderAsync(long ID) {
            return base.Channel.GetTransferCallContractTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.Order GetOrder(long ID) {
            return base.Channel.GetOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Order> GetOrderAsync(long ID) {
            return base.Channel.GetOrderAsync(ID);
        }
        
        public bool AccountAccessible(string accountNumber, long accountGroup) {
            return base.Channel.AccountAccessible(accountNumber, accountGroup);
        }
        
        public System.Threading.Tasks.Task<bool> AccountAccessibleAsync(string accountNumber, long accountGroup) {
            return base.Channel.AccountAccessibleAsync(accountNumber, accountGroup);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.RejectedOrderMessage> GetRejectedMessages(int filter, int start, int end) {
            return base.Channel.GetRejectedMessages(filter, start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.RejectedOrderMessage>> GetRejectedMessagesAsync(int filter, int start, int end) {
            return base.Channel.GetRejectedMessagesAsync(filter, start, end);
        }
        
        public void CloseRejectedMessage(int messageId) {
            base.Channel.CloseRejectedMessage(messageId);
        }
        
        public System.Threading.Tasks.Task CloseRejectedMessageAsync(int messageId) {
            return base.Channel.CloseRejectedMessageAsync(messageId);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveDepositCaseOrder(Test.ServiceReference1.DepositCaseOrder order) {
            return base.Channel.SaveAndApproveDepositCaseOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositCaseOrderAsync(Test.ServiceReference1.DepositCaseOrder order) {
            return base.Channel.SaveAndApproveDepositCaseOrderAsync(order);
        }
        
        public ulong GetDepositCaseOrderContractNumber() {
            return base.Channel.GetDepositCaseOrderContractNumber();
        }
        
        public System.Threading.Tasks.Task<ulong> GetDepositCaseOrderContractNumberAsync() {
            return base.Channel.GetDepositCaseOrderContractNumberAsync();
        }
        
        public int GetTotalRejectedUserMessages() {
            return base.Channel.GetTotalRejectedUserMessages();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalRejectedUserMessagesAsync() {
            return base.Channel.GetTotalRejectedUserMessagesAsync();
        }
        
        public int GetTotalNotConfirmedOrder() {
            return base.Channel.GetTotalNotConfirmedOrder();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalNotConfirmedOrderAsync() {
            return base.Channel.GetTotalNotConfirmedOrderAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DepositCaseMap> GetDepositCaseMap(short caseSide) {
            return base.Channel.GetDepositCaseMap(caseSide);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositCaseMap>> GetDepositCaseMapAsync(short caseSide) {
            return base.Channel.GetDepositCaseMapAsync(caseSide);
        }
        
        public double GetDepositCasePrice(string caseNumber, int filialCode, short contractDuration) {
            return base.Channel.GetDepositCasePrice(caseNumber, filialCode, contractDuration);
        }
        
        public System.Threading.Tasks.Task<double> GetDepositCasePriceAsync(string caseNumber, int filialCode, short contractDuration) {
            return base.Channel.GetDepositCasePriceAsync(caseNumber, filialCode, contractDuration);
        }
        
        public Test.ServiceReference1.DepositCaseOrder GetDepositCaseOrder(long id) {
            return base.Channel.GetDepositCaseOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositCaseOrder> GetDepositCaseOrderAsync(long id) {
            return base.Channel.GetDepositCaseOrderAsync(id);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract> GetCustomerCardTariffContracts(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCustomerCardTariffContracts(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract>> GetCustomerCardTariffContractsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCustomerCardTariffContractsAsync(filter);
        }
        
        public bool HasCardTariffContract() {
            return base.Channel.HasCardTariffContract();
        }
        
        public System.Threading.Tasks.Task<bool> HasCardTariffContractAsync() {
            return base.Channel.HasCardTariffContractAsync();
        }
        
        public int GetCardTariffContractActiveCardsCount(int contractId) {
            return base.Channel.GetCardTariffContractActiveCardsCount(contractId);
        }
        
        public System.Threading.Tasks.Task<int> GetCardTariffContractActiveCardsCountAsync(int contractId) {
            return base.Channel.GetCardTariffContractActiveCardsCountAsync(contractId);
        }
        
        public bool HasPosTerminal() {
            return base.Channel.HasPosTerminal();
        }
        
        public System.Threading.Tasks.Task<bool> HasPosTerminalAsync() {
            return base.Channel.HasPosTerminalAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PosLocation> GetCustomerPosLocations(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCustomerPosLocations(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PosLocation>> GetCustomerPosLocationsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCustomerPosLocationsAsync(filter);
        }
        
        public Test.ServiceReference1.PosLocation GetPosLocation(int posLocationId) {
            return base.Channel.GetPosLocation(posLocationId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PosLocation> GetPosLocationAsync(int posLocationId) {
            return base.Channel.GetPosLocationAsync(posLocationId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PosRate> GetPosRates(int terminalId) {
            return base.Channel.GetPosRates(terminalId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PosRate>> GetPosRatesAsync(int terminalId) {
            return base.Channel.GetPosRatesAsync(terminalId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Order> GetApproveReqOrder(System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetApproveReqOrder(dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetApproveReqOrderAsync(System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetApproveReqOrderAsync(dateFrom, dateTo);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PosCashbackRate> GetPosCashbackRates(int terminalId) {
            return base.Channel.GetPosCashbackRates(terminalId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PosCashbackRate>> GetPosCashbackRatesAsync(int terminalId) {
            return base.Channel.GetPosCashbackRatesAsync(terminalId);
        }
        
        public short IsCustomerSwiftTransferVerified(ulong customerNummber, string swiftCode, string receiverAaccount) {
            return base.Channel.IsCustomerSwiftTransferVerified(customerNummber, swiftCode, receiverAaccount);
        }
        
        public System.Threading.Tasks.Task<short> IsCustomerSwiftTransferVerifiedAsync(ulong customerNummber, string swiftCode, string receiverAaccount) {
            return base.Channel.IsCustomerSwiftTransferVerifiedAsync(customerNummber, swiftCode, receiverAaccount);
        }
        
        public bool IsExistingTransferByCall(short transferSystem, string code, long transferId) {
            return base.Channel.IsExistingTransferByCall(transferSystem, code, transferId);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistingTransferByCallAsync(short transferSystem, string code, long transferId) {
            return base.Channel.IsExistingTransferByCallAsync(transferSystem, code, transferId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PlasticCard> GetCardsForRegistration() {
            return base.Channel.GetCardsForRegistration();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PlasticCard>> GetCardsForRegistrationAsync() {
            return base.Channel.GetCardsForRegistrationAsync();
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveDepositCasePenaltyMatureOrder(Test.ServiceReference1.DepositCasePenaltyMatureOrder order) {
            return base.Channel.SaveAndApproveDepositCasePenaltyMatureOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositCasePenaltyMatureOrderAsync(Test.ServiceReference1.DepositCasePenaltyMatureOrder order) {
            return base.Channel.SaveAndApproveDepositCasePenaltyMatureOrderAsync(order);
        }
        
        public Test.ServiceReference1.DepositCasePenaltyMatureOrder GetDepositCasePenaltyMatureOrder(long id) {
            return base.Channel.GetDepositCasePenaltyMatureOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositCasePenaltyMatureOrder> GetDepositCasePenaltyMatureOrderAsync(long id) {
            return base.Channel.GetDepositCasePenaltyMatureOrderAsync(id);
        }
        
        public Test.ServiceReference1.ActionResult SavePeriodicSwiftStatementOrder(Test.ServiceReference1.PeriodicSwiftStatementOrder order) {
            return base.Channel.SavePeriodicSwiftStatementOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicSwiftStatementOrderAsync(Test.ServiceReference1.PeriodicSwiftStatementOrder order) {
            return base.Channel.SavePeriodicSwiftStatementOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndAprovePeriodicSwiftStatementOrder(Test.ServiceReference1.PeriodicSwiftStatementOrder order) {
            return base.Channel.SaveAndAprovePeriodicSwiftStatementOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicSwiftStatementOrderAsync(Test.ServiceReference1.PeriodicSwiftStatementOrder order) {
            return base.Channel.SaveAndAprovePeriodicSwiftStatementOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardRegistrationOrder(Test.ServiceReference1.CardRegistrationOrder order) {
            return base.Channel.SaveAndApproveCardRegistrationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardRegistrationOrderAsync(Test.ServiceReference1.CardRegistrationOrder order) {
            return base.Channel.SaveAndApproveCardRegistrationOrderAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountListForCardRegistration(string cardCurrency, int cardFililal) {
            return base.Channel.GetAccountListForCardRegistration(cardCurrency, cardFililal);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountListForCardRegistrationAsync(string cardCurrency, int cardFililal) {
            return base.Channel.GetAccountListForCardRegistrationAsync(cardCurrency, cardFililal);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetOverdraftAccountsForCardRegistration(string cardCurrency, int cardFililal) {
            return base.Channel.GetOverdraftAccountsForCardRegistration(cardCurrency, cardFililal);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetOverdraftAccountsForCardRegistrationAsync(string cardCurrency, int cardFililal) {
            return base.Channel.GetOverdraftAccountsForCardRegistrationAsync(cardCurrency, cardFililal);
        }
        
        public Test.ServiceReference1.CardRegistrationOrder GetCardRegistrationOrder(long ID) {
            return base.Channel.GetCardRegistrationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardRegistrationOrder> GetCardRegistrationOrderAsync(long ID) {
            return base.Channel.GetCardRegistrationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApprovePeriodicSwiftStatementOrder(Test.ServiceReference1.PeriodicSwiftStatementOrder order) {
            return base.Channel.ApprovePeriodicSwiftStatementOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicSwiftStatementOrderAsync(Test.ServiceReference1.PeriodicSwiftStatementOrder order) {
            return base.Channel.ApprovePeriodicSwiftStatementOrderAsync(order);
        }
        
        public double GetPeriodicSwiftStatementOrderFee() {
            return base.Channel.GetPeriodicSwiftStatementOrderFee();
        }
        
        public System.Threading.Tasks.Task<double> GetPeriodicSwiftStatementOrderFeeAsync() {
            return base.Channel.GetPeriodicSwiftStatementOrderFeeAsync();
        }
        
        public Test.ServiceReference1.PeriodicSwiftStatementOrder GetPeriodicSwiftStatementOrder(long ID) {
            return base.Channel.GetPeriodicSwiftStatementOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicSwiftStatementOrder> GetPeriodicSwiftStatementOrderAsync(long ID) {
            return base.Channel.GetPeriodicSwiftStatementOrderAsync(ID);
        }
        
        public bool CheckTransferToShopPayment(ulong productId) {
            return base.Channel.CheckTransferToShopPayment(productId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckTransferToShopPaymentAsync(ulong productId) {
            return base.Channel.CheckTransferToShopPaymentAsync(productId);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveTransferToShopOrder(Test.ServiceReference1.TransferToShopOrder order) {
            return base.Channel.SaveAndApproveTransferToShopOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransferToShopOrderAsync(Test.ServiceReference1.TransferToShopOrder order) {
            return base.Channel.SaveAndApproveTransferToShopOrderAsync(order);
        }
        
        public Test.ServiceReference1.Account GetShopAccount(ulong productId) {
            return base.Channel.GetShopAccount(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetShopAccountAsync(ulong productId) {
            return base.Channel.GetShopAccountAsync(productId);
        }
        
        public Test.ServiceReference1.TransferToShopOrder GetTransferToShopOrder(long ID) {
            return base.Channel.GetTransferToShopOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferToShopOrder> GetTransferToShopOrderAsync(long ID) {
            return base.Channel.GetTransferToShopOrderAsync(ID);
        }
        
        public double GetCOWaterOrderAmount(string abonentNumber, string branchCode, ushort paymentType) {
            return base.Channel.GetCOWaterOrderAmount(abonentNumber, branchCode, paymentType);
        }
        
        public System.Threading.Tasks.Task<double> GetCOWaterOrderAmountAsync(string abonentNumber, string branchCode, ushort paymentType) {
            return base.Channel.GetCOWaterOrderAmountAsync(abonentNumber, branchCode, paymentType);
        }
        
        public System.Collections.Generic.List<string> GetCardRegistrationWarnings(Test.ServiceReference1.PlasticCard plasticCard) {
            return base.Channel.GetCardRegistrationWarnings(plasticCard);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCardRegistrationWarningsAsync(Test.ServiceReference1.PlasticCard plasticCard) {
            return base.Channel.GetCardRegistrationWarningsAsync(plasticCard);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Provision> GetCustomerProvisions(string currency, ushort type, ushort quality) {
            return base.Channel.GetCustomerProvisions(currency, type, quality);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Provision>> GetCustomerProvisionsAsync(string currency, ushort type, ushort quality) {
            return base.Channel.GetCustomerProvisionsAsync(currency, type, quality);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ProvisionLoan> GetProvisionLoans(ulong provisionId) {
            return base.Channel.GetProvisionLoans(provisionId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ProvisionLoan>> GetProvisionLoansAsync(ulong provisionId) {
            return base.Channel.GetProvisionLoansAsync(provisionId);
        }
        
        public Test.ServiceReference1.Insurance GetInsurance(ulong productId) {
            return base.Channel.GetInsurance(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Insurance> GetInsuranceAsync(ulong productId) {
            return base.Channel.GetInsuranceAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Insurance> GetInsurances(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetInsurances(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Insurance>> GetInsurancesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetInsurancesAsync(filter);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Insurance> GetPaidInsurance(ulong loanProductId) {
            return base.Channel.GetPaidInsurance(loanProductId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Insurance>> GetPaidInsuranceAsync(ulong loanProductId) {
            return base.Channel.GetPaidInsuranceAsync(loanProductId);
        }
        
        public Test.ServiceReference1.InsuranceOrder GetInsuranceOrder(long ID) {
            return base.Channel.GetInsuranceOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.InsuranceOrder> GetInsuranceOrderAsync(long ID) {
            return base.Channel.GetInsuranceOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveInsuranceOrder(Test.ServiceReference1.InsuranceOrder order) {
            return base.Channel.SaveAndApproveInsuranceOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveInsuranceOrderAsync(Test.ServiceReference1.InsuranceOrder order) {
            return base.Channel.SaveAndApproveInsuranceOrderAsync(order);
        }
        
        public Test.ServiceReference1.Account GetInsuraceCompanySystemAccount(ushort companyID, ushort insuranceType) {
            return base.Channel.GetInsuraceCompanySystemAccount(companyID, insuranceType);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetInsuraceCompanySystemAccountAsync(ushort companyID, ushort insuranceType) {
            return base.Channel.GetInsuraceCompanySystemAccountAsync(companyID, insuranceType);
        }
        
        public uint GetInsuranceCompanySystemAccountNumber(ushort companyID, ushort insuranceType) {
            return base.Channel.GetInsuranceCompanySystemAccountNumber(companyID, insuranceType);
        }
        
        public System.Threading.Tasks.Task<uint> GetInsuranceCompanySystemAccountNumberAsync(ushort companyID, ushort insuranceType) {
            return base.Channel.GetInsuranceCompanySystemAccountNumberAsync(companyID, insuranceType);
        }
        
        public bool CheckAccountForDAHK(string accountNumber) {
            return base.Channel.CheckAccountForDAHK(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccountForDAHKAsync(string accountNumber) {
            return base.Channel.CheckAccountForDAHKAsync(accountNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardDataChangeOrder(Test.ServiceReference1.CardDataChangeOrder order) {
            return base.Channel.SaveAndApproveCardDataChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardDataChangeOrderAsync(Test.ServiceReference1.CardDataChangeOrder order) {
            return base.Channel.SaveAndApproveCardDataChangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.CardDataChangeOrder GetCardDataChangeOrder(long ID) {
            return base.Channel.GetCardDataChangeOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardDataChangeOrder> GetCardDataChangeOrderAsync(long ID) {
            return base.Channel.GetCardDataChangeOrderAsync(ID);
        }
        
        public bool CheckCardDataChangeOrderFieldTypeIsRequaried(short fieldType) {
            return base.Channel.CheckCardDataChangeOrderFieldTypeIsRequaried(fieldType);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCardDataChangeOrderFieldTypeIsRequariedAsync(short fieldType) {
            return base.Channel.CheckCardDataChangeOrderFieldTypeIsRequariedAsync(fieldType);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardServiceFeeGrafikDataChangeOrder(Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder order) {
            return base.Channel.SaveAndApproveCardServiceFeeGrafikDataChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardServiceFeeGrafikDataChangeOrderAsync(Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder order) {
            return base.Channel.SaveAndApproveCardServiceFeeGrafikDataChangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder GetCardServiceFeeGrafikDataChangeOrder(long ID) {
            return base.Channel.GetCardServiceFeeGrafikDataChangeOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardServiceFeeGrafikDataChangeOrder> GetCardServiceFeeGrafikDataChangeOrderAsync(long ID) {
            return base.Channel.GetCardServiceFeeGrafikDataChangeOrderAsync(ID);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik> SetNewCardServiceFeeGrafik(ulong productId) {
            return base.Channel.SetNewCardServiceFeeGrafik(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik>> SetNewCardServiceFeeGrafikAsync(ulong productId) {
            return base.Channel.SetNewCardServiceFeeGrafikAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.GivenGuaranteeReduction> GetGivenGuaranteeReductions(ulong productId) {
            return base.Channel.GetGivenGuaranteeReductions(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.GivenGuaranteeReduction>> GetGivenGuaranteeReductionsAsync(ulong productId) {
            return base.Channel.GetGivenGuaranteeReductionsAsync(productId);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveReestrUtilityPaymentOrder(Test.ServiceReference1.ReestrUtilityPaymentOrder order) {
            return base.Channel.SaveAndApproveReestrUtilityPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReestrUtilityPaymentOrderAsync(Test.ServiceReference1.ReestrUtilityPaymentOrder order) {
            return base.Channel.SaveAndApproveReestrUtilityPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ReestrUtilityPaymentOrder GetReestrUtilityPaymentOrder(long id) {
            return base.Channel.GetReestrUtilityPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ReestrUtilityPaymentOrder> GetReestrUtilityPaymentOrderAsync(long id) {
            return base.Channel.GetReestrUtilityPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountAdditionalDataRemovableOrder(Test.ServiceReference1.AccountAdditionalDataRemovableOrder order) {
            return base.Channel.SaveAndApproveAccountAdditionalDataRemovableOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountAdditionalDataRemovableOrderAsync(Test.ServiceReference1.AccountAdditionalDataRemovableOrder order) {
            return base.Channel.SaveAndApproveAccountAdditionalDataRemovableOrderAsync(order);
        }
        
        public Test.ServiceReference1.DAHKDetail GetCardDAHKDetails(string cardNumber) {
            return base.Channel.GetCardDAHKDetails(cardNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DAHKDetail> GetCardDAHKDetailsAsync(string cardNumber) {
            return base.Channel.GetCardDAHKDetailsAsync(cardNumber);
        }
        
        public bool IsDAHKAvailability(ulong customerNumber) {
            return base.Channel.IsDAHKAvailability(customerNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsDAHKAvailabilityAsync(ulong customerNumber) {
            return base.Channel.IsDAHKAvailabilityAsync(customerNumber);
        }
        
        public Test.ServiceReference1.PlasticCard GetPlasticCard(ulong productId, bool productIdType) {
            return base.Channel.GetPlasticCard(productId, productIdType);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PlasticCard> GetPlasticCardAsync(ulong productId, bool productIdType) {
            return base.Channel.GetPlasticCardAsync(productId, productIdType);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetCardAccountsForCardReNewRePlace(string cardCurrency, int cardFililal, ulong productId) {
            return base.Channel.GetCardAccountsForCardReNewRePlace(cardCurrency, cardFililal, productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetCardAccountsForCardReNewRePlaceAsync(string cardCurrency, int cardFililal, ulong productId) {
            return base.Channel.GetCardAccountsForCardReNewRePlaceAsync(cardCurrency, cardFililal, productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetOverdraftAccountsForCardReNewRePlace(string cardCurrency, int cardFililal, ulong productId) {
            return base.Channel.GetOverdraftAccountsForCardReNewRePlace(cardCurrency, cardFililal, productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetOverdraftAccountsForCardReNewRePlaceAsync(string cardCurrency, int cardFililal, ulong productId) {
            return base.Channel.GetOverdraftAccountsForCardReNewRePlaceAsync(cardCurrency, cardFililal, productId);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardReNewOrder(Test.ServiceReference1.CardReNewOrder order) {
            return base.Channel.SaveAndApproveCardReNewOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardReNewOrderAsync(Test.ServiceReference1.CardReNewOrder order) {
            return base.Channel.SaveAndApproveCardReNewOrderAsync(order);
        }
        
        public System.Collections.Generic.List<string> GetCardReNewRePlaceWarnings(Test.ServiceReference1.Card oldCard) {
            return base.Channel.GetCardReNewRePlaceWarnings(oldCard);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCardReNewRePlaceWarningsAsync(Test.ServiceReference1.Card oldCard) {
            return base.Channel.GetCardReNewRePlaceWarningsAsync(oldCard);
        }
        
        public int GetPoliceResponseDetailsIDWithoutRequest(string violationID, System.DateTime violationDate) {
            return base.Channel.GetPoliceResponseDetailsIDWithoutRequest(violationID, violationDate);
        }
        
        public System.Threading.Tasks.Task<int> GetPoliceResponseDetailsIDWithoutRequestAsync(string violationID, System.DateTime violationDate) {
            return base.Channel.GetPoliceResponseDetailsIDWithoutRequestAsync(violationID, violationDate);
        }
        
        public Test.ServiceReference1.CardReNewOrder GetCardReNewOrder(long ID) {
            return base.Channel.GetCardReNewOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardReNewOrder> GetCardReNewOrderAsync(long ID) {
            return base.Channel.GetCardReNewOrderAsync(ID);
        }
        
        public Test.ServiceReference1.CardRePlaceOrder GetCardRePlaceOrder(long ID) {
            return base.Channel.GetCardRePlaceOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardRePlaceOrder> GetCardRePlaceOrderAsync(long ID) {
            return base.Channel.GetCardRePlaceOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardRePlaceOrder(Test.ServiceReference1.CardRePlaceOrder order) {
            return base.Channel.SaveAndApproveCardRePlaceOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardRePlaceOrderAsync(Test.ServiceReference1.CardRePlaceOrder order) {
            return base.Channel.SaveAndApproveCardRePlaceOrderAsync(order);
        }
        
        public ulong GetOrderTransactionsGroupNumber(long orderId) {
            return base.Channel.GetOrderTransactionsGroupNumber(orderId);
        }
        
        public System.Threading.Tasks.Task<ulong> GetOrderTransactionsGroupNumberAsync(long orderId) {
            return base.Channel.GetOrderTransactionsGroupNumberAsync(orderId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetATSSystemAccounts(string currency) {
            return base.Channel.GetATSSystemAccounts(currency);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetATSSystemAccountsAsync(string currency) {
            return base.Channel.GetATSSystemAccountsAsync(currency);
        }
        
        public Test.ServiceReference1.ArcaBalanceResponseData GetArCaBalanceResponseData(string cardNumber) {
            return base.Channel.GetArCaBalanceResponseData(cardNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ArcaBalanceResponseData> GetArCaBalanceResponseDataAsync(string cardNumber) {
            return base.Channel.GetArCaBalanceResponseDataAsync(cardNumber);
        }
        
        public bool HasATSSystemAccountInFilial() {
            return base.Channel.HasATSSystemAccountInFilial();
        }
        
        public System.Threading.Tasks.Task<bool> HasATSSystemAccountInFilialAsync() {
            return base.Channel.HasATSSystemAccountInFilialAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanProductClassification> GetLoanProductClassifications(ulong productId, System.DateTime dateFrom) {
            return base.Channel.GetLoanProductClassifications(productId, dateFrom);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanProductClassification>> GetLoanProductClassificationsAsync(ulong productId, System.DateTime dateFrom) {
            return base.Channel.GetLoanProductClassificationsAsync(productId, dateFrom);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SafekeepingItem> GetSafekeepingItems(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetSafekeepingItems(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SafekeepingItem>> GetSafekeepingItemsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetSafekeepingItemsAsync(filter);
        }
        
        public Test.ServiceReference1.SafekeepingItem GetSafekeepingItem(ulong productId) {
            return base.Channel.GetSafekeepingItem(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.SafekeepingItem> GetSafekeepingItemAsync(ulong productId) {
            return base.Channel.GetSafekeepingItemAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate> GetExchangeRatesHistory(int filialCode, string currency, System.DateTime startDate) {
            return base.Channel.GetExchangeRatesHistory(filialCode, currency, startDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate>> GetExchangeRatesHistoryAsync(int filialCode, string currency, System.DateTime startDate) {
            return base.Channel.GetExchangeRatesHistoryAsync(filialCode, currency, startDate);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CrossExchangeRate> GetCrossExchangeRatesHistory(int filialCode, System.DateTime startDate) {
            return base.Channel.GetCrossExchangeRatesHistory(filialCode, startDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CrossExchangeRate>> GetCrossExchangeRatesHistoryAsync(int filialCode, System.DateTime startDate) {
            return base.Channel.GetCrossExchangeRatesHistoryAsync(filialCode, startDate);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetTransitAccountsForDebitTransactions() {
            return base.Channel.GetTransitAccountsForDebitTransactions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetTransitAccountsForDebitTransactionsAsync() {
            return base.Channel.GetTransitAccountsForDebitTransactionsAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.TransitAccountForDebitTransactions> GetAllTransitAccountsForDebitTransactions(Test.ServiceReference1.ProductQualityFilter quality) {
            return base.Channel.GetAllTransitAccountsForDebitTransactions(quality);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TransitAccountForDebitTransactions>> GetAllTransitAccountsForDebitTransactionsAsync(Test.ServiceReference1.ProductQualityFilter quality) {
            return base.Channel.GetAllTransitAccountsForDebitTransactionsAsync(quality);
        }
        
        public Test.ServiceReference1.Account GetCardCashbackAccount(ulong productId) {
            return base.Channel.GetCardCashbackAccount(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetCardCashbackAccountAsync(ulong productId) {
            return base.Channel.GetCardCashbackAccountAsync(productId);
        }
        
        public string GetCardMotherName(ulong productId) {
            return base.Channel.GetCardMotherName(productId);
        }
        
        public System.Threading.Tasks.Task<string> GetCardMotherNameAsync(ulong productId) {
            return base.Channel.GetCardMotherNameAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate> GetCBExchangeRatesHistory(string currency, System.DateTime startDate) {
            return base.Channel.GetCBExchangeRatesHistory(currency, startDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate>> GetCBExchangeRatesHistoryAsync(string currency, System.DateTime startDate) {
            return base.Channel.GetCBExchangeRatesHistoryAsync(currency, startDate);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CorrespondentBankAccount> GetCorrespondentBankAccounts(Test.ServiceReference1.CorrespondentBankAccount filter) {
            return base.Channel.GetCorrespondentBankAccounts(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CorrespondentBankAccount>> GetCorrespondentBankAccountsAsync(Test.ServiceReference1.CorrespondentBankAccount filter) {
            return base.Channel.GetCorrespondentBankAccountsAsync(filter);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardStatusChangeOrder(Test.ServiceReference1.CardStatusChangeOrder order) {
            return base.Channel.SaveAndApproveCardStatusChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardStatusChangeOrderAsync(Test.ServiceReference1.CardStatusChangeOrder order) {
            return base.Channel.SaveAndApproveCardStatusChangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.CardStatusChangeOrder GetCardStatusChangeOrder(long orderId) {
            return base.Channel.GetCardStatusChangeOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardStatusChangeOrder> GetCardStatusChangeOrderAsync(long orderId) {
            return base.Channel.GetCardStatusChangeOrderAsync(orderId);
        }
        
        public Test.ServiceReference1.ActionResult SaveTransitAccountForDebitTransactions(Test.ServiceReference1.TransitAccountForDebitTransactions account) {
            return base.Channel.SaveTransitAccountForDebitTransactions(account);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveTransitAccountForDebitTransactionsAsync(Test.ServiceReference1.TransitAccountForDebitTransactions account) {
            return base.Channel.SaveTransitAccountForDebitTransactionsAsync(account);
        }
        
        public Test.ServiceReference1.ActionResult CloseTransitAccountForDebitTransactions(Test.ServiceReference1.TransitAccountForDebitTransactions account) {
            return base.Channel.CloseTransitAccountForDebitTransactions(account);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CloseTransitAccountForDebitTransactionsAsync(Test.ServiceReference1.TransitAccountForDebitTransactions account) {
            return base.Channel.CloseTransitAccountForDebitTransactionsAsync(account);
        }
        
        public double GetBusinesDepositOptionRate(ushort depositOption, string currency) {
            return base.Channel.GetBusinesDepositOptionRate(depositOption, currency);
        }
        
        public System.Threading.Tasks.Task<double> GetBusinesDepositOptionRateAsync(ushort depositOption, string currency) {
            return base.Channel.GetBusinesDepositOptionRateAsync(depositOption, currency);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCa> GetCardActivationInArCa(string cardNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetCardActivationInArCa(cardNumber, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCa>> GetCardActivationInArCaAsync(string cardNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetCardActivationInArCaAsync(cardNumber, startDate, endDate);
        }
        
        public System.Nullable<System.DateTime> GetLastSendedPaymentFileDate() {
            return base.Channel.GetLastSendedPaymentFileDate();
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetLastSendedPaymentFileDateAsync() {
            return base.Channel.GetLastSendedPaymentFileDateAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCaApigateDetails> GetCardActivationInArCaApigateDetail(ulong Id) {
            return base.Channel.GetCardActivationInArCaApigateDetail(Id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardActivationInArCaApigateDetails>> GetCardActivationInArCaApigateDetailAsync(ulong Id) {
            return base.Channel.GetCardActivationInArCaApigateDetailAsync(Id);
        }
        
        public Test.ServiceReference1.ActionResult SaveCustomerCommunalCard(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard) {
            return base.Channel.SaveCustomerCommunalCard(customerCommunalCard);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCustomerCommunalCardAsync(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard) {
            return base.Channel.SaveCustomerCommunalCardAsync(customerCommunalCard);
        }
        
        public Test.ServiceReference1.ActionResult ChangeCustomerCommunalCardQuality(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard) {
            return base.Channel.ChangeCustomerCommunalCardQuality(customerCommunalCard);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ChangeCustomerCommunalCardQualityAsync(Test.ServiceReference1.CustomerCommunalCard customerCommunalCard) {
            return base.Channel.ChangeCustomerCommunalCardQualityAsync(customerCommunalCard);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CustomerCommunalCard> GetCustomerCommunalCards() {
            return base.Channel.GetCustomerCommunalCards();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CustomerCommunalCard>> GetCustomerCommunalCardsAsync() {
            return base.Channel.GetCustomerCommunalCardsAsync();
        }
        
        public System.Collections.Generic.List<double> GetComunalAmountPaidThisMonth(string code, short comunalType, short abonentType, System.DateTime DebtListDate, string texCode, int waterCoPaymentType) {
            return base.Channel.GetComunalAmountPaidThisMonth(code, comunalType, abonentType, DebtListDate, texCode, waterCoPaymentType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<double>> GetComunalAmountPaidThisMonthAsync(string code, short comunalType, short abonentType, System.DateTime DebtListDate, string texCode, int waterCoPaymentType) {
            return base.Channel.GetComunalAmountPaidThisMonthAsync(code, comunalType, abonentType, DebtListDate, texCode, waterCoPaymentType);
        }
        
        public Test.ServiceReference1.ActionResult SaveFactoringTerminationOrder(Test.ServiceReference1.FactoringTerminationOrder order) {
            return base.Channel.SaveFactoringTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveFactoringTerminationOrderAsync(Test.ServiceReference1.FactoringTerminationOrder order) {
            return base.Channel.SaveFactoringTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.FactoringTerminationOrder GetFactoringTerminationOrder(long ID) {
            return base.Channel.GetFactoringTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.FactoringTerminationOrder> GetFactoringTerminationOrderAsync(long ID) {
            return base.Channel.GetFactoringTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveFactoringTerminationOrder(Test.ServiceReference1.FactoringTerminationOrder order) {
            return base.Channel.SaveAndApproveFactoringTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveFactoringTerminationOrderAsync(Test.ServiceReference1.FactoringTerminationOrder order) {
            return base.Channel.SaveAndApproveFactoringTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveFactoringTerminationOrder(Test.ServiceReference1.FactoringTerminationOrder order) {
            return base.Channel.ApproveFactoringTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveFactoringTerminationOrderAsync(Test.ServiceReference1.FactoringTerminationOrder order) {
            return base.Channel.ApproveFactoringTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveLoanProductTerminationOrder(Test.ServiceReference1.LoanProductTerminationOrder order) {
            return base.Channel.SaveLoanProductTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanProductTerminationOrderAsync(Test.ServiceReference1.LoanProductTerminationOrder order) {
            return base.Channel.SaveLoanProductTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.LoanProductTerminationOrder GetLoanProductTerminationOrder(long ID) {
            return base.Channel.GetLoanProductTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductTerminationOrder> GetLoanProductTerminationOrderAsync(long ID) {
            return base.Channel.GetLoanProductTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveLoanProductTerminationOrder(Test.ServiceReference1.LoanProductTerminationOrder order) {
            return base.Channel.SaveAndApproveLoanProductTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveLoanProductTerminationOrderAsync(Test.ServiceReference1.LoanProductTerminationOrder order) {
            return base.Channel.SaveAndApproveLoanProductTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveLoanProductTerminationOrder(Test.ServiceReference1.LoanProductTerminationOrder order) {
            return base.Channel.ApproveLoanProductTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanProductTerminationOrderAsync(Test.ServiceReference1.LoanProductTerminationOrder order) {
            return base.Channel.ApproveLoanProductTerminationOrderAsync(order);
        }
        
        public double GetShopTransferAmount(ulong productId) {
            return base.Channel.GetShopTransferAmount(productId);
        }
        
        public System.Threading.Tasks.Task<double> GetShopTransferAmountAsync(ulong productId) {
            return base.Channel.GetShopTransferAmountAsync(productId);
        }
        
        public Test.ServiceReference1.ActionResult SaveDepositDataChangeOrder(Test.ServiceReference1.DepositDataChangeOrder order) {
            return base.Channel.SaveDepositDataChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveDepositDataChangeOrderAsync(Test.ServiceReference1.DepositDataChangeOrder order) {
            return base.Channel.SaveDepositDataChangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.DepositDataChangeOrder GetDepositDataChangeOrder(long ID) {
            return base.Channel.GetDepositDataChangeOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositDataChangeOrder> GetDepositDataChangeOrderAsync(long ID) {
            return base.Channel.GetDepositDataChangeOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveDepositDataChangeOrder(Test.ServiceReference1.DepositDataChangeOrder order) {
            return base.Channel.ApproveDepositDataChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveDepositDataChangeOrderAsync(Test.ServiceReference1.DepositDataChangeOrder order) {
            return base.Channel.ApproveDepositDataChangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveDepositDataChangeOrder(Test.ServiceReference1.DepositDataChangeOrder order) {
            return base.Channel.SaveAndApproveDepositDataChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositDataChangeOrderAsync(Test.ServiceReference1.DepositDataChangeOrder order) {
            return base.Channel.SaveAndApproveDepositDataChangeOrderAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DepositAction> GetDepositActions(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetDepositActions(order);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositAction>> GetDepositActionsAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetDepositActionsAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ENAPayments> GetENAPayments(string abonentNumber, string branch) {
            return base.Channel.GetENAPayments(abonentNumber, branch);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ENAPayments>> GetENAPaymentsAsync(string abonentNumber, string branch) {
            return base.Channel.GetENAPaymentsAsync(abonentNumber, branch);
        }
        
        public System.Collections.Generic.List<System.DateTime> GetENAPaymentDates(string abonentNumber, string branch) {
            return base.Channel.GetENAPaymentDates(abonentNumber, branch);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.DateTime>> GetENAPaymentDatesAsync(string abonentNumber, string branch) {
            return base.Channel.GetENAPaymentDatesAsync(abonentNumber, branch);
        }
        
        public double GetLoanTotalInsuranceAmount(ulong productId) {
            return base.Channel.GetLoanTotalInsuranceAmount(productId);
        }
        
        public System.Threading.Tasks.Task<double> GetLoanTotalInsuranceAmountAsync(ulong productId) {
            return base.Channel.GetLoanTotalInsuranceAmountAsync(productId);
        }
        
        public Test.ServiceReference1.Account GetProductAccount(ulong productId, ushort productType, ushort accountType) {
            return base.Channel.GetProductAccount(productId, productType, accountType);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetProductAccountAsync(ulong productId, ushort productType, ushort accountType) {
            return base.Channel.GetProductAccountAsync(productId, productType, accountType);
        }
        
        public Test.ServiceReference1.Account GetProductAccountFromCreditCode(string creditCode, ushort productType, ushort accountType) {
            return base.Channel.GetProductAccountFromCreditCode(creditCode, productType, accountType);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetProductAccountFromCreditCodeAsync(string creditCode, ushort productType, ushort accountType) {
            return base.Channel.GetProductAccountFromCreditCodeAsync(creditCode, productType, accountType);
        }
        
        public Test.ServiceReference1.CashBookOrder GetCashBookOrder(long ID) {
            return base.Channel.GetCashBookOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CashBookOrder> GetCashBookOrderAsync(long ID) {
            return base.Channel.GetCashBookOrderAsync(ID);
        }
        
        public Test.ServiceReference1.Account GetCashBookOperationSystemAccount(Test.ServiceReference1.CashBookOrder order, Test.ServiceReference1.OrderAccountType accountType, ushort filialCode) {
            return base.Channel.GetCashBookOperationSystemAccount(order, accountType, filialCode);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetCashBookOperationSystemAccountAsync(Test.ServiceReference1.CashBookOrder order, Test.ServiceReference1.OrderAccountType accountType, ushort filialCode) {
            return base.Channel.GetCashBookOperationSystemAccountAsync(order, accountType, filialCode);
        }
        
        public Test.ServiceReference1.LoanApplication GetLoanApplication(ulong productId) {
            return base.Channel.GetLoanApplication(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanApplication> GetLoanApplicationAsync(ulong productId) {
            return base.Channel.GetLoanApplicationAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanApplication> GetLoanApplications() {
            return base.Channel.GetLoanApplications();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanApplication>> GetLoanApplicationsAsync() {
            return base.Channel.GetLoanApplicationsAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.FicoScoreResult> GetLoanApplicationFicoScoreResults(ulong productId, System.DateTime requestDate) {
            return base.Channel.GetLoanApplicationFicoScoreResults(productId, requestDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.FicoScoreResult>> GetLoanApplicationFicoScoreResultsAsync(ulong productId, System.DateTime requestDate) {
            return base.Channel.GetLoanApplicationFicoScoreResultsAsync(productId, requestDate);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ActionError> FastOverdraftValidations(string cardNumber) {
            return base.Channel.FastOverdraftValidations(cardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ActionError>> FastOverdraftValidationsAsync(string cardNumber) {
            return base.Channel.FastOverdraftValidationsAsync(cardNumber);
        }
        
        public Test.ServiceReference1.LoanApplication GetLoanApplicationByDocId(long docId) {
            return base.Channel.GetLoanApplicationByDocId(docId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanApplication> GetLoanApplicationByDocIdAsync(long docId) {
            return base.Channel.GetLoanApplicationByDocIdAsync(docId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract> GetCardTariffContracts(Test.ServiceReference1.ProductQualityFilter filter, ulong customerNumber) {
            return base.Channel.GetCardTariffContracts(filter, customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardTariffContract>> GetCardTariffContractsAsync(Test.ServiceReference1.ProductQualityFilter filter, ulong customerNumber) {
            return base.Channel.GetCardTariffContractsAsync(filter, customerNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveDepositCaseStoppingPenaltyCalculationOrder(Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder order) {
            return base.Channel.SaveAndApproveDepositCaseStoppingPenaltyCalculationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositCaseStoppingPenaltyCalculationOrderAsync(Test.ServiceReference1.DepositCaseStoppingPenaltyCalculationOrder order) {
            return base.Channel.SaveAndApproveDepositCaseStoppingPenaltyCalculationOrderAsync(order);
        }
        
        public double GetCustomerAvailableAmount(string currency) {
            return base.Channel.GetCustomerAvailableAmount(currency);
        }
        
        public System.Threading.Tasks.Task<double> GetCustomerAvailableAmountAsync(string currency) {
            return base.Channel.GetCustomerAvailableAmountAsync(currency);
        }
        
        public double GetLoanProductInterestRate(Test.ServiceReference1.LoanProductOrder order, string cardNumber) {
            return base.Channel.GetLoanProductInterestRate(order, cardNumber);
        }
        
        public System.Threading.Tasks.Task<double> GetLoanProductInterestRateAsync(Test.ServiceReference1.LoanProductOrder order, string cardNumber) {
            return base.Channel.GetLoanProductInterestRateAsync(order, cardNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveLoanProductActivationOrder(Test.ServiceReference1.LoanProductActivationOrder order) {
            return base.Channel.SaveLoanProductActivationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanProductActivationOrderAsync(Test.ServiceReference1.LoanProductActivationOrder order) {
            return base.Channel.SaveLoanProductActivationOrderAsync(order);
        }
        
        public Test.ServiceReference1.LoanProductActivationOrder GetLoanProductActivationOrder(long ID) {
            return base.Channel.GetLoanProductActivationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductActivationOrder> GetLoanProductActivationOrderAsync(long ID) {
            return base.Channel.GetLoanProductActivationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveLoanProductActivationOrder(Test.ServiceReference1.LoanProductActivationOrder order) {
            return base.Channel.ApproveLoanProductActivationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanProductActivationOrderAsync(Test.ServiceReference1.LoanProductActivationOrder order) {
            return base.Channel.ApproveLoanProductActivationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountFreezeOrder(Test.ServiceReference1.AccountFreezeOrder order) {
            return base.Channel.SaveAndApproveAccountFreezeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountFreezeOrderAsync(Test.ServiceReference1.AccountFreezeOrder order) {
            return base.Channel.SaveAndApproveAccountFreezeOrderAsync(order);
        }
        
        public Test.ServiceReference1.AccountFreezeOrder GetAccountFreezeOrder(long ID) {
            return base.Channel.GetAccountFreezeOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountFreezeOrder> GetAccountFreezeOrderAsync(long ID) {
            return base.Channel.GetAccountFreezeOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveLoanProductActivationOrder(Test.ServiceReference1.LoanProductActivationOrder order) {
            return base.Channel.SaveAndApproveLoanProductActivationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveLoanProductActivationOrderAsync(Test.ServiceReference1.LoanProductActivationOrder order) {
            return base.Channel.SaveAndApproveLoanProductActivationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountUnfreezeOrder(Test.ServiceReference1.AccountUnfreezeOrder order) {
            return base.Channel.SaveAndApproveAccountUnfreezeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountUnfreezeOrderAsync(Test.ServiceReference1.AccountUnfreezeOrder order) {
            return base.Channel.SaveAndApproveAccountUnfreezeOrderAsync(order);
        }
        
        public Test.ServiceReference1.AccountUnfreezeOrder GetAccountUnfreezeOrder(long ID) {
            return base.Channel.GetAccountUnfreezeOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountUnfreezeOrder> GetAccountUnfreezeOrderAsync(long ID) {
            return base.Channel.GetAccountUnfreezeOrderAsync(ID);
        }
        
        public double GetServiceProvidedOrderFee(Test.ServiceReference1.OrderType orderType, ushort serviceType) {
            return base.Channel.GetServiceProvidedOrderFee(orderType, serviceType);
        }
        
        public System.Threading.Tasks.Task<double> GetServiceProvidedOrderFeeAsync(Test.ServiceReference1.OrderType orderType, ushort serviceType) {
            return base.Channel.GetServiceProvidedOrderFeeAsync(orderType, serviceType);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveFeeForServiceProvidedOrder(Test.ServiceReference1.FeeForServiceProvidedOrder order) {
            return base.Channel.SaveAndApproveFeeForServiceProvidedOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveFeeForServiceProvidedOrderAsync(Test.ServiceReference1.FeeForServiceProvidedOrder order) {
            return base.Channel.SaveAndApproveFeeForServiceProvidedOrderAsync(order);
        }
        
        public Test.ServiceReference1.FeeForServiceProvidedOrder GetFeeForServiceProvidedOrder(long id) {
            return base.Channel.GetFeeForServiceProvidedOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.FeeForServiceProvidedOrder> GetFeeForServiceProvidedOrderAsync(long id) {
            return base.Channel.GetFeeForServiceProvidedOrderAsync(id);
        }
        
        public Test.ServiceReference1.CashPosPaymentOrder GetCashPosPaymentOrder(long id) {
            return base.Channel.GetCashPosPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CashPosPaymentOrder> GetCashPosPaymentOrderAsync(long id) {
            return base.Channel.GetCashPosPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.HasHB HasPhoneBanking() {
            return base.Channel.HasPhoneBanking();
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.HasHB> HasPhoneBankingAsync() {
            return base.Channel.HasPhoneBankingAsync();
        }
        
        public Test.ServiceReference1.CardUnpaidPercentPaymentOrder GetCardUnpaidPercentPaymentOrder(long ID) {
            return base.Channel.GetCardUnpaidPercentPaymentOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardUnpaidPercentPaymentOrder> GetCardUnpaidPercentPaymentOrderAsync(long ID) {
            return base.Channel.GetCardUnpaidPercentPaymentOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardUnpaidPercentPaymentOrder(Test.ServiceReference1.CardUnpaidPercentPaymentOrder order) {
            return base.Channel.SaveAndApproveCardUnpaidPercentPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardUnpaidPercentPaymentOrderAsync(Test.ServiceReference1.CardUnpaidPercentPaymentOrder order) {
            return base.Channel.SaveAndApproveCardUnpaidPercentPaymentOrderAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Provision> GetProductProvisions(ulong productId) {
            return base.Channel.GetProductProvisions(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Provision>> GetProductProvisionsAsync(ulong productId) {
            return base.Channel.GetProductProvisionsAsync(productId);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveRemovalOrder(Test.ServiceReference1.RemovalOrder order) {
            return base.Channel.SaveAndApproveRemovalOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveRemovalOrderAsync(Test.ServiceReference1.RemovalOrder order) {
            return base.Channel.SaveAndApproveRemovalOrderAsync(order);
        }
        
        public Test.ServiceReference1.RemovalOrder GetRemovalOrder(long id) {
            return base.Channel.GetRemovalOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.RemovalOrder> GetRemovalOrderAsync(long id) {
            return base.Channel.GetRemovalOrderAsync(id);
        }
        
        public System.Collections.Generic.List<ulong> GetProvisionOwners(ulong productId) {
            return base.Channel.GetProvisionOwners(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ulong>> GetProvisionOwnersAsync(ulong productId) {
            return base.Channel.GetProvisionOwnersAsync(productId);
        }
        
        public Test.ServiceReference1.LoanMainContract GetLoanMainContract(ulong productId) {
            return base.Channel.GetLoanMainContract(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanMainContract> GetLoanMainContractAsync(ulong productId) {
            return base.Channel.GetLoanMainContractAsync(productId);
        }
        
        public bool IsOurCard(string cardNumber) {
            return base.Channel.IsOurCard(cardNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsOurCardAsync(string cardNumber) {
            return base.Channel.IsOurCardAsync(cardNumber);
        }
        
        public Test.ServiceReference1.SourceType GetDepositSource(ulong productId) {
            return base.Channel.GetDepositSource(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.SourceType> GetDepositSourceAsync(ulong productId) {
            return base.Channel.GetDepositSourceAsync(productId);
        }
        
        public Test.ServiceReference1.SourceType GetAccountSource(string accountNumber) {
            return base.Channel.GetAccountSource(accountNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.SourceType> GetAccountSourceAsync(string accountNumber) {
            return base.Channel.GetAccountSourceAsync(accountNumber);
        }
        
        public double GetAcccountAvailableBalance(string accountNumber) {
            return base.Channel.GetAcccountAvailableBalance(accountNumber);
        }
        
        public System.Threading.Tasks.Task<double> GetAcccountAvailableBalanceAsync(string accountNumber) {
            return base.Channel.GetAcccountAvailableBalanceAsync(accountNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanMainContract> GetCreditLineMainContract() {
            return base.Channel.GetCreditLineMainContract();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanMainContract>> GetCreditLineMainContractAsync() {
            return base.Channel.GetCreditLineMainContractAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanProductProlongation> GetLoanProductProlongations(ulong productId) {
            return base.Channel.GetLoanProductProlongations(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanProductProlongation>> GetLoanProductProlongationsAsync(ulong productId) {
            return base.Channel.GetLoanProductProlongationsAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ProductOtherFee> GetProductOtherFees(ulong productId) {
            return base.Channel.GetProductOtherFees(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ProductOtherFee>> GetProductOtherFeesAsync(ulong productId) {
            return base.Channel.GetProductOtherFeesAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Claim> GetProductClaims(ulong productId, short productType) {
            return base.Channel.GetProductClaims(productId, productType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Claim>> GetProductClaimsAsync(ulong productId, short productType) {
            return base.Channel.GetProductClaimsAsync(productId, productType);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ClaimEvent> GetClaimEvents(int claimNumber) {
            return base.Channel.GetClaimEvents(claimNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ClaimEvent>> GetClaimEventsAsync(int claimNumber) {
            return base.Channel.GetClaimEventsAsync(claimNumber);
        }
        
        public Test.ServiceReference1.Tax GetTax(int claimNumber, int eventNumber) {
            return base.Channel.GetTax(claimNumber, eventNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Tax> GetTaxAsync(int claimNumber, int eventNumber) {
            return base.Channel.GetTaxAsync(claimNumber, eventNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.MembershipRewardsStatusHistory> GetCardMembershipRewardsStatusHistory(string cardNumber) {
            return base.Channel.GetCardMembershipRewardsStatusHistory(cardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.MembershipRewardsStatusHistory>> GetCardMembershipRewardsStatusHistoryAsync(string cardNumber) {
            return base.Channel.GetCardMembershipRewardsStatusHistoryAsync(cardNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveChequeBookReceiveOrder(Test.ServiceReference1.ChequeBookReceiveOrder order) {
            return base.Channel.SaveAndApproveChequeBookReceiveOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveChequeBookReceiveOrderAsync(Test.ServiceReference1.ChequeBookReceiveOrder order) {
            return base.Channel.SaveAndApproveChequeBookReceiveOrderAsync(order);
        }
        
        public Test.ServiceReference1.ChequeBookReceiveOrder GetChequeBookReceiveOrder(long ID) {
            return base.Channel.GetChequeBookReceiveOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ChequeBookReceiveOrder> GetChequeBookReceiveOrderAsync(long ID) {
            return base.Channel.GetChequeBookReceiveOrderAsync(ID);
        }
        
        public bool HasAccountPensionApplication(string accountNumber) {
            return base.Channel.HasAccountPensionApplication(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> HasAccountPensionApplicationAsync(string accountNumber) {
            return base.Channel.HasAccountPensionApplicationAsync(accountNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik> GetCardServiceFeeGrafik(ulong productId) {
            return base.Channel.GetCardServiceFeeGrafik(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CardServiceFeeGrafik>> GetCardServiceFeeGrafikAsync(ulong productId) {
            return base.Channel.GetCardServiceFeeGrafikAsync(productId);
        }
        
        public Test.ServiceReference1.CardTariffContract GetCardTariffContract(long tariffID) {
            return base.Channel.GetCardTariffContract(tariffID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardTariffContract> GetCardTariffContractAsync(long tariffID) {
            return base.Channel.GetCardTariffContractAsync(tariffID);
        }
        
        public Test.ServiceReference1.Account GetFeeForServiceProvidedOrderCreditAccount(Test.ServiceReference1.FeeForServiceProvidedOrder order) {
            return base.Channel.GetFeeForServiceProvidedOrderCreditAccount(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetFeeForServiceProvidedOrderCreditAccountAsync(Test.ServiceReference1.FeeForServiceProvidedOrder order) {
            return base.Channel.GetFeeForServiceProvidedOrderCreditAccountAsync(order);
        }
        
        public Test.ServiceReference1.CardTariff GetCardTariff(ulong productId) {
            return base.Channel.GetCardTariff(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardTariff> GetCardTariffAsync(ulong productId) {
            return base.Channel.GetCardTariffAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchInternationalTransfer> GetSearchedInternationalTransfers(Test.ServiceReference1.SearchInternationalTransfer searchParams) {
            return base.Channel.GetSearchedInternationalTransfers(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchInternationalTransfer>> GetSearchedInternationalTransfersAsync(Test.ServiceReference1.SearchInternationalTransfer searchParams) {
            return base.Channel.GetSearchedInternationalTransfersAsync(searchParams);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchReceivedTransfer> GetSearchedReceivedTransfers(Test.ServiceReference1.SearchReceivedTransfer searchParams) {
            return base.Channel.GetSearchedReceivedTransfers(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchReceivedTransfer>> GetSearchedReceivedTransfersAsync(Test.ServiceReference1.SearchReceivedTransfer searchParams) {
            return base.Channel.GetSearchedReceivedTransfersAsync(searchParams);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchTransferBankMail> GetSearchedTransfersBankMail(Test.ServiceReference1.SearchTransferBankMail searchParams) {
            return base.Channel.GetSearchedTransfersBankMail(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchTransferBankMail>> GetSearchedTransfersBankMailAsync(Test.ServiceReference1.SearchTransferBankMail searchParams) {
            return base.Channel.GetSearchedTransfersBankMailAsync(searchParams);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchBudgetAccount> GetSearchedBudgetAccount(Test.ServiceReference1.SearchBudgetAccount searchParams) {
            return base.Channel.GetSearchedBudgetAccount(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchBudgetAccount>> GetSearchedBudgetAccountAsync(Test.ServiceReference1.SearchBudgetAccount searchParams) {
            return base.Channel.GetSearchedBudgetAccountAsync(searchParams);
        }
        
        public Test.ServiceReference1.CardStatus GetCardStatus(ulong productId) {
            return base.Channel.GetCardStatus(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardStatus> GetCardStatusAsync(ulong productId) {
            return base.Channel.GetCardStatusAsync(productId);
        }
        
        public Test.ServiceReference1.Account GetOperationSystemAccountForFee(Test.ServiceReference1.Order order, short feeType) {
            return base.Channel.GetOperationSystemAccountForFee(order, feeType);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetOperationSystemAccountForFeeAsync(Test.ServiceReference1.Order order, short feeType) {
            return base.Channel.GetOperationSystemAccountForFeeAsync(order, feeType);
        }
        
        public System.DateTime GetCurrentOperDay() {
            return base.Channel.GetCurrentOperDay();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetCurrentOperDayAsync() {
            return base.Channel.GetCurrentOperDayAsync();
        }
        
        public System.Collections.Generic.List<int> GetConfirmRequiredOrders(ulong customerNumber, string userName, int subTypeId, System.DateTime startDate, System.DateTime endDate, string langId, string receiverName, string account, bool period, string groups, int quality) {
            return base.Channel.GetConfirmRequiredOrders(customerNumber, userName, subTypeId, startDate, endDate, langId, receiverName, account, period, groups, quality);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetConfirmRequiredOrdersAsync(ulong customerNumber, string userName, int subTypeId, System.DateTime startDate, System.DateTime endDate, string langId, string receiverName, string account, bool period, string groups, int quality) {
            return base.Channel.GetConfirmRequiredOrdersAsync(customerNumber, userName, subTypeId, startDate, endDate, langId, receiverName, account, period, groups, quality);
        }
        
        public double GetLoanProductActivationFee(ulong productId, short withTax) {
            return base.Channel.GetLoanProductActivationFee(productId, withTax);
        }
        
        public System.Threading.Tasks.Task<double> GetLoanProductActivationFeeAsync(ulong productId, short withTax) {
            return base.Channel.GetLoanProductActivationFeeAsync(productId, withTax);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Credential> GetCredentials(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCredentials(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Credential>> GetCredentialsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCredentialsAsync(filter);
        }
        
        public bool IsTransferFromBusinessmanToOwnerAccount(string debitAccountNumber, string creditAccountNumber) {
            return base.Channel.IsTransferFromBusinessmanToOwnerAccount(debitAccountNumber, creditAccountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsTransferFromBusinessmanToOwnerAccountAsync(string debitAccountNumber, string creditAccountNumber) {
            return base.Channel.IsTransferFromBusinessmanToOwnerAccountAsync(debitAccountNumber, creditAccountNumber);
        }
        
        public Test.ServiceReference1.UserAccessForCustomer GetUserAccessForCustomer(string userSessiobToken, string customerSessionToken) {
            return base.Channel.GetUserAccessForCustomer(userSessiobToken, customerSessionToken);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.UserAccessForCustomer> GetUserAccessForCustomerAsync(string userSessiobToken, string customerSessionToken) {
            return base.Channel.GetUserAccessForCustomerAsync(userSessiobToken, customerSessionToken);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountsForCredential(int operationType) {
            return base.Channel.GetAccountsForCredential(operationType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsForCredentialAsync(int operationType) {
            return base.Channel.GetAccountsForCredentialAsync(operationType);
        }
        
        public Test.ServiceReference1.CurrencyExchangeOrder GetCurrencyExchangeOrder(long id) {
            return base.Channel.GetCurrencyExchangeOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CurrencyExchangeOrder> GetCurrencyExchangeOrderAsync(long id) {
            return base.Channel.GetCurrencyExchangeOrderAsync(id);
        }
        
        public string GenerateNextOrderNumber(ulong customerNumber) {
            return base.Channel.GenerateNextOrderNumber(customerNumber);
        }
        
        public System.Threading.Tasks.Task<string> GenerateNextOrderNumberAsync(ulong customerNumber) {
            return base.Channel.GenerateNextOrderNumberAsync(customerNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCredentialOrder(Test.ServiceReference1.CredentialOrder order) {
            return base.Channel.SaveAndApproveCredentialOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCredentialOrderAsync(Test.ServiceReference1.CredentialOrder order) {
            return base.Channel.SaveAndApproveCredentialOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveCredentialOrder(Test.ServiceReference1.CredentialOrder order) {
            return base.Channel.SaveCredentialOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCredentialOrderAsync(Test.ServiceReference1.CredentialOrder order) {
            return base.Channel.SaveCredentialOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveCredentialOrder(Test.ServiceReference1.CredentialOrder order) {
            return base.Channel.ApproveCredentialOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCredentialOrderAsync(Test.ServiceReference1.CredentialOrder order) {
            return base.Channel.ApproveCredentialOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCredentialTerminationOrder(Test.ServiceReference1.CredentialTerminationOrder order) {
            return base.Channel.SaveAndApproveCredentialTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCredentialTerminationOrderAsync(Test.ServiceReference1.CredentialTerminationOrder order) {
            return base.Channel.SaveAndApproveCredentialTerminationOrderAsync(order);
        }
        
        public System.Collections.Generic.List<string> GetChequeBookReceiveOrderWarnings(ulong customerNumber, string accountNumber) {
            return base.Channel.GetChequeBookReceiveOrderWarnings(customerNumber, accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetChequeBookReceiveOrderWarningsAsync(ulong customerNumber, string accountNumber) {
            return base.Channel.GetChequeBookReceiveOrderWarningsAsync(customerNumber, accountNumber);
        }
        
        public Test.ServiceReference1.CredentialOrder GetCredentialOrder(long ID) {
            return base.Channel.GetCredentialOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CredentialOrder> GetCredentialOrderAsync(long ID) {
            return base.Channel.GetCredentialOrderAsync(ID);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.AssigneeOperation> GetAllOperations() {
            return base.Channel.GetAllOperations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AssigneeOperation>> GetAllOperationsAsync() {
            return base.Channel.GetAllOperationsAsync();
        }
        
        public double GetTransitPaymentOrderFee(Test.ServiceReference1.TransitPaymentOrder order, int feeType) {
            return base.Channel.GetTransitPaymentOrderFee(order, feeType);
        }
        
        public System.Threading.Tasks.Task<double> GetTransitPaymentOrderFeeAsync(Test.ServiceReference1.TransitPaymentOrder order, int feeType) {
            return base.Channel.GetTransitPaymentOrderFeeAsync(order, feeType);
        }
        
        public Test.ServiceReference1.ActionResult ValidateRenewedOtherTypeCardApplicationForPrint(string cardNumber) {
            return base.Channel.ValidateRenewedOtherTypeCardApplicationForPrint(cardNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ValidateRenewedOtherTypeCardApplicationForPrintAsync(string cardNumber) {
            return base.Channel.ValidateRenewedOtherTypeCardApplicationForPrintAsync(cardNumber);
        }
        
        public bool IsNormCardStatus(string cardNumber) {
            return base.Channel.IsNormCardStatus(cardNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsNormCardStatusAsync(string cardNumber) {
            return base.Channel.IsNormCardStatusAsync(cardNumber);
        }
        
        public bool IsCardRegistered(string cardNumber) {
            return base.Channel.IsCardRegistered(cardNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsCardRegisteredAsync(string cardNumber) {
            return base.Channel.IsCardRegisteredAsync(cardNumber);
        }
        
        public ulong GetAccountCustomerNumber(Test.ServiceReference1.Account account) {
            return base.Channel.GetAccountCustomerNumber(account);
        }
        
        public System.Threading.Tasks.Task<ulong> GetAccountCustomerNumberAsync(Test.ServiceReference1.Account account) {
            return base.Channel.GetAccountCustomerNumberAsync(account);
        }
        
        public string GetSpesialPriceMessage(string accountNumber, short additionID) {
            return base.Channel.GetSpesialPriceMessage(accountNumber, additionID);
        }
        
        public System.Threading.Tasks.Task<string> GetSpesialPriceMessageAsync(string accountNumber, short additionID) {
            return base.Channel.GetSpesialPriceMessageAsync(accountNumber, additionID);
        }
        
        public double GetCardFeeForCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.GetCardFeeForCurrencyExchangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<double> GetCardFeeForCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.GetCardFeeForCurrencyExchangeOrderAsync(order);
        }
        
        public double GetAccountReopenFee(short customerType) {
            return base.Channel.GetAccountReopenFee(customerType);
        }
        
        public System.Threading.Tasks.Task<double> GetAccountReopenFeeAsync(short customerType) {
            return base.Channel.GetAccountReopenFeeAsync(customerType);
        }
        
        public short GetCustomerSyntheticStatus(ulong customerNumber) {
            return base.Channel.GetCustomerSyntheticStatus(customerNumber);
        }
        
        public System.Threading.Tasks.Task<short> GetCustomerSyntheticStatusAsync(ulong customerNumber) {
            return base.Channel.GetCustomerSyntheticStatusAsync(customerNumber);
        }
        
        public Test.ServiceReference1.CreditLineTerminationOrder GetCreditLineTerminationOrder(long ID) {
            return base.Channel.GetCreditLineTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CreditLineTerminationOrder> GetCreditLineTerminationOrderAsync(long ID) {
            return base.Channel.GetCreditLineTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.DepositTerminationOrder GetDepositTerminationOrder(long ID) {
            return base.Channel.GetDepositTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositTerminationOrder> GetDepositTerminationOrderAsync(long ID) {
            return base.Channel.GetDepositTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.CreditLine GetClosedCreditLine(ulong productId) {
            return base.Channel.GetClosedCreditLine(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CreditLine> GetClosedCreditLineAsync(ulong productId) {
            return base.Channel.GetClosedCreditLineAsync(productId);
        }
        
        public System.Collections.Generic.List<string> GetLoanActivationWarnings(long productId, short productType) {
            return base.Channel.GetLoanActivationWarnings(productId, productType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLoanActivationWarningsAsync(long productId, short productType) {
            return base.Channel.GetLoanActivationWarningsAsync(productId, productType);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik> GetDecreaseLoanGrafik(Test.ServiceReference1.CreditLine creditLine) {
            return base.Channel.GetDecreaseLoanGrafik(creditLine);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik>> GetDecreaseLoanGrafikAsync(Test.ServiceReference1.CreditLine creditLine) {
            return base.Channel.GetDecreaseLoanGrafikAsync(creditLine);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CashBook> GetCashBooks(Test.ServiceReference1.SearchCashBook searchParams) {
            return base.Channel.GetCashBooks(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CashBook>> GetCashBooksAsync(Test.ServiceReference1.SearchCashBook searchParams) {
            return base.Channel.GetCashBooksAsync(searchParams);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCashBookOrder(Test.ServiceReference1.CashBookOrder order) {
            return base.Channel.SaveAndApproveCashBookOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCashBookOrderAsync(Test.ServiceReference1.CashBookOrder order) {
            return base.Channel.SaveAndApproveCashBookOrderAsync(order);
        }
        
        public int GetCorrespondentSetNumber() {
            return base.Channel.GetCorrespondentSetNumber();
        }
        
        public System.Threading.Tasks.Task<int> GetCorrespondentSetNumberAsync() {
            return base.Channel.GetCorrespondentSetNumberAsync();
        }
        
        public Test.ServiceReference1.ActionResult RemoveCashBook(int cashBookID) {
            return base.Channel.RemoveCashBook(cashBookID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> RemoveCashBookAsync(int cashBookID) {
            return base.Channel.RemoveCashBookAsync(cashBookID);
        }
        
        public Test.ServiceReference1.CustomerMainData GetCustomerMainData(ulong customerNumber) {
            return base.Channel.GetCustomerMainData(customerNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CustomerMainData> GetCustomerMainDataAsync(ulong customerNumber) {
            return base.Channel.GetCustomerMainDataAsync(customerNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfintdouble> GetRest(Test.ServiceReference1.SearchCashBook searchParams) {
            return base.Channel.GetRest(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfintdouble>> GetRestAsync(Test.ServiceReference1.SearchCashBook searchParams) {
            return base.Channel.GetRestAsync(searchParams);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchLeasingCustomer> GetSearchedLeasingCustomers(Test.ServiceReference1.SearchLeasingCustomer searchParams) {
            return base.Channel.GetSearchedLeasingCustomers(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchLeasingCustomer>> GetSearchedLeasingCustomersAsync(Test.ServiceReference1.SearchLeasingCustomer searchParams) {
            return base.Channel.GetSearchedLeasingCustomersAsync(searchParams);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LeasingLoan> GetSearchedLeasingLoans(Test.ServiceReference1.SearchLeasingLoan searchParams) {
            return base.Channel.GetSearchedLeasingLoans(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LeasingLoan>> GetSearchedLeasingLoansAsync(Test.ServiceReference1.SearchLeasingLoan searchParams) {
            return base.Channel.GetSearchedLeasingLoansAsync(searchParams);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveTransitCurrencyExchangeOrder(Test.ServiceReference1.TransitCurrencyExchangeOrder order) {
            return base.Channel.SaveAndApproveTransitCurrencyExchangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransitCurrencyExchangeOrderAsync(Test.ServiceReference1.TransitCurrencyExchangeOrder order) {
            return base.Channel.SaveAndApproveTransitCurrencyExchangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveOrder(Test.ServiceReference1.Order order) {
            return base.Channel.ApproveOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveOrderAsync(Test.ServiceReference1.Order order) {
            return base.Channel.ApproveOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveAccountReOpenOrder(Test.ServiceReference1.AccountReOpenOrder order) {
            return base.Channel.ApproveAccountReOpenOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveAccountReOpenOrderAsync(Test.ServiceReference1.AccountReOpenOrder order) {
            return base.Channel.ApproveAccountReOpenOrderAsync(order);
        }
        
        public Test.ServiceReference1.CardReReleaseOrder GetCardReReleaseOrder(long ID) {
            return base.Channel.GetCardReReleaseOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardReReleaseOrder> GetCardReReleaseOrderAsync(long ID) {
            return base.Channel.GetCardReReleaseOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveCardReReleaseOrder(Test.ServiceReference1.CardReReleaseOrder order) {
            return base.Channel.ApproveCardReReleaseOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCardReReleaseOrderAsync(Test.ServiceReference1.CardReReleaseOrder order) {
            return base.Channel.ApproveCardReReleaseOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveCreditLineTerminationOrder(Test.ServiceReference1.CreditLineTerminationOrder order) {
            return base.Channel.ApproveCreditLineTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCreditLineTerminationOrderAsync(Test.ServiceReference1.CreditLineTerminationOrder order) {
            return base.Channel.ApproveCreditLineTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveInternationalPaymentOrder(Test.ServiceReference1.InternationalPaymentOrder order) {
            return base.Channel.ApproveInternationalPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveInternationalPaymentOrderAsync(Test.ServiceReference1.InternationalPaymentOrder order) {
            return base.Channel.ApproveInternationalPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ChangeCashBookStatus(int cashBookID, int newStatus) {
            return base.Channel.ChangeCashBookStatus(cashBookID, newStatus);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ChangeCashBookStatusAsync(int cashBookID, int newStatus) {
            return base.Channel.ChangeCashBookStatusAsync(cashBookID, newStatus);
        }
        
        public Test.ServiceReference1.Account GetOperationSystemAccountForLeasing(string operationCurrency, ushort filialCode) {
            return base.Channel.GetOperationSystemAccountForLeasing(operationCurrency, filialCode);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetOperationSystemAccountForLeasingAsync(string operationCurrency, ushort filialCode) {
            return base.Channel.GetOperationSystemAccountForLeasingAsync(operationCurrency, filialCode);
        }
        
        public Test.ServiceReference1.Account GetTransitCurrencyExchangeOrderSystemAccount(Test.ServiceReference1.TransitCurrencyExchangeOrder order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency) {
            return base.Channel.GetTransitCurrencyExchangeOrderSystemAccount(order, accountType, operationCurrency);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetTransitCurrencyExchangeOrderSystemAccountAsync(Test.ServiceReference1.TransitCurrencyExchangeOrder order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency) {
            return base.Channel.GetTransitCurrencyExchangeOrderSystemAccountAsync(order, accountType, operationCurrency);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetReferenceOrderAccounts() {
            return base.Channel.GetReferenceOrderAccounts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetReferenceOrderAccountsAsync() {
            return base.Channel.GetReferenceOrderAccountsAsync();
        }
        
        public Test.ServiceReference1.LoanRepaymentGrafik GetLoanNextRepayment(Test.ServiceReference1.Loan loan) {
            return base.Channel.GetLoanNextRepayment(loan);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanRepaymentGrafik> GetLoanNextRepaymentAsync(Test.ServiceReference1.Loan loan) {
            return base.Channel.GetLoanNextRepaymentAsync(loan);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.AccountClosingHistory> GetAccountClosinghistory() {
            return base.Channel.GetAccountClosinghistory();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AccountClosingHistory>> GetAccountClosinghistoryAsync() {
            return base.Channel.GetAccountClosinghistoryAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse> GetVehicleViolationById(string violationId) {
            return base.Channel.GetVehicleViolationById(violationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse>> GetVehicleViolationByIdAsync(string violationId) {
            return base.Channel.GetVehicleViolationByIdAsync(violationId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse> GetVehicleViolationByPsnVehNum(string psn, string vehNum) {
            return base.Channel.GetVehicleViolationByPsnVehNum(psn, vehNum);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.VehicleViolationResponse>> GetVehicleViolationByPsnVehNumAsync(string psn, string vehNum) {
            return base.Channel.GetVehicleViolationByPsnVehNumAsync(psn, vehNum);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DahkDetails> GetDahkBlockages(ulong customerNumber) {
            return base.Channel.GetDahkBlockages(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkDetails>> GetDahkBlockagesAsync(ulong customerNumber) {
            return base.Channel.GetDahkBlockagesAsync(customerNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DahkDetails> GetDahkCollections(ulong customerNumber) {
            return base.Channel.GetDahkCollections(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkDetails>> GetDahkCollectionsAsync(ulong customerNumber) {
            return base.Channel.GetDahkCollectionsAsync(customerNumber);
        }
        
        public Test.ServiceReference1.ProblemLoanCalculationsDetail GetProblemLoanCalculationsDetail(int claimNumber, int eventNumber) {
            return base.Channel.GetProblemLoanCalculationsDetail(claimNumber, eventNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ProblemLoanCalculationsDetail> GetProblemLoanCalculationsDetailAsync(int claimNumber, int eventNumber) {
            return base.Channel.GetProblemLoanCalculationsDetailAsync(claimNumber, eventNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DahkEmployer> GetDahkEmployers(ulong customerNumber, Test.ServiceReference1.ProductQualityFilter quality) {
            return base.Channel.GetDahkEmployers(customerNumber, quality);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkEmployer>> GetDahkEmployersAsync(ulong customerNumber, Test.ServiceReference1.ProductQualityFilter quality) {
            return base.Channel.GetDahkEmployersAsync(customerNumber, quality);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DahkAmountTotals> GetDahkAmountTotals(ulong customerNumber) {
            return base.Channel.GetDahkAmountTotals(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DahkAmountTotals>> GetDahkAmountTotalsAsync(ulong customerNumber) {
            return base.Channel.GetDahkAmountTotalsAsync(customerNumber);
        }
        
        public string GetTerm(short id, System.Collections.Generic.List<string> param, Test.ServiceReference1.Languages language) {
            return base.Channel.GetTerm(id, param, language);
        }
        
        public System.Threading.Tasks.Task<string> GetTermAsync(short id, System.Collections.Generic.List<string> param, Test.ServiceReference1.Languages language) {
            return base.Channel.GetTermAsync(id, param, language);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Loan> GetAparikTexumLoans() {
            return base.Channel.GetAparikTexumLoans();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Loan>> GetAparikTexumLoansAsync() {
            return base.Channel.GetAparikTexumLoansAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.GoodsDetails> GetGoodsDetails(ulong productId) {
            return base.Channel.GetGoodsDetails(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.GoodsDetails>> GetGoodsDetailsAsync(ulong productId) {
            return base.Channel.GetGoodsDetailsAsync(productId);
        }
        
        public Test.ServiceReference1.AccountFlowDetails GetAccountFlowDetails(string accountNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAccountFlowDetails(accountNumber, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountFlowDetails> GetAccountFlowDetailsAsync(string accountNumber, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAccountFlowDetailsAsync(accountNumber, startDate, endDate);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ServicePaymentNote> GetServicePaymentNoteList() {
            return base.Channel.GetServicePaymentNoteList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ServicePaymentNote>> GetServicePaymentNoteListAsync() {
            return base.Channel.GetServicePaymentNoteListAsync();
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveServicePaymentNoteOrder(Test.ServiceReference1.ServicePaymentNoteOrder order) {
            return base.Channel.SaveAndApproveServicePaymentNoteOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveServicePaymentNoteOrderAsync(Test.ServiceReference1.ServicePaymentNoteOrder order) {
            return base.Channel.SaveAndApproveServicePaymentNoteOrderAsync(order);
        }
        
        public Test.ServiceReference1.ServicePaymentNoteOrder GetServicePaymentNoteOrder(long ID) {
            return base.Channel.GetServicePaymentNoteOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ServicePaymentNoteOrder> GetServicePaymentNoteOrderAsync(long ID) {
            return base.Channel.GetServicePaymentNoteOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ServicePaymentNoteOrder GetDelatedServicePaymentNoteOrder(long ID) {
            return base.Channel.GetDelatedServicePaymentNoteOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ServicePaymentNoteOrder> GetDelatedServicePaymentNoteOrderAsync(long ID) {
            return base.Channel.GetDelatedServicePaymentNoteOrderAsync(ID);
        }
        
        public double GetDepositLoanAndProvisionCoefficent(string loanCurrency, string provisionCurrency) {
            return base.Channel.GetDepositLoanAndProvisionCoefficent(loanCurrency, provisionCurrency);
        }
        
        public System.Threading.Tasks.Task<double> GetDepositLoanAndProvisionCoefficentAsync(string loanCurrency, string provisionCurrency) {
            return base.Channel.GetDepositLoanAndProvisionCoefficentAsync(loanCurrency, provisionCurrency);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApprovePensionApplicationOrder(Test.ServiceReference1.PensionApplicationOrder order) {
            return base.Channel.SaveAndApprovePensionApplicationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePensionApplicationOrderAsync(Test.ServiceReference1.PensionApplicationOrder order) {
            return base.Channel.SaveAndApprovePensionApplicationOrderAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PensionApplication> GetPensionApplicationHistory(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPensionApplicationHistory(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PensionApplication>> GetPensionApplicationHistoryAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPensionApplicationHistoryAsync(filter);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApprovePensionApplicationTerminationOrder(Test.ServiceReference1.PensionApplicationTerminationOrder order) {
            return base.Channel.SaveAndApprovePensionApplicationTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePensionApplicationTerminationOrderAsync(Test.ServiceReference1.PensionApplicationTerminationOrder order) {
            return base.Channel.SaveAndApprovePensionApplicationTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.PensionApplicationTerminationOrder GetPensionApplicationTerminationOrder(long ID) {
            return base.Channel.GetPensionApplicationTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PensionApplicationTerminationOrder> GetPensionApplicationTerminationOrderAsync(long ID) {
            return base.Channel.GetPensionApplicationTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.PensionApplicationOrder GetPensionApplicationOrder(long ID) {
            return base.Channel.GetPensionApplicationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PensionApplicationOrder> GetPensionApplicationOrderAsync(long ID) {
            return base.Channel.GetPensionApplicationOrderAsync(ID);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetClosedDepositAccountList(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetClosedDepositAccountList(order);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetClosedDepositAccountListAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetClosedDepositAccountListAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveTransferCallContractOrder(Test.ServiceReference1.TransferCallContractOrder order) {
            return base.Channel.SaveAndApproveTransferCallContractOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransferCallContractOrderAsync(Test.ServiceReference1.TransferCallContractOrder order) {
            return base.Channel.SaveAndApproveTransferCallContractOrderAsync(order);
        }
        
        public Test.ServiceReference1.TransferCallContractOrder GetTransferCallContractOrder(long ID) {
            return base.Channel.GetTransferCallContractOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContractOrder> GetTransferCallContractOrderAsync(long ID) {
            return base.Channel.GetTransferCallContractOrderAsync(ID);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.TransferCallContractDetails> GetTransferCallContractsDetails() {
            return base.Channel.GetTransferCallContractsDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TransferCallContractDetails>> GetTransferCallContractsDetailsAsync() {
            return base.Channel.GetTransferCallContractsDetailsAsync();
        }
        
        public System.Collections.Generic.List<int> GetTransferCriminalLogId(ulong id) {
            return base.Channel.GetTransferCriminalLogId(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetTransferCriminalLogIdAsync(ulong id) {
            return base.Channel.GetTransferCriminalLogIdAsync(id);
        }
        
        public Test.ServiceReference1.ActionResult UpdateTransferVerifiedStatus(ulong transferId, int verified) {
            return base.Channel.UpdateTransferVerifiedStatus(transferId, verified);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> UpdateTransferVerifiedStatusAsync(ulong transferId, int verified) {
            return base.Channel.UpdateTransferVerifiedStatusAsync(transferId, verified);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveReestrTransferOrder(Test.ServiceReference1.ReestrTransferOrder order) {
            return base.Channel.SaveAndApproveReestrTransferOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReestrTransferOrderAsync(Test.ServiceReference1.ReestrTransferOrder order) {
            return base.Channel.SaveAndApproveReestrTransferOrderAsync(order);
        }
        
        public Test.ServiceReference1.ReestrTransferOrder GetReestrTransferOrder(long id) {
            return base.Channel.GetReestrTransferOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ReestrTransferOrder> GetReestrTransferOrderAsync(long id) {
            return base.Channel.GetReestrTransferOrderAsync(id);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Order> GetNotConfirmedOrders(int start, int end) {
            return base.Channel.GetNotConfirmedOrders(start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetNotConfirmedOrdersAsync(int start, int end) {
            return base.Channel.GetNotConfirmedOrdersAsync(start, end);
        }
        
        public Test.ServiceReference1.TransferCallContractDetails GetTransferCallContractDetails(long contractId) {
            return base.Channel.GetTransferCallContractDetails(contractId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContractDetails> GetTransferCallContractDetailsAsync(long contractId) {
            return base.Channel.GetTransferCallContractDetailsAsync(contractId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongdouble> GetAccountJointCustomers(string accountNumber) {
            return base.Channel.GetAccountJointCustomers(accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfunsignedLongdouble>> GetAccountJointCustomersAsync(string accountNumber) {
            return base.Channel.GetAccountJointCustomersAsync(accountNumber);
        }
        
        public Test.ServiceReference1.ActionResult GenerateAndMakeSwitMessageByPeriodicTransfer(System.DateTime statementDate, System.DateTime dateFrom, System.DateTime dateTo, ulong periodicTransferId) {
            return base.Channel.GenerateAndMakeSwitMessageByPeriodicTransfer(statementDate, dateFrom, dateTo, periodicTransferId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> GenerateAndMakeSwitMessageByPeriodicTransferAsync(System.DateTime statementDate, System.DateTime dateFrom, System.DateTime dateTo, ulong periodicTransferId) {
            return base.Channel.GenerateAndMakeSwitMessageByPeriodicTransferAsync(statementDate, dateFrom, dateTo, periodicTransferId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.TransferCallContract> GetContractsForTransfersCall(string customerNumber, string accountNumber, string cardNumber) {
            return base.Channel.GetContractsForTransfersCall(customerNumber, accountNumber, cardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TransferCallContract>> GetContractsForTransfersCallAsync(string customerNumber, string accountNumber, string cardNumber) {
            return base.Channel.GetContractsForTransfersCallAsync(customerNumber, accountNumber, cardNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.TupleOfstringstring> GetCustomerAuthorizationData(ulong customerNumber) {
            return base.Channel.GetCustomerAuthorizationData(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.TupleOfstringstring>> GetCustomerAuthorizationDataAsync(ulong customerNumber) {
            return base.Channel.GetCustomerAuthorizationDataAsync(customerNumber);
        }
        
        public Test.ServiceReference1.AuthorizedCustomer AuthorizeCustomer(ulong customerNumber, string authorizedUserSessionToken) {
            return base.Channel.AuthorizeCustomer(customerNumber, authorizedUserSessionToken);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AuthorizedCustomer> AuthorizeCustomerAsync(ulong customerNumber, string authorizedUserSessionToken) {
            return base.Channel.AuthorizeCustomerAsync(customerNumber, authorizedUserSessionToken);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail> GetOverdueDetails() {
            return base.Channel.GetOverdueDetails();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail>> GetOverdueDetailsAsync() {
            return base.Channel.GetOverdueDetailsAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail> GetCurrentProductOverdueDetails(long productId) {
            return base.Channel.GetCurrentProductOverdueDetails(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OverdueDetail>> GetCurrentProductOverdueDetailsAsync(long productId) {
            return base.Channel.GetCurrentProductOverdueDetailsAsync(productId);
        }
        
        public bool Init(string authorizedCustomerSessionID, byte language, string clientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source, Test.ServiceReference1.ServiceType serviceType) {
            return base.Channel.Init(authorizedCustomerSessionID, language, clientIp, user, source, serviceType);
        }
        
        public System.Threading.Tasks.Task<bool> InitAsync(string authorizedCustomerSessionID, byte language, string clientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source, Test.ServiceReference1.ServiceType serviceType) {
            return base.Channel.InitAsync(authorizedCustomerSessionID, language, clientIp, user, source, serviceType);
        }
        
        public ulong GetAuthorizedCustomerNumber() {
            return base.Channel.GetAuthorizedCustomerNumber();
        }
        
        public System.Threading.Tasks.Task<ulong> GetAuthorizedCustomerNumberAsync() {
            return base.Channel.GetAuthorizedCustomerNumberAsync();
        }
        
        public Test.ServiceReference1.TransferCallContract GetContractDetails(long contractId) {
            return base.Channel.GetContractDetails(contractId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferCallContract> GetContractDetailsAsync(long contractId) {
            return base.Channel.GetContractDetailsAsync(contractId);
        }
        
        public void SaveExternalBankingLogOutHistory(string authorizedUserSessionToken) {
            base.Channel.SaveExternalBankingLogOutHistory(authorizedUserSessionToken);
        }
        
        public System.Threading.Tasks.Task SaveExternalBankingLogOutHistoryAsync(string authorizedUserSessionToken) {
            return base.Channel.SaveExternalBankingLogOutHistoryAsync(authorizedUserSessionToken);
        }
        
        public Test.ServiceReference1.ActionResult SendAutorizationSMS() {
            return base.Channel.SendAutorizationSMS();
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SendAutorizationSMSAsync() {
            return base.Channel.SendAutorizationSMSAsync();
        }
        
        public Test.ServiceReference1.ActionResult VerifyAuthorizationSMS(string smsCode) {
            return base.Channel.VerifyAuthorizationSMS(smsCode);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> VerifyAuthorizationSMSAsync(string smsCode) {
            return base.Channel.VerifyAuthorizationSMSAsync(smsCode);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate> GetExchangeRates() {
            return base.Channel.GetExchangeRates();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ExchangeRate>> GetExchangeRatesAsync() {
            return base.Channel.GetExchangeRatesAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.AttachmentDocument> GetHBAttachmentsInfo(ulong documentId) {
            return base.Channel.GetHBAttachmentsInfo(documentId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AttachmentDocument>> GetHBAttachmentsInfoAsync(ulong documentId) {
            return base.Channel.GetHBAttachmentsInfoAsync(documentId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ProductDocument> GetProductDocuments(ulong productId) {
            return base.Channel.GetProductDocuments(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ProductDocument>> GetProductDocumentsAsync(ulong productId) {
            return base.Channel.GetProductDocumentsAsync(productId);
        }
        
        public byte[] GetOneHBAttachment(ulong id) {
            return base.Channel.GetOneHBAttachment(id);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetOneHBAttachmentAsync(ulong id) {
            return base.Channel.GetOneHBAttachmentAsync(id);
        }
        
        public double GetCBKursForDate(System.DateTime date, string currency) {
            return base.Channel.GetCBKursForDate(date, currency);
        }
        
        public System.Threading.Tasks.Task<double> GetCBKursForDateAsync(System.DateTime date, string currency) {
            return base.Channel.GetCBKursForDateAsync(date, currency);
        }
        
        public double GetMRFeeAMD(string cardNumber) {
            return base.Channel.GetMRFeeAMD(cardNumber);
        }
        
        public System.Threading.Tasks.Task<double> GetMRFeeAMDAsync(string cardNumber) {
            return base.Channel.GetMRFeeAMDAsync(cardNumber);
        }
        
        public double GetCardTotalDebt(string cardNumber) {
            return base.Channel.GetCardTotalDebt(cardNumber);
        }
        
        public System.Threading.Tasks.Task<double> GetCardTotalDebtAsync(string cardNumber) {
            return base.Channel.GetCardTotalDebtAsync(cardNumber);
        }
        
        public double GetPetTurk(long productId) {
            return base.Channel.GetPetTurk(productId);
        }
        
        public System.Threading.Tasks.Task<double> GetPetTurkAsync(long productId) {
            return base.Channel.GetPetTurkAsync(productId);
        }
        
        public System.DateTime GetNextOperDay() {
            return base.Channel.GetNextOperDay();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetNextOperDayAsync() {
            return base.Channel.GetNextOperDayAsync();
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveMatureOrder(Test.ServiceReference1.MatureOrder order) {
            return base.Channel.SaveAndApproveMatureOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveMatureOrderAsync(Test.ServiceReference1.MatureOrder order) {
            return base.Channel.SaveAndApproveMatureOrderAsync(order);
        }
        
        public Test.ServiceReference1.MatureOrder GetMatureOrder(long ID) {
            return base.Channel.GetMatureOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.MatureOrder> GetMatureOrderAsync(long ID) {
            return base.Channel.GetMatureOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveAccountOrder(Test.ServiceReference1.AccountOrder order) {
            return base.Channel.SaveAccountOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAccountOrderAsync(Test.ServiceReference1.AccountOrder order) {
            return base.Channel.SaveAccountOrderAsync(order);
        }
        
        public Test.ServiceReference1.AccountOrder GetAccountOrder(long ID) {
            return base.Channel.GetAccountOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountOrder> GetAccountOrderAsync(long ID) {
            return base.Channel.GetAccountOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveAccountOrder(Test.ServiceReference1.AccountOrder order) {
            return base.Channel.ApproveAccountOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveAccountOrderAsync(Test.ServiceReference1.AccountOrder order) {
            return base.Channel.ApproveAccountOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountOrder(Test.ServiceReference1.AccountOrder order) {
            return base.Channel.SaveAndApproveAccountOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountOrderAsync(Test.ServiceReference1.AccountOrder order) {
            return base.Channel.SaveAndApproveAccountOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SavePeriodicUtilityPaymentOrder(Test.ServiceReference1.PeriodicUtilityPaymentOrder order) {
            return base.Channel.SavePeriodicUtilityPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicUtilityPaymentOrderAsync(Test.ServiceReference1.PeriodicUtilityPaymentOrder order) {
            return base.Channel.SavePeriodicUtilityPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SavePeriodicPaymentOrder(Test.ServiceReference1.PeriodicPaymentOrder order) {
            return base.Channel.SavePeriodicPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicPaymentOrderAsync(Test.ServiceReference1.PeriodicPaymentOrder order) {
            return base.Channel.SavePeriodicPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndAprovePeriodicUtilityPaymentOrder(Test.ServiceReference1.PeriodicUtilityPaymentOrder order) {
            return base.Channel.SaveAndAprovePeriodicUtilityPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicUtilityPaymentOrderAsync(Test.ServiceReference1.PeriodicUtilityPaymentOrder order) {
            return base.Channel.SaveAndAprovePeriodicUtilityPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndAprovePeriodicPaymentOrder(Test.ServiceReference1.PeriodicPaymentOrder order) {
            return base.Channel.SaveAndAprovePeriodicPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicPaymentOrderAsync(Test.ServiceReference1.PeriodicPaymentOrder order) {
            return base.Channel.SaveAndAprovePeriodicPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveMatureOrder(Test.ServiceReference1.MatureOrder order) {
            return base.Channel.SaveMatureOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveMatureOrderAsync(Test.ServiceReference1.MatureOrder order) {
            return base.Channel.SaveMatureOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveMatureOrder(Test.ServiceReference1.MatureOrder order) {
            return base.Channel.ApproveMatureOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveMatureOrderAsync(Test.ServiceReference1.MatureOrder order) {
            return base.Channel.ApproveMatureOrderAsync(order);
        }
        
        public bool IsPoliceAccount(string accountNumber) {
            return base.Channel.IsPoliceAccount(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsPoliceAccountAsync(string accountNumber) {
            return base.Channel.IsPoliceAccountAsync(accountNumber);
        }
        
        public bool CheckAccountForPSN(string accountNumber) {
            return base.Channel.CheckAccountForPSN(accountNumber);
        }
        
        public System.Threading.Tasks.Task<bool> CheckAccountForPSNAsync(string accountNumber) {
            return base.Channel.CheckAccountForPSNAsync(accountNumber);
        }
        
        public Test.ServiceReference1.MembershipRewards GetCardMembershipRewards(string cardNumber) {
            return base.Channel.GetCardMembershipRewards(cardNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.MembershipRewards> GetCardMembershipRewardsAsync(string cardNumber) {
            return base.Channel.GetCardMembershipRewardsAsync(cardNumber);
        }
        
        public Test.ServiceReference1.Guarantee GetGuarantee(ulong productId) {
            return base.Channel.GetGuarantee(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Guarantee> GetGuaranteeAsync(ulong productId) {
            return base.Channel.GetGuaranteeAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Guarantee> GetGuarantees(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetGuarantees(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Guarantee>> GetGuaranteesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetGuaranteesAsync(filter);
        }
        
        public Test.ServiceReference1.Accreditive GetAccreditive(ulong productId) {
            return base.Channel.GetAccreditive(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Accreditive> GetAccreditiveAsync(ulong productId) {
            return base.Channel.GetAccreditiveAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Accreditive> GetAccreditives(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetAccreditives(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Accreditive>> GetAccreditivesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetAccreditivesAsync(filter);
        }
        
        public Test.ServiceReference1.PaidGuarantee GetPaidGuarantee(ulong productId) {
            return base.Channel.GetPaidGuarantee(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PaidGuarantee> GetPaidGuaranteeAsync(ulong productId) {
            return base.Channel.GetPaidGuaranteeAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PaidGuarantee> GetPaidGuarantees(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPaidGuarantees(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PaidGuarantee>> GetPaidGuaranteesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPaidGuaranteesAsync(filter);
        }
        
        public Test.ServiceReference1.PaidAccreditive GetPaidAccreditive(ulong productId) {
            return base.Channel.GetPaidAccreditive(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PaidAccreditive> GetPaidAccreditiveAsync(ulong productId) {
            return base.Channel.GetPaidAccreditiveAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PaidAccreditive> GetPaidAccreditives(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPaidAccreditives(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PaidAccreditive>> GetPaidAccreditivesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPaidAccreditivesAsync(filter);
        }
        
        public Test.ServiceReference1.Factoring GetFactoring(ulong productId) {
            return base.Channel.GetFactoring(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Factoring> GetFactoringAsync(ulong productId) {
            return base.Channel.GetFactoringAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Factoring> GetFactorings(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetFactorings(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Factoring>> GetFactoringsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetFactoringsAsync(filter);
        }
        
        public Test.ServiceReference1.PaidFactoring GetPaidFactoring(ulong productId) {
            return base.Channel.GetPaidFactoring(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PaidFactoring> GetPaidFactoringAsync(ulong productId) {
            return base.Channel.GetPaidFactoringAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PaidFactoring> GetPaidFactorings(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPaidFactorings(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PaidFactoring>> GetPaidFactoringsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPaidFactoringsAsync(filter);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchAccountResult> GetSearchedAccounts(Test.ServiceReference1.SearchAccounts searchParams) {
            return base.Channel.GetSearchedAccounts(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchAccountResult>> GetSearchedAccountsAsync(Test.ServiceReference1.SearchAccounts searchParams) {
            return base.Channel.GetSearchedAccountsAsync(searchParams);
        }
        
        public Test.ServiceReference1.ActionResult CloseAccountOrder(Test.ServiceReference1.AccountClosingOrder order) {
            return base.Channel.CloseAccountOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CloseAccountOrderAsync(Test.ServiceReference1.AccountClosingOrder order) {
            return base.Channel.CloseAccountOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveAccountClosing(Test.ServiceReference1.AccountClosingOrder order) {
            return base.Channel.ApproveAccountClosing(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveAccountClosingAsync(Test.ServiceReference1.AccountClosingOrder order) {
            return base.Channel.ApproveAccountClosingAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountClosing(Test.ServiceReference1.AccountClosingOrder order) {
            return base.Channel.SaveAndApproveAccountClosing(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountClosingAsync(Test.ServiceReference1.AccountClosingOrder order) {
            return base.Channel.SaveAndApproveAccountClosingAsync(order);
        }
        
        public Test.ServiceReference1.AccountClosingOrder GetAccountClosingOrder(long ID) {
            return base.Channel.GetAccountClosingOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountClosingOrder> GetAccountClosingOrderAsync(long ID) {
            return base.Channel.GetAccountClosingOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApprovePeriodicPaymentOrder(Test.ServiceReference1.Order order) {
            return base.Channel.ApprovePeriodicPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicPaymentOrderAsync(Test.ServiceReference1.Order order) {
            return base.Channel.ApprovePeriodicPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApprovePeriodicUtilityPaymentOrder(Test.ServiceReference1.PeriodicUtilityPaymentOrder order) {
            return base.Channel.ApprovePeriodicUtilityPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicUtilityPaymentOrderAsync(Test.ServiceReference1.PeriodicUtilityPaymentOrder order) {
            return base.Channel.ApprovePeriodicUtilityPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndAprovePeriodicBudgetPaymentOrder(Test.ServiceReference1.PeriodicBudgetPaymentOrder order) {
            return base.Channel.SaveAndAprovePeriodicBudgetPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndAprovePeriodicBudgetPaymentOrderAsync(Test.ServiceReference1.PeriodicBudgetPaymentOrder order) {
            return base.Channel.SaveAndAprovePeriodicBudgetPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApprovePeriodicBudgetPaymentOrder(Test.ServiceReference1.PeriodicBudgetPaymentOrder order) {
            return base.Channel.ApprovePeriodicBudgetPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicBudgetPaymentOrderAsync(Test.ServiceReference1.PeriodicBudgetPaymentOrder order) {
            return base.Channel.ApprovePeriodicBudgetPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SavePeriodicBudgetPaymentOrder(Test.ServiceReference1.PeriodicBudgetPaymentOrder order) {
            return base.Channel.SavePeriodicBudgetPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicBudgetPaymentOrderAsync(Test.ServiceReference1.PeriodicBudgetPaymentOrder order) {
            return base.Channel.SavePeriodicBudgetPaymentOrderAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchCardResult> GetSearchedCards(Test.ServiceReference1.SearchCards searchParams) {
            return base.Channel.GetSearchedCards(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchCardResult>> GetSearchedCardsAsync(Test.ServiceReference1.SearchCards searchParams) {
            return base.Channel.GetSearchedCardsAsync(searchParams);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.SearchSwiftCodes> GetSearchedSwiftCodes(Test.ServiceReference1.SearchSwiftCodes searchParams) {
            return base.Channel.GetSearchedSwiftCodes(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.SearchSwiftCodes>> GetSearchedSwiftCodesAsync(Test.ServiceReference1.SearchSwiftCodes searchParams) {
            return base.Channel.GetSearchedSwiftCodesAsync(searchParams);
        }
        
        public Test.ServiceReference1.ActionResult SaveCardClosingOrder(Test.ServiceReference1.CardClosingOrder order) {
            return base.Channel.SaveCardClosingOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCardClosingOrderAsync(Test.ServiceReference1.CardClosingOrder order) {
            return base.Channel.SaveCardClosingOrderAsync(order);
        }
        
        public Test.ServiceReference1.CardClosingOrder GetCardClosingOrder(long ID) {
            return base.Channel.GetCardClosingOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardClosingOrder> GetCardClosingOrderAsync(long ID) {
            return base.Channel.GetCardClosingOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveCardClosingOrder(Test.ServiceReference1.CardClosingOrder order) {
            return base.Channel.ApproveCardClosingOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCardClosingOrderAsync(Test.ServiceReference1.CardClosingOrder order) {
            return base.Channel.ApproveCardClosingOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCardClosingOrder(Test.ServiceReference1.CardClosingOrder order) {
            return base.Channel.SaveAndApproveCardClosingOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCardClosingOrderAsync(Test.ServiceReference1.CardClosingOrder order) {
            return base.Channel.SaveAndApproveCardClosingOrderAsync(order);
        }
        
        public System.Collections.Generic.List<string> GetCardClosingWarnings(ulong productId) {
            return base.Channel.GetCardClosingWarnings(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCardClosingWarningsAsync(ulong productId) {
            return base.Channel.GetCardClosingWarningsAsync(productId);
        }
        
        public System.Collections.Generic.List<string> GetCredentialClosingWarnings(ulong assignId) {
            return base.Channel.GetCredentialClosingWarnings(assignId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCredentialClosingWarningsAsync(ulong assignId) {
            return base.Channel.GetCredentialClosingWarningsAsync(assignId);
        }
        
        public Test.ServiceReference1.PeriodicBudgetPaymentOrder GetPeriodicBudgetPaymentOrder(long ID) {
            return base.Channel.GetPeriodicBudgetPaymentOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicBudgetPaymentOrder> GetPeriodicBudgetPaymentOrderAsync(long ID) {
            return base.Channel.GetPeriodicBudgetPaymentOrderAsync(ID);
        }
        
        public Test.ServiceReference1.PeriodicUtilityPaymentOrder GetPeriodicUtilityPaymentOrder(long ID) {
            return base.Channel.GetPeriodicUtilityPaymentOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicUtilityPaymentOrder> GetPeriodicUtilityPaymentOrderAsync(long ID) {
            return base.Channel.GetPeriodicUtilityPaymentOrderAsync(ID);
        }
        
        public Test.ServiceReference1.PeriodicPaymentOrder GetPeriodicPaymentOrder(long ID) {
            return base.Channel.GetPeriodicPaymentOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicPaymentOrder> GetPeriodicPaymentOrderAsync(long ID) {
            return base.Channel.GetPeriodicPaymentOrderAsync(ID);
        }
        
        public System.Collections.Generic.List<string> GetReceiverAccountWarnings(string accountNumber) {
            return base.Channel.GetReceiverAccountWarnings(accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetReceiverAccountWarningsAsync(string accountNumber) {
            return base.Channel.GetReceiverAccountWarningsAsync(accountNumber);
        }
        
        public Test.ServiceReference1.PeriodicTerminationOrder GetPeriodicTerminationOrder(long ID) {
            return base.Channel.GetPeriodicTerminationOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicTerminationOrder> GetPeriodicTerminationOrderAsync(long ID) {
            return base.Channel.GetPeriodicTerminationOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApprovePeriodicTerminationOrder(Test.ServiceReference1.PeriodicTerminationOrder order) {
            return base.Channel.ApprovePeriodicTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePeriodicTerminationOrderAsync(Test.ServiceReference1.PeriodicTerminationOrder order) {
            return base.Channel.ApprovePeriodicTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApprovePeriodicTerminationOrder(Test.ServiceReference1.PeriodicTerminationOrder order) {
            return base.Channel.SaveAndApprovePeriodicTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePeriodicTerminationOrderAsync(Test.ServiceReference1.PeriodicTerminationOrder order) {
            return base.Channel.SaveAndApprovePeriodicTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SavePeriodicTerminationOrder(Test.ServiceReference1.PeriodicTerminationOrder order) {
            return base.Channel.SavePeriodicTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePeriodicTerminationOrderAsync(Test.ServiceReference1.PeriodicTerminationOrder order) {
            return base.Channel.SavePeriodicTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountReOpenOrder(Test.ServiceReference1.AccountReOpenOrder order) {
            return base.Channel.SaveAndApproveAccountReOpenOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountReOpenOrderAsync(Test.ServiceReference1.AccountReOpenOrder order) {
            return base.Channel.SaveAndApproveAccountReOpenOrderAsync(order);
        }
        
        public Test.ServiceReference1.AccountReOpenOrder GetAccountReOpenOrder(long ID) {
            return base.Channel.GetAccountReOpenOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountReOpenOrder> GetAccountReOpenOrderAsync(long ID) {
            return base.Channel.GetAccountReOpenOrderAsync(ID);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountsForNewDeposit(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetAccountsForNewDeposit(order);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsForNewDepositAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetAccountsForNewDepositAsync(order);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails> GetAccountAdditionalDetails(string accountNumber) {
            return base.Channel.GetAccountAdditionalDetails(accountNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AdditionalDetails>> GetAccountAdditionalDetailsAsync(string accountNumber) {
            return base.Channel.GetAccountAdditionalDetailsAsync(accountNumber);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAccountAdditionsTypes() {
            return base.Channel.GetAccountAdditionsTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAccountAdditionsTypesAsync() {
            return base.Channel.GetAccountAdditionsTypesAsync();
        }
        
        public string CreateSerialNumber(int currencyCode, byte operationType) {
            return base.Channel.CreateSerialNumber(currencyCode, operationType);
        }
        
        public System.Threading.Tasks.Task<string> CreateSerialNumberAsync(int currencyCode, byte operationType) {
            return base.Channel.CreateSerialNumberAsync(currencyCode, operationType);
        }
        
        public ulong GenerateNewOrderNumber(Test.ServiceReference1.OrderNumberTypes orderNumberType, ushort filialCode) {
            return base.Channel.GenerateNewOrderNumber(orderNumberType, filialCode);
        }
        
        public System.Threading.Tasks.Task<ulong> GenerateNewOrderNumberAsync(Test.ServiceReference1.OrderNumberTypes orderNumberType, ushort filialCode) {
            return base.Channel.GenerateNewOrderNumberAsync(orderNumberType, filialCode);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfstringstring> GetCommunalReportParameters(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.GetCommunalReportParameters(searchCommunal);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.KeyValuePairOfstringstring>> GetCommunalReportParametersAsync(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.GetCommunalReportParametersAsync(searchCommunal);
        }
        
        public System.Collections.Generic.List<string> GetAccountOpenWarnings() {
            return base.Channel.GetAccountOpenWarnings();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetAccountOpenWarningsAsync() {
            return base.Channel.GetAccountOpenWarningsAsync();
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveAccountDataChangeOrder(Test.ServiceReference1.AccountDataChangeOrder order) {
            return base.Channel.SaveAndApproveAccountDataChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveAccountDataChangeOrderAsync(Test.ServiceReference1.AccountDataChangeOrder order) {
            return base.Channel.SaveAndApproveAccountDataChangeOrderAsync(order);
        }
        
        public string GetCommunalPaymentDescription(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.GetCommunalPaymentDescription(searchCommunal);
        }
        
        public System.Threading.Tasks.Task<string> GetCommunalPaymentDescriptionAsync(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.GetCommunalPaymentDescriptionAsync(searchCommunal);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.OPPerson> GetOrderOPPersons(string accountNumber, Test.ServiceReference1.OrderType orderType) {
            return base.Channel.GetOrderOPPersons(accountNumber, orderType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OPPerson>> GetOrderOPPersonsAsync(string accountNumber, Test.ServiceReference1.OrderType orderType) {
            return base.Channel.GetOrderOPPersonsAsync(accountNumber, orderType);
        }
        
        public int GetAccountStatementDeliveryType(string accountNumber) {
            return base.Channel.GetAccountStatementDeliveryType(accountNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetAccountStatementDeliveryTypeAsync(string accountNumber) {
            return base.Channel.GetAccountStatementDeliveryTypeAsync(accountNumber);
        }
        
        public bool IsPrepaidArmenTell(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.IsPrepaidArmenTell(searchCommunal);
        }
        
        public System.Threading.Tasks.Task<bool> IsPrepaidArmenTellAsync(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.IsPrepaidArmenTellAsync(searchCommunal);
        }
        
        public System.Collections.Generic.List<string> GetCustomerDocumentWarnings(ulong customerNumber) {
            return base.Channel.GetCustomerDocumentWarnings(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCustomerDocumentWarningsAsync(ulong customerNumber) {
            return base.Channel.GetCustomerDocumentWarningsAsync(customerNumber);
        }
        
        public double GetThreeMonthLoanRate(ulong productId) {
            return base.Channel.GetThreeMonthLoanRate(productId);
        }
        
        public System.Threading.Tasks.Task<double> GetThreeMonthLoanRateAsync(ulong productId) {
            return base.Channel.GetThreeMonthLoanRateAsync(productId);
        }
        
        public double GetLoanMatureCapitalPenalty(Test.ServiceReference1.MatureOrder order, Test.ServiceReference1.User user) {
            return base.Channel.GetLoanMatureCapitalPenalty(order, user);
        }
        
        public System.Threading.Tasks.Task<double> GetLoanMatureCapitalPenaltyAsync(Test.ServiceReference1.MatureOrder order, Test.ServiceReference1.User user) {
            return base.Channel.GetLoanMatureCapitalPenaltyAsync(order, user);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.OrderAttachment> GetOrderAttachments(long orderId) {
            return base.Channel.GetOrderAttachments(orderId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OrderAttachment>> GetOrderAttachmentsAsync(long orderId) {
            return base.Channel.GetOrderAttachmentsAsync(orderId);
        }
        
        public Test.ServiceReference1.OrderAttachment GetOrderAttachment(string attachmentId) {
            return base.Channel.GetOrderAttachment(attachmentId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.OrderAttachment> GetOrderAttachmentAsync(string attachmentId) {
            return base.Channel.GetOrderAttachmentAsync(attachmentId);
        }
        
        public Test.ServiceReference1.OrderAttachment GetTransferAttachmentInfo(long Id) {
            return base.Channel.GetTransferAttachmentInfo(Id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.OrderAttachment> GetTransferAttachmentInfoAsync(long Id) {
            return base.Channel.GetTransferAttachmentInfoAsync(Id);
        }
        
        public Test.ServiceReference1.OrderAttachment GetTransferAttachment(ulong attachmentId) {
            return base.Channel.GetTransferAttachment(attachmentId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.OrderAttachment> GetTransferAttachmentAsync(ulong attachmentId) {
            return base.Channel.GetTransferAttachmentAsync(attachmentId);
        }
        
        public Test.ServiceReference1.AccountDataChangeOrder GetAccountDataChangeOrder(long ID) {
            return base.Channel.GetAccountDataChangeOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountDataChangeOrder> GetAccountDataChangeOrderAsync(long ID) {
            return base.Channel.GetAccountDataChangeOrderAsync(ID);
        }
        
        public Test.ServiceReference1.TupleOfbooleanstring IsBigAmountForPaymentOrder(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.IsBigAmountForPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TupleOfbooleanstring> IsBigAmountForPaymentOrderAsync(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.IsBigAmountForPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.TupleOfbooleanstring IsBigAmountForCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.IsBigAmountForCurrencyExchangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TupleOfbooleanstring> IsBigAmountForCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.IsBigAmountForCurrencyExchangeOrderAsync(order);
        }
        
        public double GetOrderServiceFee(Test.ServiceReference1.OrderType type, int urgent) {
            return base.Channel.GetOrderServiceFee(type, urgent);
        }
        
        public System.Threading.Tasks.Task<double> GetOrderServiceFeeAsync(Test.ServiceReference1.OrderType type, int urgent) {
            return base.Channel.GetOrderServiceFeeAsync(type, urgent);
        }
        
        public Test.ServiceReference1.ActionResult CheckForTransactionLimit(Test.ServiceReference1.Order order) {
            return base.Channel.CheckForTransactionLimit(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CheckForTransactionLimitAsync(Test.ServiceReference1.Order order) {
            return base.Channel.CheckForTransactionLimitAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveTransitPaymentOrder(Test.ServiceReference1.TransitPaymentOrder order) {
            return base.Channel.SaveAndApproveTransitPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveTransitPaymentOrderAsync(Test.ServiceReference1.TransitPaymentOrder order) {
            return base.Channel.SaveAndApproveTransitPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.TransitPaymentOrder GetTransitPaymentOrder(long ID) {
            return base.Channel.GetTransitPaymentOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransitPaymentOrder> GetTransitPaymentOrderAsync(long ID) {
            return base.Channel.GetTransitPaymentOrderAsync(ID);
        }
        
        public double GetLoanCalculatedRest(Test.ServiceReference1.Loan loan, ulong customerNumber, short matureType) {
            return base.Channel.GetLoanCalculatedRest(loan, customerNumber, matureType);
        }
        
        public System.Threading.Tasks.Task<double> GetLoanCalculatedRestAsync(Test.ServiceReference1.Loan loan, ulong customerNumber, short matureType) {
            return base.Channel.GetLoanCalculatedRestAsync(loan, customerNumber, matureType);
        }
        
        public string GetPaymentOrderDescription(Test.ServiceReference1.PaymentOrder order, ulong customerNumber) {
            return base.Channel.GetPaymentOrderDescription(order, customerNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetPaymentOrderDescriptionAsync(Test.ServiceReference1.PaymentOrder order, ulong customerNumber) {
            return base.Channel.GetPaymentOrderDescriptionAsync(order, customerNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.SaveAndApproveCurrencyExchangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.SaveAndApproveCurrencyExchangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveCurrencyExchangeOrder(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.SaveCurrencyExchangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCurrencyExchangeOrderAsync(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.SaveCurrencyExchangeOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveServicePaymentOrder(Test.ServiceReference1.ServicePaymentOrder order) {
            return base.Channel.SaveAndApproveServicePaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveServicePaymentOrderAsync(Test.ServiceReference1.ServicePaymentOrder order) {
            return base.Channel.SaveAndApproveServicePaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ConfirmOrder(long orderID) {
            return base.Channel.ConfirmOrder(orderID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ConfirmOrderAsync(long orderID) {
            return base.Channel.ConfirmOrderAsync(orderID);
        }
        
        public double GetCustomerCashOuts(string currency) {
            return base.Channel.GetCustomerCashOuts(currency);
        }
        
        public System.Threading.Tasks.Task<double> GetCustomerCashOutsAsync(string currency) {
            return base.Channel.GetCustomerCashOutsAsync(currency);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Order> GetOrders(Test.ServiceReference1.SearchOrders searchParams) {
            return base.Channel.GetOrders(searchParams);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetOrdersAsync(Test.ServiceReference1.SearchOrders searchParams) {
            return base.Channel.GetOrdersAsync(searchParams);
        }
        
        public Test.ServiceReference1.CardServiceFee GetCardServiceFee(ulong productId) {
            return base.Channel.GetCardServiceFee(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardServiceFee> GetCardServiceFeeAsync(ulong productId) {
            return base.Channel.GetCardServiceFeeAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.AccountFreezeDetails> GetAccountFreezeHistory(string accountNumber, ushort freezeStatus, ushort reasonId) {
            return base.Channel.GetAccountFreezeHistory(accountNumber, freezeStatus, reasonId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.AccountFreezeDetails>> GetAccountFreezeHistoryAsync(string accountNumber, ushort freezeStatus, ushort reasonId) {
            return base.Channel.GetAccountFreezeHistoryAsync(accountNumber, freezeStatus, reasonId);
        }
        
        public Test.ServiceReference1.AccountFreezeDetails GetAccountFreezeDetails(string freezeId) {
            return base.Channel.GetAccountFreezeDetails(freezeId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountFreezeDetails> GetAccountFreezeDetailsAsync(string freezeId) {
            return base.Channel.GetAccountFreezeDetailsAsync(freezeId);
        }
        
        public Test.ServiceReference1.Account GetOperationSystemAccount(Test.ServiceReference1.Order order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency, ushort filialCode, string utilityBranch, ulong customerNumber) {
            return base.Channel.GetOperationSystemAccount(order, accountType, operationCurrency, filialCode, utilityBranch, customerNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetOperationSystemAccountAsync(Test.ServiceReference1.Order order, Test.ServiceReference1.OrderAccountType accountType, string operationCurrency, ushort filialCode, string utilityBranch, ulong customerNumber) {
            return base.Channel.GetOperationSystemAccountAsync(order, accountType, operationCurrency, filialCode, utilityBranch, customerNumber);
        }
        
        public Test.ServiceReference1.CurrencyExchangeOrder GetShortChangeAmount(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.GetShortChangeAmount(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CurrencyExchangeOrder> GetShortChangeAmountAsync(Test.ServiceReference1.CurrencyExchangeOrder order) {
            return base.Channel.GetShortChangeAmountAsync(order);
        }
        
        public Test.ServiceReference1.Account GetRAFoundAccount() {
            return base.Channel.GetRAFoundAccount();
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetRAFoundAccountAsync() {
            return base.Channel.GetRAFoundAccountAsync();
        }
        
        public Test.ServiceReference1.AuthorizedUser AuthorizeUserBySessionToken(string authorizedUserSessionToken) {
            return base.Channel.AuthorizeUserBySessionToken(authorizedUserSessionToken);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AuthorizedUser> AuthorizeUserBySessionTokenAsync(string authorizedUserSessionToken) {
            return base.Channel.AuthorizeUserBySessionTokenAsync(authorizedUserSessionToken);
        }
        
        public Test.ServiceReference1.User InitUser(Test.ServiceReference1.AuthorizedUser authUser) {
            return base.Channel.InitUser(authUser);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.User> InitUserAsync(Test.ServiceReference1.AuthorizedUser authUser) {
            return base.Channel.InitUserAsync(authUser);
        }
        
        public ushort GetCrossConvertationVariant(string debitCurrency, string creditCurrency) {
            return base.Channel.GetCrossConvertationVariant(debitCurrency, creditCurrency);
        }
        
        public System.Threading.Tasks.Task<ushort> GetCrossConvertationVariantAsync(string debitCurrency, string creditCurrency) {
            return base.Channel.GetCrossConvertationVariantAsync(debitCurrency, creditCurrency);
        }
        
        public int GetCardType(string cardNumber) {
            return base.Channel.GetCardType(cardNumber);
        }
        
        public System.Threading.Tasks.Task<int> GetCardTypeAsync(string cardNumber) {
            return base.Channel.GetCardTypeAsync(cardNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCashPosPaymentOrder(Test.ServiceReference1.CashPosPaymentOrder order) {
            return base.Channel.SaveAndApproveCashPosPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCashPosPaymentOrderAsync(Test.ServiceReference1.CashPosPaymentOrder order) {
            return base.Channel.SaveAndApproveCashPosPaymentOrderAsync(order);
        }
        
        public double GetCashPosPaymentOrderFee(Test.ServiceReference1.CashPosPaymentOrder order, int feeType) {
            return base.Channel.GetCashPosPaymentOrderFee(order, feeType);
        }
        
        public System.Threading.Tasks.Task<double> GetCashPosPaymentOrderFeeAsync(Test.ServiceReference1.CashPosPaymentOrder order, int feeType) {
            return base.Channel.GetCashPosPaymentOrderFeeAsync(order, feeType);
        }
        
        public Test.ServiceReference1.ActionResult SaveLoanProductOrder(Test.ServiceReference1.LoanProductOrder order) {
            return base.Channel.SaveLoanProductOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveLoanProductOrderAsync(Test.ServiceReference1.LoanProductOrder order) {
            return base.Channel.SaveLoanProductOrderAsync(order);
        }
        
        public Test.ServiceReference1.LoanProductOrder GetLoanOrder(long ID) {
            return base.Channel.GetLoanOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductOrder> GetLoanOrderAsync(long ID) {
            return base.Channel.GetLoanOrderAsync(ID);
        }
        
        public Test.ServiceReference1.LoanProductOrder GetCreditLineOrder(long ID) {
            return base.Channel.GetCreditLineOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.LoanProductOrder> GetCreditLineOrderAsync(long ID) {
            return base.Channel.GetCreditLineOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveLoanProductOrder(Test.ServiceReference1.LoanProductOrder order) {
            return base.Channel.ApproveLoanProductOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveLoanProductOrderAsync(Test.ServiceReference1.LoanProductOrder order) {
            return base.Channel.ApproveLoanProductOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveLoanProductOrder(Test.ServiceReference1.LoanProductOrder order) {
            return base.Channel.SaveAndApproveLoanProductOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveLoanProductOrderAsync(Test.ServiceReference1.LoanProductOrder order) {
            return base.Channel.SaveAndApproveLoanProductOrderAsync(order);
        }
        
        public Test.ServiceReference1.Account GetAccount(string accountNumber) {
            return base.Channel.GetAccount(accountNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetAccountAsync(string accountNumber) {
            return base.Channel.GetAccountAsync(accountNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsAsync() {
            return base.Channel.GetAccountsAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetCurrentAccounts(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCurrentAccounts(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetCurrentAccountsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCurrentAccountsAsync(filter);
        }
        
        public Test.ServiceReference1.AccountStatement AccountStatement(string accountNumber, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.AccountStatement(accountNumber, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.AccountStatement> AccountStatementAsync(string accountNumber, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.AccountStatementAsync(accountNumber, dateFrom, dateTo);
        }
        
        public Test.ServiceReference1.Card GetCard(ulong productId) {
            return base.Channel.GetCard(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Card> GetCardAsync(ulong productId) {
            return base.Channel.GetCardAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Card> GetCards(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCards(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Card>> GetCardsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCardsAsync(filter);
        }
        
        public Test.ServiceReference1.CardStatement GetCardStatement(string cardNumber, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetCardStatement(cardNumber, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CardStatement> GetCardStatementAsync(string cardNumber, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetCardStatementAsync(cardNumber, dateFrom, dateTo);
        }
        
        public Test.ServiceReference1.Loan GetLoan(ulong productId) {
            return base.Channel.GetLoan(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Loan> GetLoanAsync(ulong productId) {
            return base.Channel.GetLoanAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Loan> GetLoans(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetLoans(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Loan>> GetLoansAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetLoansAsync(filter);
        }
        
        public Test.ServiceReference1.Deposit GetDeposit(ulong productId) {
            return base.Channel.GetDeposit(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Deposit> GetDepositAsync(ulong productId) {
            return base.Channel.GetDepositAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Deposit> GetDeposits(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetDeposits(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Deposit>> GetDepositsAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetDepositsAsync(filter);
        }
        
        public Test.ServiceReference1.PeriodicTransfer GetPeriodicTransfer(ulong productId) {
            return base.Channel.GetPeriodicTransfer(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PeriodicTransfer> GetPeriodicTransferAsync(ulong productId) {
            return base.Channel.GetPeriodicTransferAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransfer> GetPeriodicTransfers(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPeriodicTransfers(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransfer>> GetPeriodicTransfersAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetPeriodicTransfersAsync(filter);
        }
        
        public Test.ServiceReference1.KeyValuePairOfstringdouble GetArCaBalance(string cardNumber) {
            return base.Channel.GetArCaBalance(cardNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.KeyValuePairOfstringdouble> GetArCaBalanceAsync(string cardNumber) {
            return base.Channel.GetArCaBalanceAsync(cardNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Order> GetDraftOrders(System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetDraftOrders(dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetDraftOrdersAsync(System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetDraftOrdersAsync(dateFrom, dateTo);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Message> GetMessages(System.DateTime dateFrom, System.DateTime dateTo, short type) {
            return base.Channel.GetMessages(dateFrom, dateTo, type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Message>> GetMessagesAsync(System.DateTime dateFrom, System.DateTime dateTo, short type) {
            return base.Channel.GetMessagesAsync(dateFrom, dateTo, type);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Message> GetNumberOfMessages(short messagesCount, Test.ServiceReference1.MessageType type) {
            return base.Channel.GetNumberOfMessages(messagesCount, type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Message>> GetNumberOfMessagesAsync(short messagesCount, Test.ServiceReference1.MessageType type) {
            return base.Channel.GetNumberOfMessagesAsync(messagesCount, type);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Order> GetSentOrders(System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetSentOrders(dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Order>> GetSentOrdersAsync(System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetSentOrdersAsync(dateFrom, dateTo);
        }
        
        public void AddMessage(Test.ServiceReference1.Message message) {
            base.Channel.AddMessage(message);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(Test.ServiceReference1.Message message) {
            return base.Channel.AddMessageAsync(message);
        }
        
        public void DeleteMessage(int messageId) {
            base.Channel.DeleteMessage(messageId);
        }
        
        public System.Threading.Tasks.Task DeleteMessageAsync(int messageId) {
            return base.Channel.DeleteMessageAsync(messageId);
        }
        
        public void MarkMessageReaded(int messageId) {
            base.Channel.MarkMessageReaded(messageId);
        }
        
        public System.Threading.Tasks.Task MarkMessageReadedAsync(int messageId) {
            return base.Channel.MarkMessageReadedAsync(messageId);
        }
        
        public Test.ServiceReference1.Contact GetContact(ulong contactId) {
            return base.Channel.GetContact(contactId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Contact> GetContactAsync(ulong contactId) {
            return base.Channel.GetContactAsync(contactId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Contact> GetContacts() {
            return base.Channel.GetContacts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Contact>> GetContactsAsync() {
            return base.Channel.GetContactsAsync();
        }
        
        public void AddContact(Test.ServiceReference1.Contact contact) {
            base.Channel.AddContact(contact);
        }
        
        public System.Threading.Tasks.Task AddContactAsync(Test.ServiceReference1.Contact contact) {
            return base.Channel.AddContactAsync(contact);
        }
        
        public void UpdateContact(Test.ServiceReference1.Contact contact) {
            base.Channel.UpdateContact(contact);
        }
        
        public System.Threading.Tasks.Task UpdateContactAsync(Test.ServiceReference1.Contact contact) {
            return base.Channel.UpdateContactAsync(contact);
        }
        
        public void DeleteContact(ulong contactId) {
            base.Channel.DeleteContact(contactId);
        }
        
        public System.Threading.Tasks.Task DeleteContactAsync(ulong contactId) {
            return base.Channel.DeleteContactAsync(contactId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Communal> GetCommunals(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.GetCommunals(searchCommunal);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Communal>> GetCommunalsAsync(Test.ServiceReference1.SearchCommunal searchCommunal) {
            return base.Channel.GetCommunalsAsync(searchCommunal);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CommunalDetails> GetCommunalDetails(short communalType, string abonentNumber, short checkType, string branchCode, Test.ServiceReference1.AbonentTypes abonentType) {
            return base.Channel.GetCommunalDetails(communalType, abonentNumber, checkType, branchCode, abonentType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CommunalDetails>> GetCommunalDetailsAsync(short communalType, string abonentNumber, short checkType, string branchCode, Test.ServiceReference1.AbonentTypes abonentType) {
            return base.Channel.GetCommunalDetailsAsync(communalType, abonentNumber, checkType, branchCode, abonentType);
        }
        
        public Test.ServiceReference1.ActionResult SavePaymentOrder(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.SavePaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SavePaymentOrderAsync(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.SavePaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveBudgetPaymentOrder(Test.ServiceReference1.BudgetPaymentOrder order) {
            return base.Channel.SaveBudgetPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveBudgetPaymentOrderAsync(Test.ServiceReference1.BudgetPaymentOrder order) {
            return base.Channel.SaveBudgetPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.PaymentOrder GetPaymentOrder(long id) {
            return base.Channel.GetPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PaymentOrder> GetPaymentOrderAsync(long id) {
            return base.Channel.GetPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.BudgetPaymentOrder GetBudgetPaymentOrder(long id) {
            return base.Channel.GetBudgetPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.BudgetPaymentOrder> GetBudgetPaymentOrderAsync(long id) {
            return base.Channel.GetBudgetPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.InternationalPaymentOrder GetInternationalPaymentOrder(long id) {
            return base.Channel.GetInternationalPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.InternationalPaymentOrder> GetInternationalPaymentOrderAsync(long id) {
            return base.Channel.GetInternationalPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.FastTransferPaymentOrder GetFastTransferPaymentOrder(long id) {
            return base.Channel.GetFastTransferPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.FastTransferPaymentOrder> GetFastTransferPaymentOrderAsync(long id) {
            return base.Channel.GetFastTransferPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.ReceivedFastTransferPaymentOrder GetReceivedFastTransferPaymentOrder(long id) {
            return base.Channel.GetReceivedFastTransferPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ReceivedFastTransferPaymentOrder> GetReceivedFastTransferPaymentOrderAsync(long id) {
            return base.Channel.GetReceivedFastTransferPaymentOrderAsync(id);
        }
        
        public Test.ServiceReference1.Transfer GetTransfer(ulong id) {
            return base.Channel.GetTransfer(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Transfer> GetTransferAsync(ulong id) {
            return base.Channel.GetTransferAsync(id);
        }
        
        public Test.ServiceReference1.Transfer GetApprovedTransfer(ulong id) {
            return base.Channel.GetApprovedTransfer(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Transfer> GetApprovedTransferAsync(ulong id) {
            return base.Channel.GetApprovedTransferAsync(id);
        }
        
        public Test.ServiceReference1.ReceivedBankMailTransfer GetReceivedBankMailTransfer(ulong id) {
            return base.Channel.GetReceivedBankMailTransfer(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ReceivedBankMailTransfer> GetReceivedBankMailTransferAsync(ulong id) {
            return base.Channel.GetReceivedBankMailTransferAsync(id);
        }
        
        public Test.ServiceReference1.ActionResult ConfirmTransfer(ulong transferID, short allowTransferConfirm) {
            return base.Channel.ConfirmTransfer(transferID, allowTransferConfirm);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ConfirmTransferAsync(ulong transferID, short allowTransferConfirm) {
            return base.Channel.ConfirmTransferAsync(transferID, allowTransferConfirm);
        }
        
        public Test.ServiceReference1.ActionResult DeleteTransfer(ulong transferID) {
            return base.Channel.DeleteTransfer(transferID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> DeleteTransferAsync(ulong transferID) {
            return base.Channel.DeleteTransferAsync(transferID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveTransfer(Test.ServiceReference1.TransferApproveOrder transferApproveOrder) {
            return base.Channel.ApproveTransfer(transferApproveOrder);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveTransferAsync(Test.ServiceReference1.TransferApproveOrder transferApproveOrder) {
            return base.Channel.ApproveTransferAsync(transferApproveOrder);
        }
        
        public double GetLastExchangeRate(string currency, Test.ServiceReference1.RateType rateType, Test.ServiceReference1.ExchangeDirection direction, ushort filalCode) {
            return base.Channel.GetLastExchangeRate(currency, rateType, direction, filalCode);
        }
        
        public System.Threading.Tasks.Task<double> GetLastExchangeRateAsync(string currency, Test.ServiceReference1.RateType rateType, Test.ServiceReference1.ExchangeDirection direction, ushort filalCode) {
            return base.Channel.GetLastExchangeRateAsync(currency, rateType, direction, filalCode);
        }
        
        public double GetFastTransferFeeAcbaPercent(byte transferType) {
            return base.Channel.GetFastTransferFeeAcbaPercent(transferType);
        }
        
        public System.Threading.Tasks.Task<double> GetFastTransferFeeAcbaPercentAsync(byte transferType) {
            return base.Channel.GetFastTransferFeeAcbaPercentAsync(transferType);
        }
        
        public double GetReceivedFastTransferFeePercent(byte transferType, string code, string countryCode, double amount, string currency, System.DateTime date) {
            return base.Channel.GetReceivedFastTransferFeePercent(transferType, code, countryCode, amount, currency, date);
        }
        
        public System.Threading.Tasks.Task<double> GetReceivedFastTransferFeePercentAsync(byte transferType, string code, string countryCode, double amount, string currency, System.DateTime date) {
            return base.Channel.GetReceivedFastTransferFeePercentAsync(transferType, code, countryCode, amount, currency, date);
        }
        
        public byte GetFastTransferAcbaCommisionType(byte transferType, string code) {
            return base.Channel.GetFastTransferAcbaCommisionType(transferType, code);
        }
        
        public System.Threading.Tasks.Task<byte> GetFastTransferAcbaCommisionTypeAsync(byte transferType, string code) {
            return base.Channel.GetFastTransferAcbaCommisionTypeAsync(transferType, code);
        }
        
        public double GetPaymentOrderFee(Test.ServiceReference1.PaymentOrder order, int feeType) {
            return base.Channel.GetPaymentOrderFee(order, feeType);
        }
        
        public System.Threading.Tasks.Task<double> GetPaymentOrderFeeAsync(Test.ServiceReference1.PaymentOrder order, int feeType) {
            return base.Channel.GetPaymentOrderFeeAsync(order, feeType);
        }
        
        public double GetInternationalPaymentOrderFee(Test.ServiceReference1.InternationalPaymentOrder order) {
            return base.Channel.GetInternationalPaymentOrderFee(order);
        }
        
        public System.Threading.Tasks.Task<double> GetInternationalPaymentOrderFeeAsync(Test.ServiceReference1.InternationalPaymentOrder order) {
            return base.Channel.GetInternationalPaymentOrderFeeAsync(order);
        }
        
        public double GetCardFee(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.GetCardFee(order);
        }
        
        public System.Threading.Tasks.Task<double> GetCardFeeAsync(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.GetCardFeeAsync(order);
        }
        
        public Test.ServiceReference1.PaymentOrderFutureBalance GetPaymentOrderFutureBalance(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.GetPaymentOrderFutureBalance(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PaymentOrderFutureBalance> GetPaymentOrderFutureBalanceAsync(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.GetPaymentOrderFutureBalanceAsync(order);
        }
        
        public Test.ServiceReference1.PaymentOrderFutureBalance GetPaymentOrderFutureBalanceById(long id) {
            return base.Channel.GetPaymentOrderFutureBalanceById(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.PaymentOrderFutureBalance> GetPaymentOrderFutureBalanceByIdAsync(long id) {
            return base.Channel.GetPaymentOrderFutureBalanceByIdAsync(id);
        }
        
        public Test.ServiceReference1.ActionResult SaveUtiliyPaymentOrder(Test.ServiceReference1.UtilityPaymentOrder utilityPaymentOrder) {
            return base.Channel.SaveUtiliyPaymentOrder(utilityPaymentOrder);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveUtiliyPaymentOrderAsync(Test.ServiceReference1.UtilityPaymentOrder utilityPaymentOrder) {
            return base.Channel.SaveUtiliyPaymentOrderAsync(utilityPaymentOrder);
        }
        
        public Test.ServiceReference1.ActionResult ApprovePaymentOrder(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.ApprovePaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApprovePaymentOrderAsync(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.ApprovePaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.UtilityPaymentOrder GetUtilityPaymentOrder(long id) {
            return base.Channel.GetUtilityPaymentOrder(id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.UtilityPaymentOrder> GetUtilityPaymentOrderAsync(long id) {
            return base.Channel.GetUtilityPaymentOrderAsync(id);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetAccountsForOrder(short orderType, byte orderSubType, byte accountType) {
            return base.Channel.GetAccountsForOrder(orderType, orderSubType, accountType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetAccountsForOrderAsync(short orderType, byte orderSubType, byte accountType) {
            return base.Channel.GetAccountsForOrderAsync(orderType, orderSubType, accountType);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Account> GetCustomerAccountsForOrder(ulong CustomerNumber, short orderType, byte orderSubType, byte accountType) {
            return base.Channel.GetCustomerAccountsForOrder(CustomerNumber, orderType, orderSubType, accountType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Account>> GetCustomerAccountsForOrderAsync(ulong CustomerNumber, short orderType, byte orderSubType, byte accountType) {
            return base.Channel.GetCustomerAccountsForOrderAsync(CustomerNumber, orderType, orderSubType, accountType);
        }
        
        public Test.ServiceReference1.ActionResult DeleteOrder(Test.ServiceReference1.Order order) {
            return base.Channel.DeleteOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> DeleteOrderAsync(Test.ServiceReference1.Order order) {
            return base.Channel.DeleteOrderAsync(order);
        }
        
        public int GetUnreadedMessagesCount() {
            return base.Channel.GetUnreadedMessagesCount();
        }
        
        public System.Threading.Tasks.Task<int> GetUnreadedMessagesCountAsync() {
            return base.Channel.GetUnreadedMessagesCountAsync();
        }
        
        public void SetUser(Test.ServiceReference1.AuthorizedCustomer authorizedCustomer, byte language, string ClientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source) {
            base.Channel.SetUser(authorizedCustomer, language, ClientIp, user, source);
        }
        
        public System.Threading.Tasks.Task SetUserAsync(Test.ServiceReference1.AuthorizedCustomer authorizedCustomer, byte language, string ClientIp, Test.ServiceReference1.User user, Test.ServiceReference1.SourceType source) {
            return base.Channel.SetUserAsync(authorizedCustomer, language, ClientIp, user, source);
        }
        
        public Test.ServiceReference1.ActionResult ApproveUtilityPaymentOrder(Test.ServiceReference1.UtilityPaymentOrder order) {
            return base.Channel.ApproveUtilityPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveUtilityPaymentOrderAsync(Test.ServiceReference1.UtilityPaymentOrder order) {
            return base.Channel.ApproveUtilityPaymentOrderAsync(order);
        }
        
        public string GetCurrencyCode(string currency) {
            return base.Channel.GetCurrencyCode(currency);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyCodeAsync(string currency) {
            return base.Channel.GetCurrencyCodeAsync(currency);
        }
        
        public int GetUnreadMessagesCountByType(Test.ServiceReference1.MessageType type) {
            return base.Channel.GetUnreadMessagesCountByType(type);
        }
        
        public System.Threading.Tasks.Task<int> GetUnreadMessagesCountByTypeAsync(Test.ServiceReference1.MessageType type) {
            return base.Channel.GetUnreadMessagesCountByTypeAsync(type);
        }
        
        public Test.ServiceReference1.ActionResult SaveDepositOrder(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.SaveDepositOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveDepositOrderAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.SaveDepositOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveDepositTermination(Test.ServiceReference1.DepositTerminationOrder order) {
            return base.Channel.SaveDepositTermination(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveDepositTerminationAsync(Test.ServiceReference1.DepositTerminationOrder order) {
            return base.Channel.SaveDepositTerminationAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCreditLineTerminationOrder(Test.ServiceReference1.CreditLineTerminationOrder order) {
            return base.Channel.SaveAndApproveCreditLineTerminationOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCreditLineTerminationOrderAsync(Test.ServiceReference1.CreditLineTerminationOrder order) {
            return base.Channel.SaveAndApproveCreditLineTerminationOrderAsync(order);
        }
        
        public Test.ServiceReference1.DepositOrder GetDepositorder(long ID) {
            return base.Channel.GetDepositorder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositOrder> GetDepositorderAsync(long ID) {
            return base.Channel.GetDepositorderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult ApproveDepositOrder(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.ApproveDepositOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveDepositOrderAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.ApproveDepositOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveReferenceOrder(Test.ServiceReference1.ReferenceOrder order) {
            return base.Channel.SaveReferenceOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveReferenceOrderAsync(Test.ServiceReference1.ReferenceOrder order) {
            return base.Channel.SaveReferenceOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveReferenceOrder(Test.ServiceReference1.ReferenceOrder order) {
            return base.Channel.ApproveReferenceOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveReferenceOrderAsync(Test.ServiceReference1.ReferenceOrder order) {
            return base.Channel.ApproveReferenceOrderAsync(order);
        }
        
        public Test.ServiceReference1.ReferenceOrder GetReferenceOrder(long ID) {
            return base.Channel.GetReferenceOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ReferenceOrder> GetReferenceOrderAsync(long ID) {
            return base.Channel.GetReferenceOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveChequeBookOrder(Test.ServiceReference1.ChequeBookOrder order) {
            return base.Channel.SaveChequeBookOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveChequeBookOrderAsync(Test.ServiceReference1.ChequeBookOrder order) {
            return base.Channel.SaveChequeBookOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveChequeBookOrder(Test.ServiceReference1.ChequeBookOrder order) {
            return base.Channel.ApproveChequeBookOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveChequeBookOrderAsync(Test.ServiceReference1.ChequeBookOrder order) {
            return base.Channel.ApproveChequeBookOrderAsync(order);
        }
        
        public Test.ServiceReference1.ChequeBookOrder GetChequeBookOrder(long ID) {
            return base.Channel.GetChequeBookOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ChequeBookOrder> GetChequeBookOrderAsync(long ID) {
            return base.Channel.GetChequeBookOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveCashOrder(Test.ServiceReference1.CashOrder order) {
            return base.Channel.SaveCashOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCashOrderAsync(Test.ServiceReference1.CashOrder order) {
            return base.Channel.SaveCashOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveCashOrder(Test.ServiceReference1.CashOrder order) {
            return base.Channel.ApproveCashOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCashOrderAsync(Test.ServiceReference1.CashOrder order) {
            return base.Channel.ApproveCashOrderAsync(order);
        }
        
        public Test.ServiceReference1.CashOrder GetCashOrder(long ID) {
            return base.Channel.GetCashOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CashOrder> GetCashOrderAsync(long ID) {
            return base.Channel.GetCashOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveStatmentByEmailOrder(Test.ServiceReference1.StatmentByEmailOrder order) {
            return base.Channel.SaveStatmentByEmailOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveStatmentByEmailOrderAsync(Test.ServiceReference1.StatmentByEmailOrder order) {
            return base.Channel.SaveStatmentByEmailOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveStatmentByEmailOrder(Test.ServiceReference1.StatmentByEmailOrder order) {
            return base.Channel.ApproveStatmentByEmailOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveStatmentByEmailOrderAsync(Test.ServiceReference1.StatmentByEmailOrder order) {
            return base.Channel.ApproveStatmentByEmailOrderAsync(order);
        }
        
        public Test.ServiceReference1.StatmentByEmailOrder GetStatmentByEmailOrder(long ID) {
            return base.Channel.GetStatmentByEmailOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.StatmentByEmailOrder> GetStatmentByEmailOrderAsync(long ID) {
            return base.Channel.GetStatmentByEmailOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveSwiftCopyOrder(Test.ServiceReference1.SwiftCopyOrder order) {
            return base.Channel.SaveSwiftCopyOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveSwiftCopyOrderAsync(Test.ServiceReference1.SwiftCopyOrder order) {
            return base.Channel.SaveSwiftCopyOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveSwiftCopyOrder(Test.ServiceReference1.SwiftCopyOrder order) {
            return base.Channel.ApproveSwiftCopyOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveSwiftCopyOrderAsync(Test.ServiceReference1.SwiftCopyOrder order) {
            return base.Channel.ApproveSwiftCopyOrderAsync(order);
        }
        
        public Test.ServiceReference1.SwiftCopyOrder GetSwiftCopyOrder(long ID) {
            return base.Channel.GetSwiftCopyOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.SwiftCopyOrder> GetSwiftCopyOrderAsync(long ID) {
            return base.Channel.GetSwiftCopyOrderAsync(ID);
        }
        
        public Test.ServiceReference1.ActionResult SaveCustomerDataOrder(Test.ServiceReference1.CustomerDataOrder order) {
            return base.Channel.SaveCustomerDataOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveCustomerDataOrderAsync(Test.ServiceReference1.CustomerDataOrder order) {
            return base.Channel.SaveCustomerDataOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveCustomerDataOrder(Test.ServiceReference1.CustomerDataOrder order) {
            return base.Channel.ApproveCustomerDataOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveCustomerDataOrderAsync(Test.ServiceReference1.CustomerDataOrder order) {
            return base.Channel.ApproveCustomerDataOrderAsync(order);
        }
        
        public Test.ServiceReference1.CustomerDataOrder GetCustomerDataOrder(long ID) {
            return base.Channel.GetCustomerDataOrder(ID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CustomerDataOrder> GetCustomerDataOrderAsync(long ID) {
            return base.Channel.GetCustomerDataOrderAsync(ID);
        }
        
        public System.Collections.Generic.Dictionary<ulong, string> GetThirdPersons() {
            return base.Channel.GetThirdPersons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<ulong, string>> GetThirdPersonsAsync() {
            return base.Channel.GetThirdPersonsAsync();
        }
        
        public Test.ServiceReference1.ActionResult CheckDepositOrderCondition(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.CheckDepositOrderCondition(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> CheckDepositOrderConditionAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.CheckDepositOrderConditionAsync(order);
        }
        
        public Test.ServiceReference1.DepositOrderCondition GetDepositCondition(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetDepositCondition(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositOrderCondition> GetDepositConditionAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.GetDepositConditionAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult ApproveDepositTermination(Test.ServiceReference1.DepositTerminationOrder order) {
            return base.Channel.ApproveDepositTermination(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> ApproveDepositTerminationAsync(Test.ServiceReference1.DepositTerminationOrder order) {
            return base.Channel.ApproveDepositTerminationAsync(order);
        }
        
        public Test.ServiceReference1.TransferByCallList GetTransfersbyCall(Test.ServiceReference1.TransferByCallFilter filter) {
            return base.Channel.GetTransfersbyCall(filter);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferByCallList> GetTransfersbyCallAsync(Test.ServiceReference1.TransferByCallFilter filter) {
            return base.Channel.GetTransfersbyCallAsync(filter);
        }
        
        public Test.ServiceReference1.TransferByCallList GetCustomerTransfersbyCall(Test.ServiceReference1.TransferByCallFilter filter) {
            return base.Channel.GetCustomerTransfersbyCall(filter);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferByCallList> GetCustomerTransfersbyCallAsync(Test.ServiceReference1.TransferByCallFilter filter) {
            return base.Channel.GetCustomerTransfersbyCallAsync(filter);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.Transfer> GetTransfers(Test.ServiceReference1.TransferFilter filter) {
            return base.Channel.GetTransfers(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.Transfer>> GetTransfersAsync(Test.ServiceReference1.TransferFilter filter) {
            return base.Channel.GetTransfersAsync(filter);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.ReceivedBankMailTransfer> GetReceivedBankMailTransfers(Test.ServiceReference1.TransferFilter filter) {
            return base.Channel.GetReceivedBankMailTransfers(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.ReceivedBankMailTransfer>> GetReceivedBankMailTransfersAsync(Test.ServiceReference1.TransferFilter filter) {
            return base.Channel.GetReceivedBankMailTransfersAsync(filter);
        }
        
        public Test.ServiceReference1.ActionResult SaveTransferbyCall(Test.ServiceReference1.TransferByCall transfer) {
            return base.Channel.SaveTransferbyCall(transfer);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveTransferbyCallAsync(Test.ServiceReference1.TransferByCall transfer) {
            return base.Channel.SaveTransferbyCallAsync(transfer);
        }
        
        public Test.ServiceReference1.ActionResult SendTransfeerCallForPay(ulong transferID) {
            return base.Channel.SendTransfeerCallForPay(transferID);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SendTransfeerCallForPayAsync(ulong transferID) {
            return base.Channel.SendTransfeerCallForPayAsync(transferID);
        }
        
        public Test.ServiceReference1.TransferByCall GetTransferbyCall(long Id) {
            return base.Channel.GetTransferbyCall(Id);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.TransferByCall> GetTransferbyCallAsync(long Id) {
            return base.Channel.GetTransferbyCallAsync(Id);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DepositRepayment> GetDepositRepayments(ulong productId) {
            return base.Channel.GetDepositRepayments(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositRepayment>> GetDepositRepaymentsAsync(ulong productId) {
            return base.Channel.GetDepositRepaymentsAsync(productId);
        }
        
        public bool ManuallyRateChangingAccess(double amount, string currency, string convertationCurrency, Test.ServiceReference1.SourceType sourceType) {
            return base.Channel.ManuallyRateChangingAccess(amount, currency, convertationCurrency, sourceType);
        }
        
        public System.Threading.Tasks.Task<bool> ManuallyRateChangingAccessAsync(double amount, string currency, string convertationCurrency, Test.ServiceReference1.SourceType sourceType) {
            return base.Channel.ManuallyRateChangingAccessAsync(amount, currency, convertationCurrency, sourceType);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik> GetLoanGrafik(Test.ServiceReference1.Loan loan) {
            return base.Channel.GetLoanGrafik(loan);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik>> GetLoanGrafikAsync(Test.ServiceReference1.Loan loan) {
            return base.Channel.GetLoanGrafikAsync(loan);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik> GetLoanInceptiveGrafik(Test.ServiceReference1.Loan loan, ulong customerNumber) {
            return base.Channel.GetLoanInceptiveGrafik(loan, customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.LoanRepaymentGrafik>> GetLoanInceptiveGrafikAsync(Test.ServiceReference1.Loan loan, ulong customerNumber) {
            return base.Channel.GetLoanInceptiveGrafikAsync(loan, customerNumber);
        }
        
        public System.Collections.Generic.List<ulong> GetDepositJointCustomers(ulong productId) {
            return base.Channel.GetDepositJointCustomers(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ulong>> GetDepositJointCustomersAsync(ulong productId) {
            return base.Channel.GetDepositJointCustomersAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransferHistory> GetPeriodicTransferHistory(long ProductId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetPeriodicTransferHistory(ProductId, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.PeriodicTransferHistory>> GetPeriodicTransferHistoryAsync(long ProductId, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.GetPeriodicTransferHistoryAsync(ProductId, dateFrom, dateTo);
        }
        
        public Test.ServiceReference1.CreditLine GetCreditLine(ulong productId) {
            return base.Channel.GetCreditLine(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.CreditLine> GetCreditLineAsync(ulong productId) {
            return base.Channel.GetCreditLineAsync(productId);
        }
        
        public Test.ServiceReference1.HasHB HasACBAOnline() {
            return base.Channel.HasACBAOnline();
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.HasHB> HasACBAOnlineAsync() {
            return base.Channel.HasACBAOnlineAsync();
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CreditLine> GetCreditLines(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCreditLines(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CreditLine>> GetCreditLinesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetCreditLinesAsync(filter);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CreditLine> GetCardClosedCreditLines(string cardNumber) {
            return base.Channel.GetCardClosedCreditLines(cardNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CreditLine>> GetCardClosedCreditLinesAsync(string cardNumber) {
            return base.Channel.GetCardClosedCreditLinesAsync(cardNumber);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CreditLineGrafik> GetCreditLineGrafik(ulong productId) {
            return base.Channel.GetCreditLineGrafik(productId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CreditLineGrafik>> GetCreditLineGrafikAsync(ulong productId) {
            return base.Channel.GetCreditLineGrafikAsync(productId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.DepositCase> GetDepositCases(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetDepositCases(filter);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.DepositCase>> GetDepositCasesAsync(Test.ServiceReference1.ProductQualityFilter filter) {
            return base.Channel.GetDepositCasesAsync(filter);
        }
        
        public Test.ServiceReference1.DepositCase GetDepositCase(ulong productId) {
            return base.Channel.GetDepositCase(productId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.DepositCase> GetDepositCaseAsync(ulong productId) {
            return base.Channel.GetDepositCaseAsync(productId);
        }
        
        public Test.ServiceReference1.ActionResult MakeSwiftStatement(ulong messageUnicNumber, System.DateTime dateStatement, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MakeSwiftStatement(messageUnicNumber, dateStatement, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> MakeSwiftStatementAsync(ulong messageUnicNumber, System.DateTime dateStatement, System.DateTime dateFrom, System.DateTime dateTo) {
            return base.Channel.MakeSwiftStatementAsync(messageUnicNumber, dateStatement, dateFrom, dateTo);
        }
        
        public Test.ServiceReference1.SwiftMessage GenerateNewSwiftMessageByPeriodicTransfer(System.DateTime registrationDate, ulong periodicTransferId) {
            return base.Channel.GenerateNewSwiftMessageByPeriodicTransfer(registrationDate, periodicTransferId);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.SwiftMessage> GenerateNewSwiftMessageByPeriodicTransferAsync(System.DateTime registrationDate, ulong periodicTransferId) {
            return base.Channel.GenerateNewSwiftMessageByPeriodicTransferAsync(registrationDate, periodicTransferId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.OrderHistory> GetOrderHistory(long orderId) {
            return base.Channel.GetOrderHistory(orderId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.OrderHistory>> GetOrderHistoryAsync(long orderId) {
            return base.Channel.GetOrderHistoryAsync(orderId);
        }
        
        public System.Collections.Generic.List<Test.ServiceReference1.CustomerDebts> GetCustomerDebts(ulong customerNumber) {
            return base.Channel.GetCustomerDebts(customerNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test.ServiceReference1.CustomerDebts>> GetCustomerDebtsAsync(ulong customerNumber) {
            return base.Channel.GetCustomerDebtsAsync(customerNumber);
        }
        
        public Test.ServiceReference1.Account GetCurrentAccount(string accountNumber) {
            return base.Channel.GetCurrentAccount(accountNumber);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.Account> GetCurrentAccountAsync(string accountNumber) {
            return base.Channel.GetCurrentAccountAsync(accountNumber);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveDepositOrder(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.SaveAndApproveDepositOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositOrderAsync(Test.ServiceReference1.DepositOrder order) {
            return base.Channel.SaveAndApproveDepositOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveDepositTermination(Test.ServiceReference1.DepositTerminationOrder order) {
            return base.Channel.SaveAndApproveDepositTermination(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveDepositTerminationAsync(Test.ServiceReference1.DepositTerminationOrder order) {
            return base.Channel.SaveAndApproveDepositTerminationAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApprovePaymentOrder(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.SaveAndApprovePaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApprovePaymentOrderAsync(Test.ServiceReference1.PaymentOrder order) {
            return base.Channel.SaveAndApprovePaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveReferenceOrder(Test.ServiceReference1.ReferenceOrder order) {
            return base.Channel.SaveAndApproveReferenceOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReferenceOrderAsync(Test.ServiceReference1.ReferenceOrder order) {
            return base.Channel.SaveAndApproveReferenceOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveChequeBookOrder(Test.ServiceReference1.ChequeBookOrder order) {
            return base.Channel.SaveAndApproveChequeBookOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveChequeBookOrderAsync(Test.ServiceReference1.ChequeBookOrder order) {
            return base.Channel.SaveAndApproveChequeBookOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCashOrder(Test.ServiceReference1.CashOrder order) {
            return base.Channel.SaveAndApproveCashOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCashOrderAsync(Test.ServiceReference1.CashOrder order) {
            return base.Channel.SaveAndApproveCashOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveSwiftCopyOrder(Test.ServiceReference1.SwiftCopyOrder order) {
            return base.Channel.SaveAndApproveSwiftCopyOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveSwiftCopyOrderAsync(Test.ServiceReference1.SwiftCopyOrder order) {
            return base.Channel.SaveAndApproveSwiftCopyOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveStatmentByEmailOrder(Test.ServiceReference1.StatmentByEmailOrder order) {
            return base.Channel.SaveAndApproveStatmentByEmailOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveStatmentByEmailOrderAsync(Test.ServiceReference1.StatmentByEmailOrder order) {
            return base.Channel.SaveAndApproveStatmentByEmailOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCustomerDataOrder(Test.ServiceReference1.CustomerDataOrder order) {
            return base.Channel.SaveAndApproveCustomerDataOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCustomerDataOrderAsync(Test.ServiceReference1.CustomerDataOrder order) {
            return base.Channel.SaveAndApproveCustomerDataOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveUtilityPaymentOrder(Test.ServiceReference1.UtilityPaymentOrder order) {
            return base.Channel.SaveAndApproveUtilityPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveUtilityPaymentOrderAsync(Test.ServiceReference1.UtilityPaymentOrder order) {
            return base.Channel.SaveAndApproveUtilityPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveBudgetPaymentOrder(Test.ServiceReference1.BudgetPaymentOrder order) {
            return base.Channel.SaveAndApproveBudgetPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveBudgetPaymentOrderAsync(Test.ServiceReference1.BudgetPaymentOrder order) {
            return base.Channel.SaveAndApproveBudgetPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveInternationalPaymentOrder(Test.ServiceReference1.InternationalPaymentOrder order) {
            return base.Channel.SaveAndApproveInternationalPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveInternationalPaymentOrderAsync(Test.ServiceReference1.InternationalPaymentOrder order) {
            return base.Channel.SaveAndApproveInternationalPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveFastTransferPaymentOrder(Test.ServiceReference1.FastTransferPaymentOrder order) {
            return base.Channel.SaveAndApproveFastTransferPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveFastTransferPaymentOrderAsync(Test.ServiceReference1.FastTransferPaymentOrder order) {
            return base.Channel.SaveAndApproveFastTransferPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveReceivedFastTransferPaymentOrder(Test.ServiceReference1.ReceivedFastTransferPaymentOrder order) {
            return base.Channel.SaveAndApproveReceivedFastTransferPaymentOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveReceivedFastTransferPaymentOrderAsync(Test.ServiceReference1.ReceivedFastTransferPaymentOrder order) {
            return base.Channel.SaveAndApproveReceivedFastTransferPaymentOrderAsync(order);
        }
        
        public Test.ServiceReference1.ActionResult SaveAndApproveCallTransferChangeOrder(Test.ServiceReference1.TransferByCallChangeOrder order) {
            return base.Channel.SaveAndApproveCallTransferChangeOrder(order);
        }
        
        public System.Threading.Tasks.Task<Test.ServiceReference1.ActionResult> SaveAndApproveCallTransferChangeOrderAsync(Test.ServiceReference1.TransferByCallChangeOrder order) {
            return base.Channel.SaveAndApproveCallTransferChangeOrderAsync(order);
        }
    }
}
